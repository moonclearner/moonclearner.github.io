<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>moonclearner page</title>
  
  <subtitle>moonclearner blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://moonclearner.cn/"/>
  <updated>2019-06-27T09:45:56.414Z</updated>
  <id>https://moonclearner.cn/</id>
  
  <author>
    <name>moonclearner</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git</title>
    <link href="https://moonclearner.cn/git_svn/configure.html"/>
    <id>https://moonclearner.cn/git_svn/configure.html</id>
    <published>2021-04-20T06:20:39.198Z</published>
    <updated>2019-06-27T09:45:56.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看git的远端路径"><a href="#查看git的远端路径" class="headerlink" title="查看git的远端路径"></a>查看git的远端路径</h1><p><code>git remote -v</code></p><h1 id="查看从哪个分支拉下了的"><a href="#查看从哪个分支拉下了的" class="headerlink" title="查看从哪个分支拉下了的"></a>查看从哪个分支拉下了的</h1><p><code>git remote show origin</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;查看git的远端路径&quot;&gt;&lt;a href=&quot;#查看git的远端路径&quot; class=&quot;headerlink&quot; title=&quot;查看git的远端路径&quot;&gt;&lt;/a&gt;查看git的远端路径&lt;/h1&gt;&lt;p&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=
      
    
    </summary>
    
      <category term="git" scheme="https://moonclearner.cn/categories/git/"/>
    
    
      <category term="git" scheme="https://moonclearner.cn/tags/git/"/>
    
      <category term="configure" scheme="https://moonclearner.cn/tags/configure/"/>
    
  </entry>
  
  <entry>
    <title>Apache cookbook</title>
    <link href="https://moonclearner.cn/apache/apache_note.html"/>
    <id>https://moonclearner.cn/apache/apache_note.html</id>
    <published>2021-04-20T06:11:50.280Z</published>
    <updated>2019-06-18T10:18:01.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="apache-cookbook"><a href="#apache-cookbook" class="headerlink" title="apache cookbook"></a>apache cookbook</h1><h2 id="query-apache-default-user-or-group"><a href="#query-apache-default-user-or-group" class="headerlink" title="query apache default user or group"></a>query apache default user or group</h2><ul><li>ps aux | egrep ‘(apache|httpd)’</li></ul><h2 id="ca认证的时候有时候出现了403"><a href="#ca认证的时候有时候出现了403" class="headerlink" title="ca认证的时候有时候出现了403"></a>ca认证的时候有时候出现了403</h2><p>首先需要开启apahce ssl trace 3级别的日志,配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_ssl.c&gt;</span><br><span class="line">    ErrorLog /var/log/apache2/ssl_engine.log</span><br><span class="line">    LogLevel trace3</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></p><p>apache重启</p><p>然后去复现bug的过程，查看/var/log/apache2/ssl_engine.log日志，见图ssl error 发现正常认证过程是full renegotiation 而错误的认证过程是 quick renegotiation。quick renegotiation会导致认证过程找到不到peer chain 导致认证失败 返回403。</p><p><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=55786" target="_blank" rel="noopener">https://bz.apache.org/bugzilla/show_bug.cgi?id=55786</a></p><p>在apache官方bugzilla查看 这个bug在version 2.4.24 已经修复了，但是我们的设备是2.4.16，所以解决办法是：</p><p>a) Removing “OptRenegotiate” on /cert/. We need this feature to prevent client certificate requests with every access to /cert</p><p>b) Setting SSLVerifyClient to require or optional on the whole virtual host: Not possible because requests to /nocert should not trigger a certificate request.</p><p>c) Disable keep-alive.</p><p>因此，我关闭了OptRenegotiate</p><p>优化Renegotiate过程，让每次Renegotiate都是full的状态，这样改会降低一点速度，如果需要优化版本只能升级apahce到2.4.24以上</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;apache-cookbook&quot;&gt;&lt;a href=&quot;#apache-cookbook&quot; class=&quot;headerlink&quot; title=&quot;apache cookbook&quot;&gt;&lt;/a&gt;apache cookbook&lt;/h1&gt;&lt;h2 id=&quot;query-apache-
      
    
    </summary>
    
      <category term="apache" scheme="https://moonclearner.cn/categories/apache/"/>
    
    
      <category term="apache" scheme="https://moonclearner.cn/tags/apache/"/>
    
      <category term="setting" scheme="https://moonclearner.cn/tags/setting/"/>
    
  </entry>
  
  <entry>
    <title>mysql learning note</title>
    <link href="https://moonclearner.cn/database/mysql_notes.html"/>
    <id>https://moonclearner.cn/database/mysql_notes.html</id>
    <published>2021-04-20T06:11:30.764Z</published>
    <updated>2020-11-20T07:20:58.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql-learning-note"><a href="#mysql-learning-note" class="headerlink" title="mysql learning note"></a>mysql learning note</h1><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>查询原因：</p><ul><li>没有命中索引</li><li>没有分页处理</li></ul><h3 id="最大数据量"><a href="#最大数据量" class="headerlink" title="最大数据量"></a>最大数据量</h3><p>MySQL没有限制单位最大记录数，其取决于os以及文件系统对单文件最大的限制</p><h3 id="最大并发数"><a href="#最大并发数" class="headerlink" title="最大并发数"></a>最大并发数</h3><p>由maxconnections和maxuserconnections决定</p><p>maxconnections是指MySQL实例的最大连接数，上限值是16384，maxuserconnections是指每个数据库用户的最大连接数</p><p>MySQL会为每个连接提供缓冲区，意味着消耗更多的内存。如果连接数设置太高硬件吃不消，太低又不能充分利用硬件。一般要求两者比值超过10%，计算方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_used_connections / max_connections * 100% = 3/100 *100% ≈ 3%</span><br></pre></td></tr></table></figure></p><p>查看最大连接数与响应最大连接数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;%max_connections%&apos;;</span><br><span class="line">show variables like &apos;%max_user_connections%&apos;;</span><br></pre></td></tr></table></figure></p><p>在配置文件my.cnf中修改最大连接数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]max_connections = 100max_used_connections = 20</span><br></pre></td></tr></table></figure></p><h3 id="查询耗时0-5秒"><a href="#查询耗时0-5秒" class="headerlink" title="查询耗时0.5秒"></a>查询耗时0.5秒</h3><p>建议将单次查询耗时控制在0.5秒以内，0.5秒是个经验值，源于用户体验的3秒原则 。如果用户的操作3秒内没有响应，将会厌烦甚至退出。响应时间=客户端UI渲染耗时+网络请求耗时+应用程序处理耗时+查询数据库耗时，0.5秒就是留给数据库1/6的处理时间</p><h3 id="实施原则"><a href="#实施原则" class="headerlink" title="实施原则"></a>实施原则</h3><p>相比NoSQL数据库，MySQL容量小并发低、SQL约束太多。应用程序扩容比数据库要容易得多，所以实施原则是 <strong>数据库少干活，应用程序多干活</strong></p><ul><li>充分利用但不滥用索引，须知索引也消耗磁盘和CPU。</li><li>不推荐使用数据库函数格式化数据，交给应用程序处理。</li><li>不推荐使用外键约束，用应用程序保证数据准确性。</li><li>写多读少的场景，不推荐使用唯一索引，用应用程序保证唯一性。</li><li>适当冗余字段，尝试创建中间表，用应用程序计算中间结果，用空间换时间。</li><li>不允许执行极度耗时的事务，配合应用程序拆分成更小的事务。</li><li>预估重要数据表（比如订单表）的负载和数据增长态势，提前优化。</li></ul><h2 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><strong>数据类型的选择原则：更简单或者占用空间更小</strong></p><ul><li>如果长度能够满足，整型尽量使用tinyint、smallint、medium_int而非int</li><li>如果字符串长度确定，采用char类型</li><li>如果varchar能够满足，不采用text类型</li><li>精度要求较高的使用decimal类型，也可以使用BIGINT，比如精确两位小数就乘以100后保存</li><li>尽量采用timestamp而非datetime</li></ul><table><thead><tr><th>类型</th><th>占据字节</th><th>描述</th></tr></thead><tbody><tr><td>datetime</td><td>8个字节</td><td>‘1000-01-01 00:00:00.000000’ to ‘9999-12-31 23:59:59.999999</td></tr><tr><td>timestamp</td><td>4字节</td><td>‘1970-01-01 00:00:01.000000’ to ‘2038-01-19 03:14:07.999999’</td></tr></tbody></table><h3 id="avoid-null-value"><a href="#avoid-null-value" class="headerlink" title="avoid null value"></a>avoid null value</h3><p>MySQL中字段为NULL时依然占用空间，会使索引、索引统计更加复杂。从NULL值更新到非NULL无法做到原地更新，容易发生索引分裂影响性能。尽可能将NULL值用有意义的值代替，也能避免SQL语句里面包含 is not null的判断</p><h3 id="text-type-Optimization"><a href="#text-type-Optimization" class="headerlink" title="text type Optimization"></a>text type Optimization</h3><p>由于text字段储存大量数据，表容量会很早涨上去，影响其他字段的查询性能。建议抽取出来放在子表里，用业务主键关联</p><h2 id="引索optimization"><a href="#引索optimization" class="headerlink" title="引索optimization"></a>引索optimization</h2><h3 id="index-分类"><a href="#index-分类" class="headerlink" title="index 分类"></a>index 分类</h3><ul><li>普通索引：最基本的索引。</li><li>组合索引：多个字段上建立的索引，能够加速复合查询条件的检索。</li><li>唯一索引：与普通索引类似，但索引列的值必须唯一，允许有空值。</li><li>组合唯一索引：列值的组合必须唯一。</li><li>主键索引：特殊的唯一索引，用于唯一标识数据表中的某一条记录，不允许有空值，一般用primary key约束。</li><li>全文索引：用于海量文本的查询，MySQL5.6之后的InnoDB和MyISAM均支持全文索引。由于查询精度以及扩展性不佳，更多的企业选择Elasticsearch。</li></ul><h3 id="index-optimization"><a href="#index-optimization" class="headerlink" title="index optimization"></a>index optimization</h3><ul><li>分页查询很重要，如果查询数据量超过30%，MYSQL不会使用索引。</li><li>单表索引数不超过5个、单个索引字段数不超过5个。</li><li>字符串可使用前缀索引，前缀长度控制在5-8个字符。</li><li>字段唯一性太低，增加索引没有意义，如：是否删除、性别。</li><li>合理使用覆盖索引，如下所示：<br>  select loginname, nickname from member where login_name = ?<br>  loginname, nickname两个字段建立组合索引，比login_name简单索引要更快</li></ul><h2 id="sql优化"><a href="#sql优化" class="headerlink" title="sql优化"></a>sql优化</h2><h3 id="batch"><a href="#batch" class="headerlink" title="batch"></a>batch</h3><p>当一条sql语句会处理整个表的数据的时候，有可能会堵塞其他sql运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update status=0 FROMcoupon WHERE expire_date &lt;= #&#123;currentDate&#125; and status=1;</span><br></pre></td></tr></table></figure></p><p>因此可以使用分批操作</p><h4 id="optimization"><a href="#optimization" class="headerlink" title="optimization"></a>optimization</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int pageNo = 1;</span><br><span class="line">int PAGE_SIZE = 100;</span><br><span class="line">while(true) &#123;</span><br><span class="line">    List&lt;Integer&gt; batchIdList = queryList(&apos;select id FROM `coupon` WHERE expire_date &lt;= #&#123;currentDate&#125; and status = 1 limit #&#123;(pageNo-1) * PAGE_SIZE&#125;,#&#123;PAGE_SIZE&#125;&apos;);</span><br><span class="line">    if (CollectionUtils.isEmpty(batchIdList)) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    update(&apos;update status = 0 FROM `coupon` where status = 1 and id in #&#123;batchIdList&#125;&apos;)</span><br><span class="line">    pageNo ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="operation-lt-gt-optimization"><a href="#operation-lt-gt-optimization" class="headerlink" title="operation &lt;&gt; optimization"></a>operation &lt;&gt; optimization</h3><p>通常&lt;&gt;操作符无法使用索引，举例如下，查询金额不为100元的订单：select id from orders where amount != 100;如果金额为100的订单极少，这种数据分布严重不均的情况下，有可能使用索引。鉴于这种不确定性，采用union聚合搜索结果，改写方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(select id from orders where amount &gt; 100) union all(select id from orders where amount &lt; 100 and amount &gt; 0)</span><br></pre></td></tr></table></figure></p><h3 id="operation-or-optimization"><a href="#operation-or-optimization" class="headerlink" title="operation or optimization"></a>operation or optimization</h3><p>在Innodb引擎下or无法使用组合索引，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id，product_name from orders where mobile_no = &apos;13421800407&apos; or user_id = 100;</span><br></pre></td></tr></table></figure></p><p>OR无法命中mobileno + userid的组合索引，可采用union，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(select id，product_name from orders where mobile_no = &apos;13421800407&apos;) union(select id，product_name from orders where user_id = 100);</span><br></pre></td></tr></table></figure></p><p>此时id和product_name字段都有索引，查询才最高效。</p><h3 id="operation-in-optimization"><a href="#operation-in-optimization" class="headerlink" title="operation in optimization"></a>operation in optimization</h3><ul><li>IN适合主表大子表小，EXIST适合主表小子表大。由于查询优化器的不断升级，很多场景这两者性能差不多一样了。</li><li>尝试改为join查询，举例如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select id from orders where user_id in (select id from user where level = &apos;VIP&apos;);</span><br><span class="line">采用JOIN如下所示：</span><br><span class="line">select o.id from orders o left join user u on o.user_id = u.id where u.level = &apos;VIP&apos;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="不做列运算"><a href="#不做列运算" class="headerlink" title="不做列运算"></a>不做列运算</h3><p>通常在查询条件列运算会导致索引失效，如下所示：查询当日订单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from order where date_format(create_time，&apos;%Y-%m-%d&apos;) = &apos;2019-07-01&apos;;</span><br></pre></td></tr></table></figure></p><p>date_format函数会导致这个查询无法使用索引，改写后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from order where create_time between &apos;2019-07-01 00:00:00&apos; and &apos;2019-07-01 23:59:59&apos;;</span><br></pre></td></tr></table></figure></p><h3 id="avoid-Select-all"><a href="#avoid-Select-all" class="headerlink" title="avoid Select all"></a>avoid Select all</h3><p>如果不查询表中所有的列，避免使用 SELECT *，它会进行全表扫描，不能有效利用索引。</p><h3 id="operation-like-optimization"><a href="#operation-like-optimization" class="headerlink" title="operation like optimization"></a>operation like optimization</h3><p>like用于模糊查询，举个例子（field已建立索引）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT column FROM table WHERE field like &apos;%keyword%&apos;;</span><br></pre></td></tr></table></figure></p><p>这个查询未命中索引，换成下面的写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT column FROM table WHERE field like &apos;keyword%&apos;;</span><br></pre></td></tr></table></figure></p><p>去除了前面的%查询将会命中索引，但是产品经理一定要前后模糊匹配呢？全文索引fulltext可以尝试一下，但Elasticsearch才是终极武器。</p><h3 id="operation-Join-optimization"><a href="#operation-Join-optimization" class="headerlink" title="operation Join optimization"></a>operation Join optimization</h3><p>join的实现是采用Nested Loop Join算法，就是通过驱动表的结果集作为基础数据，通过该结数据作为过滤条件到下一个表中循环查询数据，然后合并结果。如果有多个join，则将前面的结果集作为循环数据，再次到后一个表中查询数据。</p><ul><li>驱动表和被驱动表尽可能增加查询条件，满足ON的条件而少用Where，用小结果集驱动大结果集。</li><li>被驱动表的join字段上加上索引，无法建立索引的时候，设置足够的Join Buffer Size。</li><li>禁止join连接三个以上的表，尝试增加冗余字段。</li></ul><h3 id="oper-Limit-optimization"><a href="#oper-Limit-optimization" class="headerlink" title="oper Limit optimization"></a>oper Limit optimization</h3><p>limit用于分页查询时越往后翻性能越差，解决的原则：缩小扫描范围 ，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from orders order by id desc limit 100000,10 耗时0.4秒</span><br><span class="line">select * from orders order by id desc limit 1000000,10耗时5.2秒</span><br></pre></td></tr></table></figure></p><p>先筛选出ID缩小查询范围，写法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where id &gt; (select id from orders order by id desc  limit 1000000, 1) order by id desc limit 0,10耗时0.5秒</span><br></pre></td></tr></table></figure></p><p>如果查询条件仅有主键ID，写法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from orders where id between 1000000 and 1000010 order by id desc耗时0.3秒</span><br></pre></td></tr></table></figure></p><p>如果以上方案依然很慢呢？只好用游标了，感兴趣的朋友阅读JDBC使用游标实现分页查询的方法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql-learning-note&quot;&gt;&lt;a href=&quot;#mysql-learning-note&quot; class=&quot;headerlink&quot; title=&quot;mysql learning note&quot;&gt;&lt;/a&gt;mysql learning note&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="mysql" scheme="https://moonclearner.cn/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://moonclearner.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>sqlzoo</title>
    <link href="https://moonclearner.cn/database/sqlzooNote.html"/>
    <id>https://moonclearner.cn/database/sqlzooNote.html</id>
    <published>2021-04-20T06:11:23.312Z</published>
    <updated>2020-11-10T13:07:03.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql-Note"><a href="#sql-Note" class="headerlink" title="sql Note"></a>sql Note</h1><h2 id="function"><a href="#function" class="headerlink" title="function"></a>function</h2><ul><li>concat<ul><li>concat(stringa, stringb)</li></ul></li><li>replace<ul><li>replace(column_name,replace_string, dest_replace_string)</li></ul></li><li>mid<ul><li>截取字符串 MID(column_name,start[,length])</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql-Note&quot;&gt;&lt;a href=&quot;#sql-Note&quot; class=&quot;headerlink&quot; title=&quot;sql Note&quot;&gt;&lt;/a&gt;sql Note&lt;/h1&gt;&lt;h2 id=&quot;function&quot;&gt;&lt;a href=&quot;#function&quot; class=&quot;head
      
    
    </summary>
    
      <category term="sql" scheme="https://moonclearner.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://moonclearner.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sqlNote</title>
    <link href="https://moonclearner.cn/database/sqlNote.html"/>
    <id>https://moonclearner.cn/database/sqlNote.html</id>
    <published>2021-04-20T06:11:23.308Z</published>
    <updated>2020-11-24T11:45:00.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sql-Note"><a href="#sql-Note" class="headerlink" title="sql Note"></a>sql Note</h1><h2 id="优化途径"><a href="#优化途径" class="headerlink" title="优化途径"></a>优化途径</h2><h3 id="关联查询，先过滤后关联"><a href="#关联查询，先过滤后关联" class="headerlink" title="关联查询，先过滤后关联"></a>关联查询，先过滤后关联</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select * from table1,table2 where 这个是先关联后过滤</span><br><span class="line"></span><br><span class="line">select * from table1,table2 where 这个是先关联后过滤</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sql-Note&quot;&gt;&lt;a href=&quot;#sql-Note&quot; class=&quot;headerlink&quot; title=&quot;sql Note&quot;&gt;&lt;/a&gt;sql Note&lt;/h1&gt;&lt;h2 id=&quot;优化途径&quot;&gt;&lt;a href=&quot;#优化途径&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="sql" scheme="https://moonclearner.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://moonclearner.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sqlite common cmd 常用命令</title>
    <link href="https://moonclearner.cn/database/sqlite_common_cmd.html"/>
    <id>https://moonclearner.cn/database/sqlite_common_cmd.html</id>
    <published>2021-04-20T06:11:23.308Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqlite-common-cmd-常用命令"><a href="#sqlite-common-cmd-常用命令" class="headerlink" title="sqlite common cmd 常用命令"></a>sqlite common cmd 常用命令</h1><h2 id="查看列表名"><a href="#查看列表名" class="headerlink" title="查看列表名"></a>查看列表名</h2><ul><li>pragma table_info(tablename);</li><li>.schema tablename</li><li>select * from sqlite_master where type=”table” and name=”tablename”;</li></ul><h2 id="退出sqlite-shel"><a href="#退出sqlite-shel" class="headerlink" title="退出sqlite shel"></a>退出sqlite shel</h2><p>.exit</p><h2 id="显示所有table"><a href="#显示所有table" class="headerlink" title="显示所有table"></a>显示所有table</h2><p>.tables</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sqlite-common-cmd-常用命令&quot;&gt;&lt;a href=&quot;#sqlite-common-cmd-常用命令&quot; class=&quot;headerlink&quot; title=&quot;sqlite common cmd 常用命令&quot;&gt;&lt;/a&gt;sqlite common cmd 常用
      
    
    </summary>
    
      <category term="sqlite" scheme="https://moonclearner.cn/categories/sqlite/"/>
    
    
      <category term="sql" scheme="https://moonclearner.cn/tags/sql/"/>
    
      <category term="sqlite" scheme="https://moonclearner.cn/tags/sqlite/"/>
    
      <category term="common" scheme="https://moonclearner.cn/tags/common/"/>
    
  </entry>
  
  <entry>
    <title>index and like and covering index</title>
    <link href="https://moonclearner.cn/database/sql-index_and_like.html"/>
    <id>https://moonclearner.cn/database/sql-index_and_like.html</id>
    <published>2021-04-20T06:11:23.304Z</published>
    <updated>2020-11-10T13:07:01.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="avoid-to-global-query-when-use-to-like"><a href="#avoid-to-global-query-when-use-to-like" class="headerlink" title="avoid to global query when use to like"></a>avoid to global query when use to like</h1><h2 id="select-when-（name，age）-has-index"><a href="#select-when-（name，age）-has-index" class="headerlink" title="select * when （name，age） has index"></a>select * when （name，age） has index</h2><ul><li>%在左边，即使有索引，也会失效</li><li>只有当%在右边时，才会生效 并且是range模式，而不是覆盖索引</li></ul><h2 id="select-id-name，age-salary-when-（name，-age）t-has-not-index"><a href="#select-id-name，age-salary-when-（name，-age）t-has-not-index" class="headerlink" title="select id.name，age,salary  when （name， age）t has not index"></a>select id.name，age,salary  when （name， age）t has not index</h2><p>在没有索引的情况下，两边都使用 % 来查询，不管想查询哪个字段（包括查询Id），全部都是全表扫描</p><h2 id="select-id-name，age，salary-when-（name，-age）-has-index"><a href="#select-id-name，age，salary-when-（name，-age）-has-index" class="headerlink" title="select id,name，age，salary when （name， age） has index"></a>select id,name，age，salary when （name， age） has index</h2><ul><li>select id where name LIKE ‘%test%’<ul><li>index 覆盖索引, id自带索引</li></ul></li><li>select id,name，age  where name LIKE ‘%test%’<ul><li>index 覆盖索引, 当数据列有索引 就可以</li></ul></li><li>select count(name)  where name LIKE ‘%test%’<ul><li>index 覆盖索引, 函数不影响索引</li></ul></li><li>select id,name，age，salary  where name LIKE ‘%test%’ <ul><li>全表查询 由于salary不再索引上</li></ul></li></ul><h2 id="discuss"><a href="#discuss" class="headerlink" title="discuss"></a>discuss</h2><p>执行计划不会选择覆盖查询<br>1.select选择的字段中含有不在索引中的字段 ，即索引没有覆盖全部的列。<br>2.where条件中不能含有对索引进行like的操作。</p><p>除去全局查询，其他查询分为了range和index，其他index为覆盖索引</p><p>覆盖索引，即select 数据列只能从索引中取得，查询列要被所建的索引覆盖</p><p>当一条查询语句符合覆盖索引条件时，sql只需要通过索引就可以返回查询所需要的数据，这样避免了查到索引后再返回表操作，减少I/O提高效率</p><p>使用覆盖索引Innodb比MyISAM效果更好—-InnoDB使用聚集索引组织数据，如果二级索引中包含查询所需的数据，就不再需要在聚集索引中查找了</p><h1 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h1><p>使用 覆盖索引 来解决 like ‘%test%’</p><ul><li>为like的条件列创建索引<ul><li>ALTER TABLE test_table add INDEX test_index(name)</li><li>CREATE INDEX test_index ON test_table(name)</li></ul></li><li>select id from test_table where name like ‘%test%’</li><li>通过覆盖索引来找到id等在来查询需要的数据<ul><li>select id, name, salary from test_table inner join( select id from test_table where name like ‘%test%’ ) as id_index USING(id)</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;avoid-to-global-query-when-use-to-like&quot;&gt;&lt;a href=&quot;#avoid-to-global-query-when-use-to-like&quot; class=&quot;headerlink&quot; title=&quot;avoid to global 
      
    
    </summary>
    
      <category term="sql" scheme="https://moonclearner.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://moonclearner.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>postgresql tablespace</title>
    <link href="https://moonclearner.cn/database/postgresqlTablespace.html"/>
    <id>https://moonclearner.cn/database/postgresqlTablespace.html</id>
    <published>2021-04-20T06:11:07.344Z</published>
    <updated>2020-11-23T07:37:30.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Table-Space"><a href="#Table-Space" class="headerlink" title="Table Space"></a>Table Space</h1><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>设备上有两块存储单元A（ROM）和B（RAM）都有一个表空间存放在AB上</p><p>由于B随着设备重启会重置，数据库的初始化应该放在A上</p><p>然后在A和B上创建对应的表空间</p><p>创建表放在A和B上的表空间上，但是注意，如果只是在表创建时，指定表空间，其约束也要指定表空间，或者设置一个默认表空间设置，然后在执行创建表，这样整个表的所有信息都指定到这个表空间上,这些约束包括，分表、id自增、外键等等</p><h2 id="如何删除表空间"><a href="#如何删除表空间" class="headerlink" title="如何删除表空间"></a>如何删除表空间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop tablespace spacename</span><br></pre></td></tr></table></figure><p>当表空间里面存在各类表的时候，是不能直接删除表空间的，即使是删除了表空间的路径</p><p>需要先把表空间的表移动到其他表空间里面或者删除表空间里面的表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select schemaname, tablename from pg_tables where tablespace=&apos;tablespacename&apos;</span><br><span class="line"></span><br><span class="line">在postgresql可以查到所有关于表空间tablespacename的表</span><br><span class="line"></span><br><span class="line">然后可以考虑是删除还是移动到其他表空间里面</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Table-Space&quot;&gt;&lt;a href=&quot;#Table-Space&quot; class=&quot;headerlink&quot; title=&quot;Table Space&quot;&gt;&lt;/a&gt;Table Space&lt;/h1&gt;&lt;h2 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;
      
    
    </summary>
    
      <category term="postgresql" scheme="https://moonclearner.cn/categories/postgresql/"/>
    
    
      <category term="postgresql" scheme="https://moonclearner.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>postgresql Learning Note</title>
    <link href="https://moonclearner.cn/database/postgresqlLearningNote.html"/>
    <id>https://moonclearner.cn/database/postgresqlLearningNote.html</id>
    <published>2021-04-20T06:11:07.344Z</published>
    <updated>2020-10-15T06:02:19.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="postgresql-LearningNote"><a href="#postgresql-LearningNote" class="headerlink" title="postgresql LearningNote"></a>postgresql LearningNote</h1><h2 id="时间相关"><a href="#时间相关" class="headerlink" title="时间相关"></a>时间相关</h2><h3 id="查询昨天的数据"><a href="#查询昨天的数据" class="headerlink" title="查询昨天的数据"></a>查询昨天的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">audit</span> <span class="keyword">where</span> <span class="keyword">current_date</span>- <span class="built_in">DATE</span>(to_char(to_timestamp(<span class="built_in">time</span>), <span class="string">'YYYY-MM-DD 00:00:00'</span>))=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="查询当天的数据"><a href="#查询当天的数据" class="headerlink" title="查询当天的数据"></a>查询当天的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">audit</span> <span class="keyword">where</span> age(<span class="keyword">current_date</span>, <span class="built_in">DATE</span>(to_char(to_timestamp(<span class="built_in">time</span>), <span class="string">'YYYY-MM-DD 00:00:00'</span>)))=<span class="string">'00:00:00'</span>;</span><br></pre></td></tr></table></figure><h3 id="查询当月的数据"><a href="#查询当月的数据" class="headerlink" title="查询当月的数据"></a>查询当月的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">audit</span> <span class="keyword">where</span> age(<span class="keyword">current_date</span>, <span class="built_in">DATE</span>(to_char(to_timestamp(<span class="built_in">time</span>), <span class="string">'YYYY-MM-DD 00:00:00'</span>)))=<span class="string">'1 mons'</span>;</span><br></pre></td></tr></table></figure><h3 id="查询当年的数据"><a href="#查询当年的数据" class="headerlink" title="查询当年的数据"></a>查询当年的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">audit</span> <span class="keyword">where</span> age(<span class="keyword">current_date</span>, <span class="built_in">DATE</span>(to_char(to_timestamp(<span class="built_in">time</span>), <span class="string">'YYYY-MM-DD 00:00:00'</span>)))=<span class="string">'1 years'</span>;</span><br></pre></td></tr></table></figure><h2 id="timestamp-转化为时间戳"><a href="#timestamp-转化为时间戳" class="headerlink" title="timestamp 转化为时间戳"></a>timestamp 转化为时间戳</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">postgresql=<span class="comment"># select time, EXTRACT(epoch FROM time), to_timestamp(EXTRACT(epoch FROM time)) from table； alert_type='ip';</span></span><br><span class="line">     time      | date_part  |      to_timestamp      </span><br><span class="line"><span class="comment">---------------------+------------+------------------------</span></span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08</span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">postgresql=<span class="comment"># \d table;</span></span><br><span class="line">+<span class="comment">----------------------------------------------------</span></span><br><span class="line"> id            | integer                     |           | not null | nextval('tac_callback_id_seq'::regclass)</span><br><span class="line"> time    | timestamp without time zone |           | not null | '1970-01-01 08:00:00'::timestamp without time zone</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">postgresql=<span class="comment"># select time, EXTRACT(epoch FROM time), to_timestamp(EXTRACT(epoch FROM time)), to_timestamp(to_char(time , 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), EXTRACT(epoch FROM to_timestamp(to_char(time , 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')) from tac_callback where alert_type='ip';</span></span><br><span class="line">     time      | date_part  |      to_timestamp      |      to_timestamp      | date_part  </span><br><span class="line"><span class="comment">---------------------+------------+------------------------+------------------------+------------</span></span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08 | 2020-08-24 14:30:44+08 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08 | 2020-08-24 14:30:44+08 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08 | 2020-08-24 14:30:44+08 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08 | 2020-08-24 14:30:44+08 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 1598279444 | 2020-08-24 22:30:44+08 | 2020-08-24 14:30:44+08 | 1598250644</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">postgresql=<span class="comment"># select time, time::TIMESTAMP WITH TIME ZONE, EXTRACT(epoch FROM time), EXTRACT(epoch FROM time::TIMESTAMP WITH TIME ZONE) from tac_callback where alert_type='ip';</span></span><br><span class="line">     time      |       time       | date_part  | date_part  </span><br><span class="line"><span class="comment">---------------------+------------------------+------------+------------</span></span><br><span class="line"> 2020-08-24 14:30:44 | 2020-08-24 14:30:44+08 | 1598279444 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 2020-08-24 14:30:44+08 | 1598279444 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 2020-08-24 14:30:44+08 | 1598279444 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 2020-08-24 14:30:44+08 | 1598279444 | 1598250644</span><br><span class="line"> 2020-08-24 14:30:44 | 2020-08-24 14:30:44+08 | 1598279444 | 1598250644</span><br></pre></td></tr></table></figure><p><strong>注意</strong>  EXTRACT(epoch FROM time) 返回的时间戳是double型</p><h2 id="数据类型转化"><a href="#数据类型转化" class="headerlink" title="数据类型转化"></a>数据类型转化</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CAST( 字段 AS 你要转换为的数据类型 )</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="keyword">cast</span>(<span class="number">1003</span> <span class="keyword">as</span> <span class="built_in">VARCHAR</span>);</span><br><span class="line"></span><br><span class="line">字段 :: 你要转换为的数据类型</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1002</span> :: <span class="built_in">VARCHAR</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> sip::inet &lt;&lt;= $<span class="number">1</span>::inet;</span><br></pre></td></tr></table></figure><h2 id="数据某表备份和恢复"><a href="#数据某表备份和恢复" class="headerlink" title="数据某表备份和恢复"></a>数据某表备份和恢复</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dump</span></span><br><span class="line">pg_dump -U postgresql -t web -Fp -f web.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># restore</span></span><br><span class="line">psql -U postgresql -f web.sql</span><br></pre></td></tr></table></figure><h2 id="字符串转时间戳"><a href="#字符串转时间戳" class="headerlink" title="字符串转时间戳"></a>字符串转时间戳</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXTRACT(epoch from to_timestamp(time_string, 'yyyy-MM-dd hh24:mi:ss'))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;postgresql-LearningNote&quot;&gt;&lt;a href=&quot;#postgresql-LearningNote&quot; class=&quot;headerlink&quot; title=&quot;postgresql LearningNote&quot;&gt;&lt;/a&gt;postgresql Learni
      
    
    </summary>
    
      <category term="postgresql" scheme="https://moonclearner.cn/categories/postgresql/"/>
    
    
      <category term="postgresql" scheme="https://moonclearner.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>postgresql Learning resource map</title>
    <link href="https://moonclearner.cn/database/postgresqlLearningResource.html"/>
    <id>https://moonclearner.cn/database/postgresqlLearningResource.html</id>
    <published>2021-04-20T06:11:07.344Z</published>
    <updated>2019-12-30T10:40:17.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="postgresql-Learning-resource-map"><a href="#postgresql-Learning-resource-map" class="headerlink" title="postgresql Learning resource map"></a>postgresql Learning resource map</h1><p>引用<a href="https://github.com/ty4z2008/Qix" target="_blank" rel="noopener">ty4z2008</a></p><h2 id="PostgreSQL-数据库-资料"><a href="#PostgreSQL-数据库-资料" class="headerlink" title="PostgreSQL(数据库)资料"></a>PostgreSQL(数据库)资料</h2><p><img src="https://wiki.postgresql.org/images/3/30/PostgreSQL_logo.3colors.120x120.png" alt="PostgreSQL"></p><p>About:<a href="http://www.postgresql.org/about/" target="_blank" rel="noopener">PostgreSQL About</a></p><p><a href="#pg_kernel">《PostgreSQL 源码分析系列》</a></p><ul><li><a name="pg_kernel"> PostgreSQL 源码分析系列</a></li></ul><p>介绍:PostgreSQL 源码分析系列文章</p><ul><li><a href="http://www.zhangxiaojian.name/?p=447" target="_blank" rel="noopener">《PG 内存上下文》</a></li></ul><p>介绍：PG 内存上下文,<a href="https://github.com/zhangxiaojian/memoryContext" target="_blank" rel="noopener">code</a></p><ul><li><a href="http://wiki.postgresql.org/wiki/Pgsrcstructure" target="_blank" rel="noopener">《PostgreSQL及其代码的结构》</a></li></ul><p>介绍:PostgreSQL及其代码的结构</p><ul><li><a href="http://www.postgresql.org/files/developer/tour.pdf" target="_blank" rel="noopener">《A Tour of PostgreSQL Internals》</a></li></ul><p>介绍:PostgreSQL内部的概览,可以结合上面的pg代码结构来阅读</p><ul><li><a href="http://www.zhangxiaojian.name/?p=317" target="_blank" rel="noopener">《PostgreSQL 中的 Json —从使用到源码》</a></li></ul><p>介绍：PostgreSQL 中的 Json —从使用到源码</p><ul><li><a href="http://mp.weixin.qq.com/s?__biz=MzIwNzEzNDkxNQ==&amp;mid=400885298&amp;idx=1&amp;sn=76df79eff99131cf6e64991b1629e8c9&amp;scene=7#wechat_redirect" target="_blank" rel="noopener">《PostgreSQL锁机制分析》</a></li></ul><p>介绍：PostgreSQL锁机制分析,<a href="http://mp.weixin.qq.com/s?__biz=MzIwNzEzNDkxNQ==&amp;mid=400897914&amp;idx=1&amp;sn=e83f15ba1b62abfd9e01cd7b08b87cc7&amp;scene=4#wechat_redirect" target="_blank" rel="noopener">第二部分</a></p><ul><li><a href="http://blog.chinaunix.net/uid-24774106-id-3764994.html" target="_blank" rel="noopener">《FSM》</a></li></ul><p>介绍：PostgreSQL源码分析之FSM</p><ul><li><a href="http://blog.chinaunix.net/uid-24774106-id-3764606.html" target="_blank" rel="noopener">《page》</a></li></ul><p>介绍：PostgreSQL源码分析之page</p><ul><li><a href="http://blog.chinaunix.net/uid-24774106-id-3761861.html" target="_blank" rel="noopener">《shared buffer状态信息及性能测量 》</a></li></ul><p>介绍：PostgreSQL源码分析之shared buffer状态信息及性能测量,推荐<a href="http://blog.chinaunix.net/uid-24774106-id-3761272.html" target="_blank" rel="noopener">shared buffer的分配与替换</a>,<a href="http://blog.chinaunix.net/uid-24774106-id-3761123.html" target="_blank" rel="noopener">shared buffer与磁盘文件 </a>,<a href="http://blog.chinaunix.net/uid-24774106-id-3757916.html" target="_blank" rel="noopener">database和table 与磁盘文件的对应</a></p><ul><li><a href="http://www.cnblogs.com/gaojian/p/3261568.html" target="_blank" rel="noopener">《PostgreSQL内部结构与源代码研究索引页》</a></li></ul><p>介绍：文章包括pg_stat_statements源代码分析,PostgreSQL的hook机制初步学习,EDB*Plus的client_encoding问题,PostgreSQL的索引膨胀,libpq 与 fe-misc.c,libpq 练习的入口点,Autovacuum 的运行限制,autovacuum 与 vacuum full,autoanalyze 的注意事项,backuplabel file 初步学习,HOT（Heap-Only Tuples）,Checkpoint 发生的时机,checkpoint 活动,pg_buffercache 代码研究,内存结构图示,内存使用增长观察,使用cgroups来控制内存使用,调整内存与IO的参数说明,MVCC图示,ListenSocket 的研究</p><ul><li><a href="http://blog.csdn.net/huguangshanse00/article/details/40479995" target="_blank" rel="noopener">《CreateLockFile》</a></li></ul><p>介绍：PostgreSQL CreateLockFile分析</p><ul><li><a href="http://blog.csdn.net/li_shugan1/article/details/7975571" target="_blank" rel="noopener">《动态Hash》</a></li></ul><p>介绍：动态Hash</p><ul><li><a href="http://momjian.us/main/presentations/internals.html" target="_blank" rel="noopener">《Postgres Internals Presentations》</a></li></ul><p>介绍: PG内部机制分析.</p><ul><li><a href="http://my.oschina.net/Suregogo/blog/550201" target="_blank" rel="noopener">《为PostgreSQL添加插件》</a></li></ul><p>介绍: 利用pg的hook机制为pg添加插件.</p><ul><li><a href="http://blog.163.com/digoal@126/blog/static/163877040201612374931160/" target="_blank" rel="noopener">《PostgreSQL 优化器逻辑推理能力》</a></li></ul><p>介绍: 源码解析.</p><ul><li><a href="http://blog.csdn.net/huguangshanse00/article/details/37045847" target="_blank" rel="noopener">《postgres 源码分析之 insert(1)》</a></li></ul><p>介绍: Insert分析.</p><ul><li><a href="http://7xtcs7.com1.z0.glb.clouddn.com/PostgreSQL%E6%9F%A5%E8%AF%A2%E5%A4%84%E7%90%86%E9%83%A8%E5%88%86%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.pdf" target="_blank" rel="noopener">《PostgreSQL查询处理部分源码分析》</a></li></ul><p>介绍: PostgreSQL查询处理部分源码分析.</p><ul><li><a href="http://www.docin.com/p-271989068.html" target="_blank" rel="noopener">《PostgreSQL查询处理部分源码分析》</a></li></ul><p>介绍:  PostgreSQL查询处理部分源码分析.</p><ul><li><a href="https://madusudanan.com/blog/understanding-postgres-caching-in-depth/" target="_blank" rel="noopener">《Understanding caching in Postgres》</a></li></ul><p>介绍:Postgres缓存机制分析.</p><ul><li><a href="https://blog.codeship.com/discovering-computer-science-behind-postgres-indexes/" target="_blank" rel="noopener">《Discovering the Computer Science Behind Postgres Indexes》</a></li></ul><p>介绍: Postgres索引分析,推荐先阅读<a href="http://www.csd.uoc.gr/~hy460/pdf/p650-lehman.pdf" target="_blank" rel="noopener">Efficient Locking for Concurrent Operations on B-Trees</a>.</p><ul><li><a href="http://research.cs.queensu.ca/~cordy/Papers/GC_SCAM10_ConceptCount.pdf" target="_blank" rel="noopener">《Estimating the Optimal Number of Latent Concepts in Source Code Analysis》</a></li></ul><p>介绍:Estimating the Optimal Number of Latent Concepts in Source Code Analysis.</p><ul><li><a href="https://wiki.postgresql.org/wiki/Pgkernel" target="_blank" rel="noopener">《Pgkernel》</a></li></ul><p>介绍:Postgres内核分析系列文章</p><ul><li><a href="http://www.postgresql.org/docs/manuals/" target="_blank" rel="noopener">《PostgreSQL Documentation》</a></li></ul><p>介绍：PostgreSQL官方文档主页</p><ul><li><a href="http://wenku.it168.com/org/145" target="_blank" rel="noopener">《PG技术沙龙ppt》</a></li></ul><p>介绍：2013年4月PG技术沙龙PPT</p><ul><li><a href="http://postgres.cn/docs/9.4/" target="_blank" rel="noopener">《PG9.4.4中文翻译文档》</a></li></ul><p>介绍：PG9.4.4中文翻译文档</p><ul><li><a href="http://codex.cs.yale.edu/avi/db-book/" target="_blank" rel="noopener">《Database System Concepts Sixth Edition》</a></li></ul><p>介绍：数据库系统概念(第六版)</p><ul><li><a href="http://download.csdn.net/detail/lusizeng/8679303" target="_blank" rel="noopener">《PostgreSQL从菜鸟到专家(中译稿 by 洞庭湖的泥鳅)》</a></li></ul><p>介绍：这篇文档是国内的一线postgreSQL专家所翻译。很经典</p><ul><li><a href="http://www.pg-versus-ms.com/" target="_blank" rel="noopener">《PostgreSQL vs. MS SQL Server》</a></li></ul><p>介绍：PostgreSQL与 MS SQL Server的对比,<a href="http://www.oschina.net/translate/postgresql-vs-ms-sql-server" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://blog.163.com/digoal@126/blog/static/16387704020141229159715/" target="_blank" rel="noopener">《PostgreSQL 30天 培训视频》</a></li></ul><p>介绍：作者<a href="http://blog.163.com/digoal@126/" target="_blank" rel="noopener">德哥@Digoal</a>从事pg截止目前大概有7-8年，长期活跃在国内的pg社区。这套PostgreSQL 30天 培训视频包含了SQL基础,备份恢复,HA,服务端编程,大数据,内核,应用案例等，非常适合新手</p><ul><li><a href="http://blog.163.com/digoal@126/blog/static/163877040201172183022203/" target="_blank" rel="noopener">《PostgreSQL爱好者的参考资料推荐》</a></li></ul><p>介绍：PostgreSQL爱好者的参考资料推荐</p><ul><li><a href="http://www.postgresqlstudio.org/" target="_blank" rel="noopener">《PostgreSQL Studio》</a></li></ul><p>介绍：PostgreSQL Studio 是开源的 PostgreSQL 数据库的 Web 接口。可以让你直接在浏览器上编辑数据库代码，浏览数据库模型和运行 SQL 语句。这是一个数据库管理工具，侧重于开发。</p><ul><li><a href="http://code.google.com/p/pqc/" target="_blank" rel="noopener">《PostgreSQL Query Cache》</a></li></ul><p>介绍：PostgreSQL Query Cache 一个新的开源软件，用来极速提升 PostgreSQL 数据库的查询性能，通过缓存查询结果，可提升 10 ~ 100 倍。</p><ul><li><a href="http://python.projects.pgfoundry.org/" target="_blank" rel="noopener">《py-postgresql》</a></li></ul><p>介绍：Python的PostgreSQL驱动。</p><ul><li><a href="http://www.postgres-xl.org/" target="_blank" rel="noopener">《Postgres-XL》</a></li></ul><p>介绍： 一个构建PostgreSQL集群开源软件,Postgres-XL is a PostgreSQL-based scale-out cluster that handles both OLTP write intensive workloads as well as OLAP/BI type of workloads thanks to MPP parallelism.。</p><ul><li><a href="http://sourceforge.net/projects/pgdesigner/" target="_blank" rel="noopener">《pgDesigner》</a></li></ul><p>介绍：pgDesigner 是一个为PostgreSQL数据库设计的建模工具.仅支持Linux。</p><ul><li><a href="https://github.com/sosedoff/pgweb/" target="_blank" rel="noopener">《pgweb》</a></li></ul><p>介绍：一个采用 Go 语言开发的基于 Web 的 PostgreSQL 管理系统。</p><ul><li><a href="http://www.cybertec.at/postgresql_produkte/pgwatch-cybertec-enterprise-postgresql-monitor/" target="_blank" rel="noopener">《pgwatch》</a></li></ul><p>介绍：一个简单易用的 PostgreSQL 的监控工具，支持 PostgreSQL 9.0 以及更新的版本。</p><ul><li><a href="http://www.pgpool.net/mediawiki/index.php/Main_Page" target="_blank" rel="noopener">《pgpool-II》</a></li></ul><p>介绍：pgpool-II 是运行于 PostgreSQL 数据库服务器和客户端之间的一个中间件，提供的功能包括：连接池、复制、负载均衡、客户端限制和并行查询等。</p><ul><li><a href="http://pgcluu.darold.net/" target="_blank" rel="noopener">《pgCluu》</a></li></ul><p>介绍：pgCluu 是一个对 PostgreSQL 集群性能进行完整审计的工具，该工具分为两部分：</p><ol><li>collector 收集器用于从 PostgreSQL 集群中获取统计数据，使用 psql 和 sar 工具</li><li>grapher 关于生成 HTML 报表和图表 数据库服务器和客户端之间的一个中间件，提供的功能包括：连接池、复制、负载均衡、客户端限制和并行查询等。</li></ol><ul><li><a href="https://github.com/citusdata/cstore_fdw" target="_blank" rel="noopener">《cstore_fdw》</a></li></ul><p>介绍：cstore_fdw 实现了 PostgreSQL 数据库的柱状存储，用于对批量加载的数据进行分析的场景。</p><ul><li><a href="http://www.pgbarman.org/" target="_blank" rel="noopener">《Barman for PostgreSQL》</a></li></ul><p>介绍：Barman (备份和恢复管理器) for PostgreSQL 是 PostgreSQL 数据库服务器的灾难恢复工具，允许远程备份多个服务器，帮助 DBA 在数据恢复阶段的关键工作。</p><ul><li><a href="http://www.pgbarman.org/" target="_blank" rel="noopener">《pgFouine》</a></li></ul><p>介绍：pgFouine 是一个 PostgreSQL 的日志分析软件，可以让你对 PostgreSQL 数据库的运行状态有个清晰的了解，同时对一些慢查询、使用频率最高的查询、错误生成相应的报表和图表。</p><ul><li><a href="http://news.dice.com/2014/11/24/substitute-postgresql-nosql-needs/" target="_blank" rel="noopener">《Substitute PostgreSQL for Your NoSQL Needs》</a></li></ul><p>介绍：用PostgreSQL替换你的NoSQL。</p><ul><li><a href="http://woss.name/articles/representing-trees-in-postgresql/" target="_blank" rel="noopener">《Representing Trees in PostgreSQL》</a></li></ul><p>介绍：Representing Trees in PostgreSQL</p><ul><li><a href="http://michael.otacoo.com/" target="_blank" rel="noopener">《Michael Paquier》</a></li></ul><p>介绍：推荐一个博客，作者是一位日本的开发者。但是文章写的挺好的。是英文！！</p><ul><li><a href="http://omniti.com/seeds/writable-ctes-improve-performance" target="_blank" rel="noopener">《Using Writeable CTEs to Improve Performance in PostgreSQL 》</a></li></ul><p>介绍：使用CTEs来提升你的数据库性能</p><ul><li><a href="http://chrisdone.com/posts/postgresql-pagination" target="_blank" rel="noopener">《Fast pagination on PostgreSQL》</a></li></ul><p>介绍：PostgreSQL的快速分页</p><ul><li><a href="https://www.florian-schlachter.de/post/upgrading-postgres-9-3-9-4/" target="_blank" rel="noopener">《Upgrading your PostgreSQL cluster from 9.3 to 9.4 》</a></li></ul><p>介绍：把你的PostgreSQL集群从9.3升级到9.4.</p><ul><li><a href="http://www.citusdata.com/blog/86-making-postgresql-scale-hadoop-style" target="_blank" rel="noopener">《Making PostgreSQL scale Hadoop-style: Benchmark numbers》</a></li></ul><p>介绍：Making PostgreSQL scale Hadoop-style: Benchmark numbers</p><ul><li><a href="http://engineroom.trackmaven.com/blog/so-you-want-another-postgresql-database-part-1" target="_blank" rel="noopener">《So You Want Another PostgreSQL Database？》</a></li></ul><p>介绍：还有<a href="http://engineroom.trackmaven.com/blog/so-you-want-another-postgresql-database-part-2/" target="_blank" rel="noopener">part2</a></p><ul><li><a href="http://rob.conery.io/2012/07/19/postgresql-rising/" target="_blank" rel="noopener">《PostgreSQL Rising》</a></li></ul><p>介绍：PostgreSQL的成长</p><ul><li><a href="http://rny.io/nginx/postgresql/2013/07/26/simple-api-with-nginx-and-postgresql.html" target="_blank" rel="noopener">《Simple API with Nginx and PostgreSQL》</a></li></ul><p>介绍：如何建一个简单的REST API 仅仅使用 Nginx 和 PostgreSQL.如果不理解REST API这里推荐<a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener">RESTful API 设计指南</a>、<a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">理解RESTful架构</a></p><ul><li><a href="https://github.com/tetsuo/hypervault" target="_blank" rel="noopener">《hypervault》</a></li></ul><p>介绍：PostgreSQL connection manager for scalability freaks.</p><ul><li><a href="https://www.pgcon.org/2014/schedule/attachments/309_PG_as_bench_mark.pdf" target="_blank" rel="noopener">《PostgreSQL as a benchmarking tool》</a></li></ul><p>介绍：PostgreSQL as a benchmarking tool</p><ul><li><a href="http://www.pgcon.org/2014/schedule/index.en.html" target="_blank" rel="noopener">《2014年 PGcon会议paper》</a></li></ul><p>介绍：2014年 PGcon会议paper，进去之后你还可以发现往年的paper。</p><ul><li><a href="http://www.psequel.com/" target="_blank" rel="noopener">《PSequel》</a></li></ul><p>介绍： Mac OS X端的PostgreSQL图形管理工具</p><ul><li><a href="http://blog.heapanalytics.com/postgresqls-powerful-new-join-type-lateral/" target="_blank" rel="noopener">《PostgreSQL’s Powerful New Join Type:LATERAL》</a></li></ul><p>介绍： PostgreSQL’s Powerful New Join Type: LATERAL，这个类型是在9.3的版本中开始的。</p><ul><li><a href="http://momjian.us/main/writings/pgsql/hw_performance/" target="_blank" rel="noopener">《PostgreSQL Hardware Performance Tuning》</a></li></ul><p>介绍：PostgreSQL的硬件性能调优。</p><ul><li><a href="http://momjian.us/main/writings/pgsql/aw_pgsql_book/" target="_blank" rel="noopener">《PostgreSQL: Introduction and Concepts Bruce Momjian》</a></li></ul><p>介绍：入门型电子书籍,书有点老了2001年的了。此外这本书的作者还有一个<a href="http://momjian.us/main/writings/pgsql/" target="_blank" rel="noopener">资源页</a>，里面有很多的干货。作者是enterpriseDB的工程师。经典文章还有<a href="http://momjian.us/main/writings/pgsql/writing_apps.pdf" target="_blank" rel="noopener">Writing PostgreSQL Applications</a>.</p><ul><li><a href="http://blogs.enterprisedb.com/2014/12/03/compiling-plv8-with-postgres-plus-advanced-server-2/" target="_blank" rel="noopener">《Compiling PLV8 with Postgres Plus Advanced Server》</a></li></ul><p>介绍：<a href="https://code.google.com/p/plv8js/wiki/PLV8" target="_blank" rel="noopener">什么是PLV8？</a>,魅力就是:用js写SQL</p><ul><li><a href="https://archive.fosdem.org/2014/schedule/track/postgresql/" target="_blank" rel="noopener">《fosdem 2014年PostgreSQL议题(含视频)》</a></li></ul><p>介绍:<a href="http://en.wikipedia.org/wiki/FOSDEM" target="_blank" rel="noopener">fosdem</a>是一个开源性组织,这个只是会议的一部分，从2001年开始到目前历经13年的<a href="https://archive.fosdem.org/" target="_blank" rel="noopener">资料</a>都被保存着，如果你有需要可以自己去翻阅。干货很多，另外2015年的议题已经开始筹备了<a href="https://fosdem.org/2015/" target="_blank" rel="noopener">官方地址</a></p><p>*<a href="http://rhaas.blogspot.jp/2014/03/postgresql-now-has-logical-decoding.html" target="_blank" rel="noopener">《PostgreSQL Now Has Logical Decoding》</a></p><p>介绍：PostgreSQL Now Has Logical Decoding,此外作者也是一位enterpriseDB的工程师，他的其他<a href="http://rhaas.blogspot.jp/" target="_blank" rel="noopener">博文</a>也很精彩.</p><ul><li><a href="http://www.pgconf.us/2014/schedule/" target="_blank" rel="noopener">《美国2014年pgconf paper》</a></li></ul><p>介绍：美国2014年pgconf paper。</p><ul><li><a href="https://github.com/maxlapshin/mysql2postgres" target="_blank" rel="noopener">《mysql2postgres》</a></li></ul><p>介绍：把MySQL迁移至postgreSQL?不如试试这个工具吧</p><ul><li><a href="https://www.quora.com/What-are-the-advantages-and-disadvantages-of-using-PostgreSQL-over-MySQL" target="_blank" rel="noopener">《What are the advantages and disadvantages of using PostgreSQL over MySQL?》</a></li></ul><p>介绍：使用PG与MySQL比较有那些有点和缺点？</p><ul><li><a href="http://blog.lostpropertyhq.com/postgres-full-text-search-is-good-enough/" target="_blank" rel="noopener">《Postgres full-text search is Good Enough!》</a></li></ul><p>介绍：Postgres的全文查询其实也很棒：多语言支持，模糊查询等，这篇文章说的很详细。而且里面有很多实际例子</p><ul><li><a href="http://security.stackexchange.com/a/2536" target="_blank" rel="noopener">《PostgreSQL Security Audit》</a></li></ul><p>介绍：数据库安全问题一直是一个问题热门话题，PostgreSQL资料更是少之有少。这篇文章值得推荐。建议多多留意<a href="http://www.cvedetails.com/vulnerability-list/vendor_id-336/product_id-575/Postgresql-Postgresql.html" target="_blank" rel="noopener">postgresql security Vulnerabilities</a>、<a href="http://lwn.net/Articles/546550/" target="_blank" rel="noopener">Vulnerability handling in the PostgreSQL project</a>、<a href="https://docs.newrelic.com/docs/apm/traces/transaction-traces/security-postgresql-explain-plans" target="_blank" rel="noopener">Security for PostgreSQL explain plans</a>、<a href="http://blog.2ndquadrant.com/postgresql-row-security-overview/" target="_blank" rel="noopener">Row security in PostgreSQL</a></p><ul><li><a href="http://blog.osdba.net/525.html" target="_blank" rel="noopener">《使用oracle_fdw进行增量数据迁移的神奇方法》</a></li></ul><p>介绍:Oracle增量数据迁移到postgres方法，此外博主还有其他非常棒的文章。推荐也可以看看</p><ul><li><a href="http://blog.2ndquadrant.com/ware-yosemite-possible-postgresql-upgrade-issues-os-x-10-10/" target="_blank" rel="noopener">《Ware Yosemite? Possible PostgreSQL upgrade issues in OS X 10.10》</a></li></ul><p>介绍:PostgreSQL升级在 Yosemite出现问题？可以参考一下这里。同样的也还有其他的文章也很不错</p><ul><li><a href="http://michael.otacoo.com/" target="_blank" rel="noopener">《Open source developer based in Japan》</a></li></ul><p>介绍:如题，是日本一个开源项目博客，里面有很多postgresql的最新特性介绍(截止目前2014.12.13已有pg9.5的特性预览了)</p><ul><li><a href="http://pgxn.org/" target="_blank" rel="noopener">《PGXN: PostgreSQL Extension Network》</a></li></ul><p>介绍:一个存放PostgreSQL扩展库的资源库,很多扩展插件都能够在这个里面找到</p><ul><li><a href="http://www.slideshare.net/kaigai/gpgpu-accelerates-postgresql" target="_blank" rel="noopener">《GP GPU  Accelerates PostgreSQL》</a></li></ul><p>介绍：GPU对pg数据库的加速优化</p><ul><li><a href="http://www.slideshare.net/petereisentraut/porting-oracle-applications-to-postgresql" target="_blank" rel="noopener">《Porting Oracle Applications to PostgreSQL》</a></li></ul><p>介绍：从Oracle迁移到pg，此外该作者还有一篇迁移的<a href="http://www.slideshare.net/petereisentraut/porting-applications-from-oracle-to-postgre-sql" target="_blank" rel="noopener">ppt</a>.</p><ul><li><a href="http://www.slideshare.net/justatheory/building-and-distributing-postgresql-extensions-without-learning-c" target="_blank" rel="noopener">《Building and Distributing PostgreSQL Extensions Without Learning C》</a></li></ul><p>介绍：即使没有C，你也可以扩展pg</p><ul><li><a href="https://stripe.com/blog/pagerduty-analytics-with-pd2pg" target="_blank" rel="noopener">《PagerDuty analytics with Postgres》</a></li></ul><p>介绍：使用PagerDuty做pg分析</p><ul><li><a href="https://gocardless.com/blog/syncing-postgres-to-elasticsearch-lessons-learned/" target="_blank" rel="noopener">《Syncing Postgres to Elasticsearch: lessons learned》</a></li></ul><p>介绍：Elasticsearch是一个实时的分布式搜索和分析引擎,这篇文章是讲述作者在做pg同步到Elasticsearch的时候的一些经验之谈，如果有相关需要的建议阅读．如果不明白什么是E<a href="http://www.elasticsearch.org/" target="_blank" rel="noopener">lasticsearch</a>，可以先看看<a href="http://fuxiaopang.gitbooks.io/learnelasticsearch/" target="_blank" rel="noopener">Elasticsearch权威指南</a></p><ul><li><a href="https://github.com/itissid/pypgTAP" target="_blank" rel="noopener">《pypgTAP》</a></li></ul><p>介绍：Making Postgres coding and testing fun!</p><ul><li><a href="http://geoffrey.io/backuping-postgresql-in-docker.html" target="_blank" rel="noopener">《Backuping PostgreSQL with Docker》</a></li></ul><p>介绍：备份基于Docker的PostgreSQL数据库,国内有<a href="http://dockerone.com/article/118" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://raghavt.blogspot.com/2011/04/postgresql-90-memory-processes.html" target="_blank" rel="noopener">《postgresql 9.0 memory processes》</a></li></ul><p>介绍：PostgreSQL 9.0 内存 &amp; 进程，感觉英语吃力的朋友可以阅读<a href="http://dreamer-yzy.github.io/2015/01/09/-%E7%BF%BB%E8%AF%91-PostgreSQL-9-0-%E5%86%85%E5%AD%98-%E8%BF%9B%E7%A8%8B/" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://raghavt.blogspot.com/2011/04/postgresql-90-architecture.html" target="_blank" rel="noopener">《postgresql 9.0 architecture》</a></li></ul><p>介绍： 本篇文章讲述了PostgreSQL 9.0 构架，<a href="http://dreamer-yzy.github.io/2015/01/08/-%E7%BF%BB%E8%AF%91-PostgreSQL-9-0-%E6%9E%84%E6%9E%B6/" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://raghavt.blogspot.com/2011/11/deadlocks-in-postgresql.html" target="_blank" rel="noopener">《Deadlocks in PostgreSQL》</a></li></ul><p>介绍： PostgreSQL中的死锁，<a href="http://dreamer-yzy.github.io/2015/01/14/-%E7%BF%BB%E8%AF%91-PostgreSQL%E4%B8%AD%E7%9A%84%E6%AD%BB%E9%94%81/" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://raghavt.blogspot.com/2011/05/postgresql-90-backup-recovery.html" target="_blank" rel="noopener">《PostgreSQL 9.0 Backup &amp; Recovery》</a></li></ul><p>介绍： 本篇文章讲述了PostgreSQL 9.0 备份 &amp; 恢复架，<a href="http://dreamer-yzy.github.io/2015/01/13/-%E7%BF%BB%E8%AF%91-PostgreSQL-9-0-%E5%A4%87%E4%BB%BD-%E6%81%A2%E5%A4%8D/" target="_blank" rel="noopener">中文版</a></p><ul><li><a href="http://www.infoq.com/cn/news/2015/01/postgresql-elasticsearch" target="_blank" rel="noopener">《将数据从PostgreSQL同步到Elasticsearch的经验总结》</a></li></ul><p>介绍： 将数据从PostgreSQL同步到Elasticsearch的经验总结</p><ul><li><a href="http://www.vldb.org/pvldb/vol6/" target="_blank" rel="noopener">《数据库相论文推荐》</a></li></ul><p>介绍： 索引，查询，磁盘，优化，挖掘，集群，数据恢复，高可用，高性能等等，这些仅仅是一部分而已，在<a href="http://www.vldb.org/pvldb/" target="_blank" rel="noopener">主页</a>上面有2014年一年的数据库相关论文</p><ul><li><a href="http://pgloader.io/" target="_blank" rel="noopener">《pgloader》</a></li></ul><p>介绍： postgresql的一数据导入工具，支持csv, 数据迁移</p><ul><li><a href="https://github.com/mihailShumilov/mysql2postgresql" target="_blank" rel="noopener">《mysql schema to postgresql》</a></li></ul><p>介绍：Converter mysql schema and data to postgresql</p><ul><li><a href="http://www.pgsql.ru/db/pgsearch/" target="_blank" rel="noopener">《Search PostgreSQL sites》</a></li></ul><p>介绍：一个PostgreSQL资料搜索引擎.</p><ul><li><a href="http://www.postgresqltutorial.com/" target="_blank" rel="noopener">《PostgreSQL Tutorial》</a></li></ul><p>介绍：一个PostgreSQL入门教程站点，新手上路.</p><ul><li><a href="http://hans.io/blog/2014/03/25/postgresql_cluster/" target="_blank" rel="noopener">《PostgreSQL: CLUSTER table USING index》</a></li></ul><p>介绍：对CLUSTER表使用索引.</p><ul><li><a href="http://blog.endpoint.com/2014/11/when-postgres-will-not-start.html" target="_blank" rel="noopener">《When Postgres will not start》</a></li></ul><p>介绍：当数据库无法启动的时候,我们应该如何做.</p><ul><li><a href="http://www.craigkerstiens.com/2014/05/22/on-connection-pooling/" target="_blank" rel="noopener">《Postgres and Connection Pooling》</a></li></ul><p>介绍：作者的<a href="http://www.craigkerstiens.com/" target="_blank" rel="noopener">博客</a>还有很多干货.</p><ul><li><a href="https://pgbouncer.github.io/" target="_blank" rel="noopener">《PgBouncer》</a></li></ul><p>介绍：PGBouncer是一个轻量级的针对PostgreSQL的数据库连接池工具，能够给客户端提供一个统一的链接视图.</p><ul><li><a href="https://wiki.postgresql.org/wiki/PGQ_Tutorial" target="_blank" rel="noopener">《PGQ 》</a></li></ul><p>介绍：PGQ is the queueing solution from Skytools. The Londiste replication solution is a consumer daemon built on PGQ, and the API is accessible for you to create any asynchronous processing facility, based on queuing.<a href="https://github.com/kostya/pgq" target="_blank" rel="noopener">github</a>.</p><ul><li><a href="https://www.youtube.com/watch?v=j642n39oBgQ" target="_blank" rel="noopener">《Implementing High Availability with PostgreSQL》</a></li></ul><p>介绍：实现一个高可用PostgreSQL集群,YoutuBe上更多<a href="https://www.youtube.com/results?search_query=postgresql+cluster" target="_blank" rel="noopener">PostgreSQL cluster</a>视频.</p><ul><li><a href="https://github.com/numtel/meteor-pg" target="_blank" rel="noopener">《numtel:pg》</a></li></ul><p>介绍：Reactive PostgreSQL for Meteor.</p><ul><li><a href="https://lob.com/blog/supercharge-your-postgresql-performance/" target="_blank" rel="noopener">《Slow PostgreSQL Performance? Don’t Forget to Vacuum your Database》</a></li></ul><p>介绍：数据库性能优化之Vacuum.</p><ul><li><a href="http://www.depesz.com/" target="_blank" rel="noopener">《select * from depesz;》</a></li></ul><p>介绍：里面有很多pg的最新资料,例如新版本的功能,技巧等.</p><ul><li><a href="http://bdr-project.org/docs/next/index.html" target="_blank" rel="noopener">《BDR 0.10.0 Documentation》</a></li></ul><p>介绍：<a href="http://2ndquadrant.com/en/resources/bdr/" target="_blank" rel="noopener">BDR</a>新的文档,使用的数据库版本是9.4的,BDR可以帮助你更好的建立一个pg集群.</p><ul><li><a href="http://blog.tarkalabs.com/2015/04/16/managing-big-enough-data-in-postgres/" target="_blank" rel="noopener">《Managing big enough data in postgres》</a></li></ul><p>介绍：pg中的大规模数据管理经验.</p><ul><li><a href="http://codex.cs.yale.edu/avi/db-book/" target="_blank" rel="noopener">《Database System Concepts Sixth Edition》</a></li></ul><p>介绍：耶鲁大学的数据库系统概念课件.</p><ul><li><a href="https://wiki.postgresql.org/images/e/e3/Hooks_in_postgresql.pdf" target="_blank" rel="noopener">《Hooks in PostgreSQL》</a></li></ul><p>介绍：PostgreSQL的hook机制介绍.如果有困难可以先看看<a href="http://www.cnblogs.com/gaojian/p/3259147.html" target="_blank" rel="noopener">简单的使用介绍</a>，此外这位博主的<a href="http://www.cnblogs.com/gaojian/p/topindex.html" target="_blank" rel="noopener">其他pg文章</a>也不错.</p><ul><li><a href="http://www.postgresql.org.es/sites/default/files/ERL-M87-06.pdf" target="_blank" rel="noopener">《The design of the postgres storage system》</a></li></ul><p>介绍：Postgres存储系统设计论文.</p><ul><li><a href="http://www.postgresql.org.es/sites/default/files/ERL-M85-95.pdf" target="_blank" rel="noopener">《The design of the postgres》</a></li></ul><p>介绍：Postgres设计论文.</p><ul><li><a href="http://www.postgresql.org.es/sites/default/files/ERL-M85-95.pdf" target="_blank" rel="noopener">《The Design of the POSTGRES Rules System》</a></li></ul><p>介绍：The Design of the POSTGRES Rules System.</p><ul><li><a href="http://www.postgresql.org/docs/devel/static/biblio.html" target="_blank" rel="noopener">《PostgreSQL官方推荐文献》</a></li></ul><p>介绍：PostgreSQL官方推荐文献.</p><ul><li><a href="http://wshan.net/bigdata/read1.pdf" target="_blank" rel="noopener">《Anatomy of a Database System》</a></li></ul><p>介绍：数据库内部结构剖析.</p><ul><li><a href="http://pgtune.leopard.in.ua/" target="_blank" rel="noopener">《PGtune》</a></li></ul><p>介绍：PostgreSQL性能调优工具,只需要输入机器配置即可获得相应的推荐优化参数.</p><ul><li><a href="https://robots.thoughtbot.com/postgresql-performance-considerations" target="_blank" rel="noopener">《PostgreSQL performance considerations》</a></li></ul><p>介绍：很多讲 PostgreSQL 优化的文章都提到了 Partial indexes<a href="http://www.postgresql.org/docs/9.4/static/indexes-partial.html" target="_blank" rel="noopener">Partial indexes</a>，简单的说，它是一个通过 WHERE 过滤后的子集数据的索引，虽然 MySQL 里也有这个名词，但完全不是一个东西。案例：㈠ <a href="http://instagram-engineering.tumblr.com/post/40781627982/handling-growth-with-postgres-5-tips-from" target="_blank" rel="noopener">Handling Growth with Postgres: 5 Tips From Instagram</a> ㈡ <a href="http://blog.heapanalytics.com/speeding-up-postgresql-queries-with-partial-indexes/" target="_blank" rel="noopener">Speeding Up PostgreSQL With Partial Indexes</a>.</p><ul><li><a href="http://www.postgresguide.com/index.html" target="_blank" rel="noopener">《Postgres Guide》</a></li></ul><p>介绍：Postgres的指南主要强调在Postgre存在的最佳实践和强大的功能.</p><ul><li><a href="http://linuxfinances.info/info/postgresqlperformance.html" target="_blank" rel="noopener">《PostgreSQL Performance Tuning》</a></li></ul><p>介绍：PostgreSQL性能调优,作者的其他<a href="http://linuxfinances.info/info/postgresql.html" target="_blank" rel="noopener">关于PostgreSQL文章</a>也不错.</p><ul><li><a href="http://www.postgresql.org/developer/backend/" target="_blank" rel="noopener">《PostgreSQL Backend Flowchart》</a></li></ul><p>介绍： PostgreSQL 内核学习.</p><ul><li><a href="http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=postgresql" target="_blank" rel="noopener">《PostgreSQL Vulnerability》</a></li></ul><p>介绍： PostgreSQL漏洞库.</p><ul><li><a href="https://blog.lateral.io/2015/05/full-text-search-in-milliseconds-with-postgresql/" target="_blank" rel="noopener">《Full text search in milliseconds with PostgreSQL》</a></li></ul><p>介绍： PostgreSQL毫秒级全文本搜索.</p><ul><li><a href="http://www.varlena.com/GeneralBits/Tidbits/annotated_conf_e.html" target="_blank" rel="noopener">《Annotated postgresql.conf and Global User Configuration (GUC) Guide》</a></li></ul><p>介绍： postgresql.conf配置文件注释.</p><ul><li><a href="http://blog.confluent.io/2015/04/23/bottled-water-real-time-integration-of-postgresql-and-kafka/" target="_blank" rel="noopener">《Bottled Water: Real-time integration of PostgreSQL and Kafka》</a></li></ul><p>介绍：利用Postgres 9.4的新功能Logical Decoding，实时stream所有SQL操作到Kafka，然后下游的各种consumer从Kafka中接收。其实就是Write-ahead logging的广义应用</p><ul><li><a href="https://www.compose.io/articles/is-postgresql-your-next-json-database/" target="_blank" rel="noopener">《Is PostgreSQL Your Next JSON Database?》</a></li></ul><p>介绍： Is PostgreSQL Your Next JSON Database?.</p><ul><li><a href="http://blog.2ndquadrant.com/nosql-postgresql-9-4-jsonb/" target="_blank" rel="noopener">《NoSQL with PostgreSQL 9.4 and JSONB》</a></li></ul><p>介绍： NoSQL with PostgreSQL 9.4 and JSONB.</p><ul><li><a href="http://www.linuxjournal.com/content/postgresql-nosql-database" target="_blank" rel="noopener">《PostgreSQL, the NoSQL Database》</a></li></ul><p>介绍： PostgreSQL, the NoSQL Database.</p><ul><li><a href="http://blog.codacy.com/2015/05/14/how-to-update-large-tables-in-postgresql/" target="_blank" rel="noopener">《How to update large tables in PostgreSQL》</a></li></ul><p>介绍： PostgreSQL如何更新大表.</p><ul><li><a href="http://www.postgresql.org/docs/devel/static/error-style-guide.html" target="_blank" rel="noopener">《PostgreSQL:Error Message Style Guide》</a></li></ul><p>介绍： PostgreSQL错误信息编码指南.</p><ul><li><a href="https://www.citusdata.com/blog/156-compressing-jsonb-using-cstore-fdw" target="_blank" rel="noopener">《Compressing PostgreSQL JSONB data 12x using cstore_fdw》</a></li></ul><p>介绍： cstore_fdw压缩PostgreSQL数据.</p><ul><li><a href="http://lwn.net/SubscriberLink/645020/e1ba36cff8248df0/" target="_blank" rel="noopener">《PostgreSQL: the good, the bad, and the ugly》</a></li></ul><p>介绍： PostgreSQL评价.</p><ul><li><a href="http://www.hankinsoft.com/SQLProPostgres/" target="_blank" rel="noopener">《SQLPro for PostgresSQL》</a></li></ul><p>介绍： Mac OS X上的PostgreSQL管理器.</p><ul><li><a href="https://www.youtube.com/watch?v=pbg97bkxbbY&amp;utm_source=postgresweekly&amp;utm_medium=email" target="_blank" rel="noopener">《PostgreSQL 9.5’s Upsert Feature Explained》</a></li></ul><p>介绍: PostgreSQL 9.5新特性Upsert解释 .</p><ul><li><a href="http://www.vertabelo.com/blog/technical-articles/postgresql-database-replication" target="_blank" rel="noopener">《PostgreSQL database replication》</a></li></ul><p>介绍:PostgreSQL的复制.</p><ul><li><a href="http://momjian.us/main/blogs/pgblog/2015.html" target="_blank" rel="noopener">《YeSQL: Battling the NoSQL Hype Cycle with Postgres》</a></li></ul><p>介绍： YeSQL: Battling the NoSQL Hype Cycle with Postgres,博客的<a href="http://momjian.us/main/blogs/pgblog/2015.html" target="_blank" rel="noopener">其他内容</a>也不错.</p><ul><li><a href="http://pgtap.org/" target="_blank" rel="noopener">《pgTAP》</a></li></ul><p>介绍:pgTAP is a unit testing framework for PostgreSQL written in PL/pgSQL and PL/SQL.</p><ul><li><a href="http://www.commandprompt.com/ppbook/?page=ppbook" target="_blank" rel="noopener">《Practical PostgreSQL》</a></li></ul><p>介绍: 免费的pg电子书《PostgreSQL实践》,书虽然有点老,但是很多知识点是可以通用的.</p><ul><li><a href="http://momjian.us/main/writings/pgsql/aw_pgsql_book/" target="_blank" rel="noopener">《PostgreSQL: Introduction and Concepts》</a></li></ul><p>介绍:PostgreSQL介绍与入门,免费在线电子书,<a href="http://momjian.us/main/writings/pgsql/bookfigs.pdf" target="_blank" rel="noopener">pdf版</a>,入门的还有<a href="http://momjian.us/main/writings/pgsql/Get_to_know_PostgreSQL.pdf" target="_blank" rel="noopener">Get to know PostgreSQL</a>.</p><ul><li><a href="http://momjian.us/main/writings/pgsql/administration.pdf" target="_blank" rel="noopener">《Mastering PostgreSQL Administration》</a></li></ul><p>介绍:PostgreSQL管理入门,非常全,此外作者写了很多关于pg的<a href="http://momjian.us/main/writings/pgsql/" target="_blank" rel="noopener">ppt和文档</a>,也很精彩.</p><ul><li><a href="https://wiki.postgresql.org/wiki/Postgres-XC" target="_blank" rel="noopener">《Postgres-XC》</a></li></ul><p>介绍: Postgres-XC 是一种提供写可靠性,多主节点数据同步,数据传输的开源集群方案.</p><ul><li><a href="http://www.pgcon.org/2015/schedule/" target="_blank" rel="noopener">《PGCon 2015 演讲稿》</a></li></ul><p>介绍: PGCon 2015 演讲稿下载.</p><ul><li><a href="http://www.enterprisedb.com/postgres-plus-edb-blog/robert-haas/postgresql-shutdown" target="_blank" rel="noopener">《PostgreSQL Shutdown》</a></li></ul><p>介绍: PG停止服务评析.</p><ul><li><a href="http://www.enterprisedb.com/postgres-plus-edb-blog/robert-haas/first-rule-securing-postgres-don-t-be-dumb" target="_blank" rel="noopener">《First Rule in Securing Postgres: Don’t Be Dumb》</a></li></ul><p>介绍: pg的安全规则建议,共5点,第一点就是Don’t be dumb!,enterprisedb的<a href="http://www.enterprisedb.com/postgres-plus-edb-blog" target="_blank" rel="noopener">官方博客</a>资源还真的比较丰富,例如还有中文版的<a href="http://www.enterprisedb.com/docs/cn/8.3R2/oracompat/EnterpriseDB_OraCompat_8.3_CN-01.htm" target="_blank" rel="noopener">Postgres Plus Advanced Server与oracle兼容文档</a>.</p><ul><li><a href="http://arxiv.org/pdf/1208.4179v1.pdf" target="_blank" rel="noopener">《Serializable Snapshot Isolation in PostgreSQL》</a></li></ul><p>介绍: PG中的可串行化快照隔离.</p><ul><li><a href="https://wiki.postgresql.org/wiki/Converting_from_other_Databases_to_PostgreSQL" target="_blank" rel="noopener">《Converting from other Databases to PostgreSQL》</a></li></ul><p>介绍: 其他数据库向psotgresql迁移数据的工具,官方出品，包括 MySQL, MS SQL Server, SQL Azure, Oracle, MS Access.等.</p><ul><li><a href="http://pan.baidu.com/s/1bnnqEHx" target="_blank" rel="noopener">《深度学习PostgreSQL》</a></li></ul><p>介绍: 从安装到双机热备再到内核分析,内容丰富网盘提取密码<code>fmby</code>.</p><ul><li><a href="http://pgcli.com/" target="_blank" rel="noopener">《Postgres CLI with autocompletion and syntax highlighting》</a></li></ul><p>介绍: pgcli是一个PostgreSQL命令行工具,提供了语法高亮以及自动补全的功能.</p><ul><li><a href="http://postgresguide.com/" target="_blank" rel="noopener">《Postgres Guid》</a></li></ul><p>介绍: Postgres入门指南,从安装到优化,也讲到了非标准数据类型JSON,hstor等.</p><ul><li><a href="https://devcenter.heroku.com/articles/postgresql-indexes#partial-indexes" target="_blank" rel="noopener">《Efficient Use of PostgreSQL Indexes》</a></li></ul><p>介绍: 本文介绍了如何高效的使用pg的索引,很详细.讲到了很多容易被初学者容易疏忽的地方.</p><ul><li><a href="http://www.cnblogs.com/stephen-liu74/archive/2012/06/08/2315679.html" target="_blank" rel="noopener">《PostgreSQL学习手册(目录)》</a></li></ul><p>介绍: PostgreSQL学习手册,虽然是2012年的,但里面的内容与现在的最新版pg是兼容,可以正常使用的.</p><ul><li><a href="http://lwn.net/Articles/653411/" target="_blank" rel="noopener">《”Big data” features coming in PostgreSQL 9.5》</a></li></ul><p>介绍: PostgreSQL9.5中对于大数据的有利特性介绍.</p><ul><li><a href="http://postgres-bits.herokuapp.com/" target="_blank" rel="noopener">《PostgreSQL-The Bits You Haven’t Found》</a></li></ul><p>介绍: PostgreSQL中可能你还不知道的秘密,可以用作知识梳理.</p><ul><li><a href="http://rob.conery.io/2015/08/20/designing-a-postgresql-document-api/" target="_blank" rel="noopener">《Designing A PostgreSQL Document API》</a></li></ul><p>介绍: 自己动手设计一个PostgreSQL文档api.</p><ul><li><a href="https://eye.raze.mx/10-beginner-postgresql-tasks-you-should-know/" target="_blank" rel="noopener">《10 beginner’s PostgreSQL tasks you should know》</a></li></ul><p>介绍: PostgreSQL初学者快速入门要点.</p><ul><li><a href="https://www.airpair.com/postgresql/posts/sql-vs-nosql-ko-postgres-vs-mongo" target="_blank" rel="noopener">《SQL vs NoSQL KO. Postgres vs Mongo》</a></li></ul><p>介绍: 关系型数据库Postgres vs NoSQL 数据库Mongo的对决,这篇文章比较客观.</p><ul><li><a href="http://blog.chinaunix.net/uid-20726500-id-4454943.html" target="_blank" rel="noopener">《EnterpriseDB认证通关攻略》</a></li></ul><p>介绍:如果你想考EnterpriseDB认证,推荐阅读此篇文章.</p><ul><li><a href="https://github.com/uptimejp/sql_firewall" target="_blank" rel="noopener">《sql_firewall: a SQL Firewall Extension for PostgreSQL》</a></li></ul><p>介绍:这个插件可以更好的帮助你防御黑客攻击你的数据库.</p><ul><li><a href="http://blog.aquameta.com/2015/08/29/intro-meta/" target="_blank" rel="noopener">《Aquameta Layer 0: meta - Writable System Catalog for PostgreSQL》</a></li></ul><p>介绍:Aquameta的pg实践.</p><ul><li><a href="http://postgresweekly.com/" target="_blank" rel="noopener">《Postgres Weekly》</a></li></ul><p>介绍:国外的PostgreSQL周刊,每周的pg新鲜事.</p><ul><li><a href="https://www.citusdata.com/blog/19-ozgun/265-postgresql-pgshard-and-what-we-learned-our-failures" target="_blank" rel="noopener">《PostgreSQL, pg_shard, and what we learned from our failures》</a></li></ul><p>介绍:pg_shard的经验分享.</p><ul><li><a href="https://github.com/begriffs/postgrest" target="_blank" rel="noopener">《REST API for any Postgres database》</a></li></ul><p>介绍:pg的一个非官方REST API,此外推荐<a href="https://github.com/QBisConsult/psql-api" target="_blank" rel="noopener">RADIP RESTful API for PostgreSQL</a>.</p><ul><li><a href="http://mysql.taobao.org/monthly/2015/09/02/" target="_blank" rel="noopener">《Pg_clog异步提交一致性、原子操作与fsync》</a></li></ul><p>介绍:Pg_clog分析.</p><ul><li><a href="http://mysql.taobao.org/monthly/2015/09/06/" target="_blank" rel="noopener">《Pg的checkpoint的调度》</a></li></ul><p>介绍:同步机制分析.</p><ul><li><a href="https://www.kentik.com/postgresql-foreign-data-wrappers/" target="_blank" rel="noopener">《PostgreSQL Foreign Data Wrappers》</a></li></ul><p>介绍:PostgreSQL外部数据封装器介绍.</p><ul><li><a href="http://patshaughnessy.net/2014/10/13/following-a-select-statement-through-postgres-internals" target="_blank" rel="noopener">《Following a Select Statement Through Postgres Internals》</a></li></ul><p>介绍:SELECT查询如何在PostgreSQL内部工作的.</p><ul><li><a href="https://www.pipelinedb.com/" target="_blank" rel="noopener">《PipelineDB—The Streaming SQL Database》</a></li></ul><p>介绍:PipelineDB是基于PostgreSQL研发的一种流式关系数据库.</p><ul><li><a href="https://abdulyadi.files.wordpress.com/2015/10/ictvetpaper.pdf" target="_blank" rel="noopener">《PostgreSQL：A Platform for Multiple Sources Data Retrieval》</a></li></ul><p>介绍:使用pg完成多平台数据源检索,<a href="https://abdulyadi.files.wordpress.com/2015/10/presentation.pdf" target="_blank" rel="noopener">幻灯片</a>.</p><ul><li><a href="http://db.csail.mit.edu/projects/cstore/abadi-sigmod08.pdf" target="_blank" rel="noopener">《Column-Stores vs. Row-Stores: How Different Are They Really?》</a></li></ul><p>介绍:列式存储与行式存储数据库之间究竟有何区别？.</p><ul><li><a href="https://github.com/greenplum-db/gpdb" target="_blank" rel="noopener">《Pivotal Greenplum Database has been open sourced》</a></li></ul><p>介绍:基于PostgreSQL的Greenplum Database数据仓库开源.</p><ul><li><a href="http://pgsqlcn.com/index.html" target="_blank" rel="noopener">《PostgreSQL 数据库文档》</a></li></ul><p>介绍:PostgreSQL数据库文档,文档内容基于9.5版本演示.</p><ul><li><a href="http://highscalability.com/blog/2015/10/13/more-concurrency-improved-locking-in-postgresql.html" target="_blank" rel="noopener">《More Concurrency: Improved Locking In PostgreSQL》</a></li></ul><p>介绍:pg高并发在锁方面的改善，<a href="http://www.csdn.net/article/2015-11-07/2826143" target="_blank" rel="noopener">中文版</a>.</p><ul><li><a href="http://www.sqltabs.com/" target="_blank" rel="noopener">《SQL Tabs 》</a></li></ul><p>介绍:PostgreSQL的跨平台终端.</p><ul><li><a href="http://big-elephants.com/2015-10/writing-postgres-extensions-part-iii/" target="_blank" rel="noopener">《Writing Postgres Extensions - Debugging》</a></li></ul><p>介绍:PostgreSQL插件开发.</p><ul><li><a href="http://shisaa.jp/postset/postgresql-full-text-search-part-1.html" target="_blank" rel="noopener">《PostgreSQL: A full text search engine》</a></li></ul><p>介绍:PostgreSQL全文搜索引擎剖析<a href="http://shisaa.jp/postset/postgresql-full-text-search-part-2.html" target="_blank" rel="noopener">part2</a>,<a href="http://shisaa.jp/postset/postgresql-full-text-search-part-3.html" target="_blank" rel="noopener">part3</a>.</p><ul><li><a href="http://blog.postgresql-consulting.com/" target="_blank" rel="noopener">《PostgreSQL-Consulting.com》</a></li></ul><p>介绍:这是一个PG商业顾问的博客，里面提供的pg性能调优，部署，迁移等博文.</p><ul><li><a href="http://planet.postgresql.org/" target="_blank" rel="noopener">《PostgreSQL Planet》</a></li></ul><p>介绍:PostgreSQL官方的一个pg文章news.</p><ul><li><a href="http://blog.2ndquadrant.com/benchmarking-postgres-xl/" target="_blank" rel="noopener">《Benchmarking Postgres-XL》</a></li></ul><p>介绍:Postgres-XL压力测试分析,博客中的<a href="http://blog.2ndquadrant.com/" target="_blank" rel="noopener">其他内容</a>也很有料.</p><ul><li><a href="https://www.youtube.com/playlist?list=PLFRIKEguV54bgwAcgFiOs5GMo3q2DhVDj" target="_blank" rel="noopener">《PostgreSql Database Video Tutorials》</a></li></ul><p>介绍:PostgreSQL视频教程.</p><ul><li><a href="https://www.youtube.com/watch?v=GobQw9LMEaw" target="_blank" rel="noopener">《PostgreSQL Replication Tutorial》</a></li></ul><p>介绍：PostgreSQL Replication Tutorial</p><ul><li><a href="https://github.com/FRiCKLE/ngx_postgres" target="_blank" rel="noopener">《ngx_postgres》</a></li></ul><p>介绍:nginx访问Postgresql模块</p><ul><li><a href="http://anoncvs.postgresql.org/cvsweb.cgi/~checkout~/pgsql/src/tools/backend/index.html" target="_blank" rel="noopener">《How PostgreSQL Processes a Query》</a></li></ul><p>介绍:pg是如何处理一个查询的？</p><ul><li><a href="https://www.compose.io/articles/common-misconceptions-about-locking-in-postgresql/" target="_blank" rel="noopener">《Common misconceptions about locking in PostgreSQL》</a></li></ul><p>介绍:pg中容易误解的锁</p><ul><li><a href="http://www.bigsql.org/se/components.jsp" target="_blank" rel="noopener">《PostgreSQL Big SQL commponent》</a></li></ul><p>介绍:pg大数据工具箱</p><ul><li><a href="http://www.postgres.cn/docs/9.3.4/" target="_blank" rel="noopener">《PostgreSQL 9.3.4 文档》</a></li></ul><p>介绍:PostgreSQL 9.3.4 文档翻译,作者是《postgresql内核分析》作者</p><ul><li><a href="http://2ndquadrant.com/en/resources/pglogical/" target="_blank" rel="noopener">《pglogical：A logical replication system for PostgreSQL》</a></li></ul><p>介绍:pg的逻辑复制扩展,兼顾了基于触发器复制技术的灵活性,同时又有基于日志复制技术的高效性</p><ul><li><a href="http://tatiyants.com/pev" target="_blank" rel="noopener">《Postgres EXPLAIN Visualizer》</a></li></ul><p>介绍:Postgres的EXPLAIN查看执行计划已经非常的直观、全面，不过有人更钟情于图形化的展示，现在有了这样一个项目就是干这个的：Postgres EXPLAIN Visualizer (Pev)。</p><ul><li><a href="https://hashrocket.com/blog/posts/custom-aggregates-in-postgresql" target="_blank" rel="noopener">《Custom Aggregates in PostgreSQL》</a></li></ul><p>介绍:在写复杂的SQL时，可能会进行复杂的运算.但是原有的聚集函数并不能满足要求。这篇文章详细介绍了自定义聚集函数</p><ul><li><a href="http://www.geekytidbits.com/performance-tuning-postgres" target="_blank" rel="noopener">《Performance Tuning Queries in PostgreSQL》</a></li></ul><p>介绍:pg性能调优之数据查询,此外推荐<a href="https://www.youtube.com/watch?v=svqQzYFBPIo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=svqQzYFBPIo</a></p><ul><li><a href="http://www.adalyz.com/building-full-text-search-for-your-application-using-postgres/" target="_blank" rel="noopener">《Building Full Text Search For Your Application using Postgres》</a></li></ul><p>介绍:使用pg为自己的应用构建全文检索</p><ul><li><a href="http://www.sqlinjectionwiki.com/Categories/4/postgresql-sql-injection-cheat-sheet/" target="_blank" rel="noopener">《PostgreSQL SQL Injection Cheat Sheet》</a></li></ul><p>介绍:PostgreSQL SQL注入手册</p><ul><li><a href="http://jinchengli.me/post/postgres-query-opt/" target="_blank" rel="noopener">《PostgreSQL Query Optimization》</a></li></ul><p>介绍:PostgreSQL查询优化，比较新手，但是你得有点基本的优化基础。否则会看起来很吃力</p><ul><li><a href="https://begriffs.com/posts/2016-03-20-postgrest-tour.html" target="_blank" rel="noopener">《A Tour of PostgREST》</a></li></ul><p>介绍:PostgreSQL RESTful教程</p><ul><li><a href="http://explain.depesz.com/" target="_blank" rel="noopener">《PostgreSQL’s explain analyze made readable》</a></li></ul><p>介绍:可视化PostgreSQL执行计划,pg学习看执行计划的好资料</p><ul><li><a href="https://wiki.postgresql.org/images/1/1e/QuanHa_PGConf_US_2016_-_Doc.pdf" target="_blank" rel="noopener">《PostgreSQL HA Database Clusters through Containment》</a></li></ul><p>介绍:pg HA数据库集群分析</p><ul><li><a href="http://community.hpe.com/hpeb/attachments/hpeb/JapanEnterpriseTopics/198/1/PostgreSQL%209.6%20New%20Features%20en%2020160606-1.pdf" target="_blank" rel="noopener">《PostgreSQL 9.6 New Features With Examples》</a></li></ul><p>介绍:PostgreSQL9.6新特性</p><ul><li><a href="http://www.dalibo.org/_media/understanding_explain.pdf" target="_blank" rel="noopener">《Understanding EXPLAIN》</a></li></ul><p>介绍:深入学习PostgreSQL的explain工具</p><ul><li><a href="https://pgexercises.com/" target="_blank" rel="noopener">《PostgreSQL Exercises》</a></li></ul><p>介绍:PostgreSQL学习实验室，有练习。适合新手入门pg</p><ul><li><a href="http://use-the-index-luke.com/blog/2016-07-29/on-ubers-choice-of-databases" target="_blank" rel="noopener">《On Uber’s Choice of Databases》</a></li></ul><p>介绍:文章诞生于Uber发表的一篇关于从pg迁移到mysql的文章，国内与国外讨论甚广.在讨论过程中诞生了很多精彩的干货，值得一读。学习数据库要深入，并存的世界才是和平.推荐<a href="https://yq.aliyun.com/articles/58421" target="_blank" rel="noopener">为PostgreSQL讨说法 - 浅析《UBER ENGINEERING SWITCHED FROM POSTGRES TO MYSQL》</a></p><ul><li><a href="https://robots.thoughtbot.com/advanced-postgres-performance-tips" target="_blank" rel="noopener">《Advanced Postgres Performance Tips》</a></li></ul><p>介绍:高级PostgreSQL性能调优</p><ul><li><a href="https://www.pgcon.org/2016/schedule/events/934.en.html" target="_blank" rel="noopener">《PostgreSQL Index Internals》</a></li></ul><p>介绍:索引的内部原理,推荐<a href="https://www.pgcon.org/2016/schedule/" target="_blank" rel="noopener">2016年欧洲pg大会资料</a>涵盖ppt与视频</p><ul><li><a href="http://www.pglivebackup.org/" target="_blank" rel="noopener">《PGLiveBackup》</a></li></ul><p>介绍:pg数据库自动全量备份脚本.</p><ul><li><a href="https://github.com/citusdata/pg_paxos" target="_blank" rel="noopener">《pg_paxos:Basic implementation of Paxos and Paxos》</a></li></ul><p>介绍:分布式算法Paxos的pg实践，可以先通过<a href="https://wiki.postgresql.org/images/8/8f/Marco_Slot_-_pg_paxos_2015-10-29.pdf" target="_blank" rel="noopener">PPT</a>.它实现了基本的Multi-Paxos和Paxos.</p><ul><li><a href="https://momjian.us/main/writings/pgsql/hw_selection.pdf" target="_blank" rel="noopener">《Database Hardware Selection Guidelines》</a></li></ul><p>介绍:数据库硬件选择指南,主要是一个参考.推荐<a href="https://www.youtube.com/watch?v=qIlYZeSuv8w" target="_blank" rel="noopener">Database Hardware Selection Guidelines </a></p><ul><li><a href="https://github.com/2ndQuadrant/pglogical" target="_blank" rel="noopener">《pglogical:Logical Replication extension for PostgreSQL》</a></li></ul><p>介绍:PostgreSQL逻辑复制扩展.</p><ul><li><a href="http://www.foo.be/docs-free/aw_pgsql_book.pdf" target="_blank" rel="noopener">《PostgreSQL: Introduction and Concepts》</a></li></ul><p>介绍:PostgreSQL的历史书.</p><ul><li><a href="https://blog.twitch.tv/how-twitch-uses-postgresql-c34aa9e56f58" target="_blank" rel="noopener">《How Twitch uses PostgreSQL》</a></li></ul><p>介绍:PostgreSQL在twitch的应用.</p><ul><li><a href="http://pg-monz.github.io/pg_monz/index-en.html" target="_blank" rel="noopener">《pg_monz:PostgreSQL monitoring template for Zabbix》</a></li></ul><p>介绍:PostgreSQL的Zabbix监控模版.</p><ul><li><a href="https://github.com/chenaisheng/pgclusteradmin" target="_blank" rel="noopener">《pgclusteradmin:PostgreSQL cluster manager base on Golang》</a></li></ul><p>介绍:一款基于go开发的Postgresql集群管理工具</p><ul><li><a href="https://github.com/ankane/pghero" target="_blank" rel="noopener">《PgHero:PostgreSQL performance monitoring tool》</a></li></ul><p>介绍:基于Ruby开发的PostgreSQL性能监控Web平台，支持SQL查询历史记录，实时连接数监控,SQL分析,性能调优推荐,Tune是基于<a href="http://pgtune.leopard.in.ua/" target="_blank" rel="noopener">pgtune</a></p><ul><li><a href="http://www.sai.msu.su/~megera/postgres/gist/" target="_blank" rel="noopener">《GiST for PostgreSQL》</a></li></ul><p>介绍:PostgreSQL的GiST（通用搜索树）核心开发作者主页.</p><ul><li><a href="https://github.com/workflowproducts/postage" target="_blank" rel="noopener">《Postage - A fast replacement for PGAdmin》</a></li></ul><p>介绍:PGAdmin的替代工具.里面有一个比较实用的功能就是可以逆向表成关系图</p><ul><li><a href="http://tatiyants.com/pev/" target="_blank" rel="noopener">《Postgres EXPLAIN Visualizer (pev)》</a></li></ul><p>介绍:Postgres 执行计划可视化工具</p><ul><li><a href="http://blog.postgresql-consulting.com/2017/09/postgresql-workings-in-one-picture.html" target="_blank" rel="noopener">《PostgreSQL workings in one picture》</a></li></ul><p>介绍:一张图了解PostgreSQL工作结构</p><ul><li><a href="https://rcoh.me/posts/postgres-indexes-under-the-hood/" target="_blank" rel="noopener">《Postgres Indexes Under the Hood》</a></li></ul><p>介绍:Postgres索引的底层运行机制</p><ul><li><a href="https://github.com/jberkus/annotated.conf" target="_blank" rel="noopener">《Annotated Config Files for PostgreSQL》</a></li></ul><p>介绍:PostgreSQL配置文件注释篇，详细介绍每个参数的意思，其中<code>postgresql.10.simple.conf</code>为必须修改项，<code>extra.10.conf</code>为可能要修改的项。</p><ul><li><a href="https://pgbackrest.org/" target="_blank" rel="noopener">《pgBackRest:Reliable PostgreSQL Backup &amp; Restore》</a></li></ul><p>介绍:pgBackRest支持并行备份和恢复，增量备份。对于大规模pg数据库备份与同步很有帮助</p><ul><li><a href="https://wiki.postgresql.org/wiki/PostgreSQL_Related_Slides_and_Presentations" target="_blank" rel="noopener">《PostgreSQL Related Slides and Presentations》</a></li></ul><p>介绍:PostgreSQL相关演讲资料。包括一些pgconf会议PPT。</p><ul><li><a href="https://github.com/dhamaniasad/awesome-postgres" target="_blank" rel="noopener">《Awesome Postgres》</a></li></ul><p>介绍:Awesome系列，高可用、备份、管理、打包版本、命令行、监控、扩展、优化、工具、API、以及一些比较不错的博文、例如<a href="https://www.justwatch.com/blog/post/debugging-postgresql-performance-the-hard-way/" target="_blank" rel="noopener">Debugging PostgreSQL performance, the hard way</a></p><ul><li><a href="http://www.interdb.jp/pg/" target="_blank" rel="noopener">《The Internals of PostgreSQL》</a></li></ul><p>介绍:一本关于PG数据库管理员运维的书，主要围绕着集群、备份、Buffer、索引、复制.</p><ul><li><a href="http://postgres-data-types.pvh.ca/" target="_blank" rel="noopener">《Understanding the power of data types: PostgreSQL’s Secret Weapon》</a></li></ul><p>介绍:了解数据类型的力量：PostgreSQL的秘密武器.</p><ul><li><a href="https://www.postgresql.org/developer/backend/" target="_blank" rel="noopener">《PostgreSQL Backend Flowchart》</a></li></ul><p>介绍:PostgreSQL的后台执行流程图,对于阅读源码或者是想了解内部的构成可以先阅读。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;postgresql-Learning-resource-map&quot;&gt;&lt;a href=&quot;#postgresql-Learning-resource-map&quot; class=&quot;headerlink&quot; title=&quot;postgresql Learning resource
      
    
    </summary>
    
      <category term="postgresql" scheme="https://moonclearner.cn/categories/postgresql/"/>
    
    
      <category term="postgresql" scheme="https://moonclearner.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>adaptively set iframe height after iframe onloaded</title>
    <link href="https://moonclearner.cn/javascript/js_self_adaption_set_iframe_height.html"/>
    <id>https://moonclearner.cn/javascript/js_self_adaption_set_iframe_height.html</id>
    <published>2021-04-20T06:10:43.060Z</published>
    <updated>2019-04-22T03:00:00.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="adaptively-set-iframe-height-after-iframe-onloaded"><a href="#adaptively-set-iframe-height-after-iframe-onloaded" class="headerlink" title="adaptively set iframe height after iframe onloaded"></a>adaptively set iframe height after iframe onloaded</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setIframeHeight</span>(<span class="params">iframe</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (iframe) &#123;</span><br><span class="line">    <span class="keyword">var</span> iframeWin = iframe.contentWindow || iframe.contentDocument.parentWindow;</span><br><span class="line">    <span class="keyword">if</span> (iframeWin.document.body) &#123;</span><br><span class="line">      iframe.height = iframeWin.document.documentElement.scrollHeight || iframeWin.document.body.scrollHeight;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIframeHeight</span>(<span class="params">iframe</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> iframeWin = iframe.contentWindow || iframe.contentDocument.parentWindow;</span><br><span class="line">    <span class="keyword">var</span> height    = iframeWin.document.documentElement.scrollHeight || iframeWin.document.body.scrollHeight;</span><br><span class="line">    <span class="keyword">return</span> height</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// use tim to set iframe height after iframe onloaded</span></span><br><span class="line">jQuery(<span class="built_in">document</span>.getElementById(<span class="string">'iframe_id'</span>)).load(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> iframe = <span class="built_in">document</span>.getElementById(<span class="string">'iframe_id'</span>);</span><br><span class="line">    <span class="keyword">var</span> height = getIframeHeight(iframe);</span><br><span class="line">    <span class="keyword">var</span> tim    = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        setIframeHeight(iframe);</span><br><span class="line">        <span class="keyword">var</span> after_height = getIframeHeight(iframe);</span><br><span class="line">        <span class="keyword">if</span>(after_height &gt; height)&#123;</span><br><span class="line">            <span class="built_in">window</span>.clearInterval(tim);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,<span class="number">100</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;adaptively-set-iframe-height-after-iframe-onloaded&quot;&gt;&lt;a href=&quot;#adaptively-set-iframe-height-after-iframe-onloaded&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>use this</title>
    <link href="https://moonclearner.cn/javascript/js_use_this.html"/>
    <id>https://moonclearner.cn/javascript/js_use_this.html</id>
    <published>2021-04-20T06:10:43.060Z</published>
    <updated>2019-06-12T11:03:41.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="input-onclick-use-this"><a href="#input-onclick-use-this" class="headerlink" title="input onclick use this"></a>input onclick use this</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意this后面不能加空格</span></span><br><span class="line">&lt;input onclick=<span class="string">"return enable_box(this,'test')"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//形参不能写this</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enable_box</span>(<span class="params">obj, url</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;input-onclick-use-this&quot;&gt;&lt;a href=&quot;#input-onclick-use-this&quot; class=&quot;headerlink&quot; title=&quot;input onclick use this&quot;&gt;&lt;/a&gt;input onclick use th
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js Note</title>
    <link href="https://moonclearner.cn/javascript/js_note.html"/>
    <id>https://moonclearner.cn/javascript/js_note.html</id>
    <published>2021-04-20T06:10:43.056Z</published>
    <updated>2019-09-19T06:52:51.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javascript-Notes"><a href="#javascript-Notes" class="headerlink" title="javascript Notes"></a>javascript Notes</h1><h3 id="jquery-attr-and-prop"><a href="#jquery-attr-and-prop" class="headerlink" title="jquery attr and prop"></a>jquery attr and prop</h3><ul><li>对于HTML元素本身就带有的固有属性，在处理时，使用prop方法。</li><li>对于HTML元素我们自己自定义的DOM属性，在处理时，使用attr方法。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//像checkbox，radio和select这样的元素，选中属性对应“checked”和“selected”，这些也属于固有属性，因此需要使用prop方法去操作才能获得正确的结果。</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">"#chk1"</span>).prop(<span class="string">"checked"</span>) == <span class="literal">false</span></span><br><span class="line">$(<span class="string">"#chk2"</span>).prop(<span class="string">"checked"</span>) == <span class="literal">true</span></span><br><span class="line"><span class="comment">//如果上面使用attr方法，则会出现：</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">"#chk1"</span>).attr(<span class="string">"checked"</span>) == <span class="literal">undefined</span></span><br><span class="line">$(<span class="string">"#chk2"</span>).attr(<span class="string">"checked"</span>) == <span class="string">"checked"</span></span><br></pre></td></tr></table></figure><h3 id="deep-copy"><a href="#deep-copy" class="headerlink" title="deep copy"></a>deep copy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//深复制</span><br><span class="line">function copy(obj1,obj2)&#123;</span><br><span class="line">    var obj2=obj2||[];</span><br><span class="line">    for(var name in obj1)&#123;</span><br><span class="line">        if(typeof obj1[name] === &quot;object&quot;)&#123;</span><br><span class="line">            obj2[name]= (obj1[name] instanceof Array)?[]:&#123;&#125;;</span><br><span class="line">            copy(obj1[name],obj2[name]);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            obj2[name]=obj1[name];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return obj2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;javascript-Notes&quot;&gt;&lt;a href=&quot;#javascript-Notes&quot; class=&quot;headerlink&quot; title=&quot;javascript Notes&quot;&gt;&lt;/a&gt;javascript Notes&lt;/h1&gt;&lt;h3 id=&quot;jquery-at
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>onclick lanuch a post request，解决get参数太长，导致请求失败</title>
    <link href="https://moonclearner.cn/javascript/js_onclick_for_post.html"/>
    <id>https://moonclearner.cn/javascript/js_onclick_for_post.html</id>
    <published>2021-04-20T06:10:43.056Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="onclick-lanuch-post-request"><a href="#onclick-lanuch-post-request" class="headerlink" title="onclick lanuch post request"></a>onclick lanuch post request</h1><p>有时候，由于get请求下载文件，请求参数超过了2048字符，在IE等浏览器就会导致参数不完整</p><p>因此使用post请求，其参数就没有限制长度，</p><p>然后，使用ajax发起post请求，无法触发文件下载，因此使用模拟form表单发起post请求</p><p>原生onclick 发起post请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onclickpost</span>(<span class="params">URL, PARAMS</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp    = <span class="built_in">document</span>.createElement(<span class="string">"form"</span>);</span><br><span class="line">    temp.action = URL;</span><br><span class="line">    temp.method = <span class="string">"post"</span>;</span><br><span class="line">    temp.style.display = <span class="string">"none"</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> PARAMS) &#123;</span><br><span class="line">        <span class="keyword">var</span> opt   = <span class="built_in">document</span>.createElement(<span class="string">"textarea"</span>);</span><br><span class="line">        opt.name  = x;</span><br><span class="line">        opt.value = PARAMS[x];</span><br><span class="line">        temp.appendChild(opt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(temp);</span><br><span class="line">    temp.submit();</span><br><span class="line">    temp.parentNode.removeChild(temp);</span><br><span class="line">&#125;</span><br><span class="line">onclickpost(url, &#123;<span class="attr">cat</span>:rawinfo&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;onclick-lanuch-post-request&quot;&gt;&lt;a href=&quot;#onclick-lanuch-post-request&quot; class=&quot;headerlink&quot; title=&quot;onclick lanuch post request&quot;&gt;&lt;/a&gt;oncli
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>IE compatible</title>
    <link href="https://moonclearner.cn/javascript/js_IECompatible.html"/>
    <id>https://moonclearner.cn/javascript/js_IECompatible.html</id>
    <published>2021-04-20T06:10:43.052Z</published>
    <updated>2019-11-13T03:11:31.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jQuery-html-and-interHtml-method-run-very-slowly-on-IE-8-or-IE-9-browser"><a href="#jQuery-html-and-interHtml-method-run-very-slowly-on-IE-8-or-IE-9-browser" class="headerlink" title="jQuery().html() and interHtml method run very slowly on IE 8 or IE 9 browser"></a>jQuery().html() and interHtml method run very slowly on IE 8 or IE 9 browser</h1><h2 id="phenomenon"><a href="#phenomenon" class="headerlink" title="phenomenon"></a>phenomenon</h2><p>when run the method below, It costs too much time.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlString = <span class="string">"&lt;div&gt;&lt;span&gt;test&lt;/span&gt;&lt;/div&gt;"</span>;</span><br><span class="line">jQuery().html(htmlString)</span><br><span class="line">domcument.getElementById().interHtml = htmlString;</span><br></pre></td></tr></table></figure></p><h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><p>replace jQuery.html() or interHtml with dom method to solve the problem<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlString = <span class="string">"&lt;div&gt;&lt;span&gt;test&lt;/span&gt;&lt;/div&gt;"</span>;</span><br><span class="line"><span class="comment">//turn the string into a dom object </span></span><br><span class="line"><span class="keyword">var</span> domObj = jQuery(htmlString).get(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.getElementById(); </span><br><span class="line"><span class="keyword">var</span> childs = el.childNodes; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = childs .length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="comment">//delete all child node</span></span><br><span class="line">    el.removeChild(childs[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById().appendChild(domObj);</span><br></pre></td></tr></table></figure></p><h1 id="JSON-module-missing"><a href="#JSON-module-missing" class="headerlink" title="JSON module missing"></a>JSON module missing</h1><h2 id="phenomenon-1"><a href="#phenomenon-1" class="headerlink" title="phenomenon"></a>phenomenon</h2><p>such as JSON.parse or JSON.stringify method cant use</p><h2 id="solution-1"><a href="#solution-1" class="headerlink" title="solution"></a>solution</h2><p>download the json2.js or json3.js, and import <code>&lt;script src=&quot;/js/json3.min.js&quot;&gt;&lt;/script&gt;</code></p><h1 id="str-trim-missing"><a href="#str-trim-missing" class="headerlink" title="str.trim() missing"></a>str.trim() missing</h1><h2 id="solution-2"><a href="#solution-2" class="headerlink" title="solution"></a>solution</h2><p>replace str.trim() with jQuery.trim();</p><h1 id="jQuery-width-method-calculates-the-error-width"><a href="#jQuery-width-method-calculates-the-error-width" class="headerlink" title="jQuery().width() method calculates the error width"></a>jQuery().width() method calculates the error width</h1><h2 id="solution-3"><a href="#solution-3" class="headerlink" title="solution"></a>solution</h2><p>replace jQuery.outerWidth() width jQuery().width()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jQuery-html-and-interHtml-method-run-very-slowly-on-IE-8-or-IE-9-browser&quot;&gt;&lt;a href=&quot;#jQuery-html-and-interHtml-method-run-very-slowly
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js将div截图发送到后台生成图片</title>
    <link href="https://moonclearner.cn/javascript/js_html2cavas.html"/>
    <id>https://moonclearner.cn/javascript/js_html2cavas.html</id>
    <published>2021-04-20T06:10:43.052Z</published>
    <updated>2019-06-11T10:42:03.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="html2canvas"><a href="#html2canvas" class="headerlink" title="html2canvas"></a>html2canvas</h1><p>需要导入html2canvas.min.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">var</span> opts = &#123;</span><br><span class="line">scale:<span class="number">10</span>,</span><br><span class="line">width:oDiv.offsetWidth,</span><br><span class="line">height:oDiv.offsetHeight</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">html2canvas(oDiv, opts).then(<span class="function"><span class="keyword">function</span>(<span class="params">canvas</span>)</span>&#123;</span><br><span class="line">canvas.getContext(<span class="string">'2d'</span>).mozImageSmoothingEnabled    = <span class="literal">false</span>;</span><br><span class="line">canvas.getContext(<span class="string">'2d'</span>).webkitImageSmoothingEnabled = <span class="literal">false</span>;</span><br><span class="line">canvas.getContext(<span class="string">'2d'</span>).msImageSmoothingEnabled     = <span class="literal">false</span>;</span><br><span class="line">canvas.getContext(<span class="string">'2d'</span>).imageSmoothingEnabled       = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> strDataURI = canvas.toDataURL();</span><br><span class="line"><span class="keyword">var</span> location_url = <span class="string">"/download/"</span></span><br><span class="line">param = &#123;<span class="string">'img'</span>:strDataURI&#125;;</span><br><span class="line"><span class="keyword">new</span> Ajax.Request(location_url, &#123;</span><br><span class="line">method:<span class="string">'post'</span>,</span><br><span class="line">parameters:param,</span><br><span class="line">onComplete:<span class="function"><span class="keyword">function</span>(<span class="params">req</span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.location=location_url;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">jQuery(<span class="string">"#export"</span>).show();</span><br><span class="line"><span class="keyword">var</span> location_url = <span class="string">"/download/"</span></span><br><span class="line">param = &#123;&#125;;</span><br><span class="line"><span class="keyword">new</span> Ajax.Request(location_url, &#123;</span><br><span class="line">method:<span class="string">'post'</span>,</span><br><span class="line">parameters:param,</span><br><span class="line">onComplete:<span class="function"><span class="keyword">function</span>(<span class="params">req</span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.location=location_url;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>server<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span><span class="params">()</span></span>&#123;</span><br><span class="line">$img       = $_POST[<span class="string">'img'</span>];</span><br><span class="line">$file      = <span class="string">"/tmp.png"</span>;</span><br><span class="line">$img       = str_replace(<span class="string">'data:image/png;base64,'</span>, <span class="string">''</span>, $img);</span><br><span class="line">$img       = str_replace(<span class="string">' '</span>, <span class="string">'+'</span>, $img);</span><br><span class="line">$data      = base64_decode($img);</span><br><span class="line">file_put_contents($file, $data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;html2canvas&quot;&gt;&lt;a href=&quot;#html2canvas&quot; class=&quot;headerlink&quot; title=&quot;html2canvas&quot;&gt;&lt;/a&gt;html2canvas&lt;/h1&gt;&lt;p&gt;需要导入html2canvas.min.js&lt;br&gt;&lt;figure 
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>checkbox as radio input</title>
    <link href="https://moonclearner.cn/javascript/js_checkbox_as_radio.html"/>
    <id>https://moonclearner.cn/javascript/js_checkbox_as_radio.html</id>
    <published>2021-04-20T06:10:43.048Z</published>
    <updated>2019-04-09T07:41:45.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="checkbox-as-radio-input"><a href="#checkbox-as-radio-input" class="headerlink" title="checkbox as radio input"></a>checkbox as radio input</h1><p>将checkbox 作为 单选框来使用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input style="vertical-align: middle;" id="Checkbox" type="checkbox" name="switch" &lt;?=$isChecked?&gt; /&gt;&lt;span&gt;启用&lt;/span&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当form表单提交的时候执行该语句</span></span><br><span class="line"><span class="keyword">var</span> enable_use = <span class="built_in">document</span>.getElementById(<span class="string">"Checkbox"</span>).checked;</span><br><span class="line"><span class="keyword">var</span> val = (enable_use == <span class="literal">true</span>)?<span class="string">'true'</span>:<span class="string">'false'</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"Checkbox"</span>).value = val;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($switch))&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;updateJMREnable($switch);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;updateJMREnable(<span class="string">"false"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;checkbox-as-radio-input&quot;&gt;&lt;a href=&quot;#checkbox-as-radio-input&quot; class=&quot;headerlink&quot; title=&quot;checkbox as radio input&quot;&gt;&lt;/a&gt;checkbox as radio
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>get string actual length include Chinese</title>
    <link href="https://moonclearner.cn/javascript/js_get_actual_char_length.html"/>
    <id>https://moonclearner.cn/javascript/js_get_actual_char_length.html</id>
    <published>2021-04-20T06:10:43.048Z</published>
    <updated>2019-04-08T03:00:18.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="get-string-actual-length-include-Chinese"><a href="#get-string-actual-length-include-Chinese" class="headerlink" title="get string actual length include Chinese"></a>get string actual length include Chinese</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先把中文替换成一个字节的英文，在计算长度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCharLength</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.replace(<span class="regexp">/[\u0391-\uFFE5]/g</span>,<span class="string">"a"</span>).length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;get-string-actual-length-include-Chinese&quot;&gt;&lt;a href=&quot;#get-string-actual-length-include-Chinese&quot; class=&quot;headerlink&quot; title=&quot;get string a
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="html" scheme="https://moonclearner.cn/tags/html/"/>
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Jq from label name get</title>
    <link href="https://moonclearner.cn/javascript/jquery/jq_select.html"/>
    <id>https://moonclearner.cn/javascript/jquery/jq_select.html</id>
    <published>2021-04-20T06:10:34.799Z</published>
    <updated>2019-03-29T11:22:15.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="select-in-jquery"><a href="#select-in-jquery" class="headerlink" title="select in jquery"></a>select in jquery</h1><h2 id="增加删除select里面的option"><a href="#增加删除select里面的option" class="headerlink" title="增加删除select里面的option"></a>增加删除select里面的option</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#select_id"</span>).append(<span class="string">"&lt;option value='Value'&gt;Text&lt;/option&gt;"</span>); <span class="comment">//为Select追加一个Option(下拉项) </span></span><br><span class="line">$(<span class="string">"#select_id"</span>).prepend(<span class="string">"&lt;option value='0'&gt;请选择&lt;/option&gt;"</span>); <span class="comment">//为Select插入一个Option(第一个位置) </span></span><br><span class="line">$(<span class="string">"#select_id option:last"</span>).remove(); <span class="comment">//删除Select中索引值最大Option(最后一个) </span></span><br><span class="line">$(<span class="string">"#select_id option[index='0']"</span>).remove(); <span class="comment">//删除Select中索引值为0的Option(第一个) </span></span><br><span class="line">$(<span class="string">"#select_id option[value='3']"</span>).remove(); <span class="comment">//删除Select中Value='3'的Option </span></span><br><span class="line">$(<span class="string">"#select_id option[text='4']"</span>).remove(); <span class="comment">//删除Select中Text='4'的Option </span></span><br><span class="line">jQuery(<span class="string">"#link3"</span>).find(<span class="string">"option"</span>).remove();<span class="comment">//删除select里面所有的option</span></span><br></pre></td></tr></table></figure><h2 id="获取select里面的值"><a href="#获取select里面的值" class="headerlink" title="获取select里面的值"></a>获取select里面的值</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#select_id"</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//code...&#125;); //为Select添加事件，当选择其中一项时触发 </span></span><br><span class="line"><span class="keyword">var</span> checkText=$(<span class="string">"#select_id"</span>).find(<span class="string">"option:selected"</span>).text(); <span class="comment">//获取Select选择的Text </span></span><br><span class="line"><span class="keyword">var</span> checkValue=$(<span class="string">"#select_id"</span>).val(); <span class="comment">//获取Select选择的Value </span></span><br><span class="line"><span class="keyword">var</span> checkIndex=$(<span class="string">"#select_id "</span>).get(<span class="number">0</span>).selectedIndex; <span class="comment">//获取Select选择的索引值 </span></span><br><span class="line"><span class="keyword">var</span> maxIndex=$(<span class="string">"#select_id option:last"</span>).attr(<span class="string">"index"</span>); <span class="comment">//获取Select最大的索引值</span></span><br></pre></td></tr></table></figure><h2 id="select-事件"><a href="#select-事件" class="headerlink" title="select 事件"></a>select 事件</h2><ul><li>onchange 选择option触发的事件</li><li>onfocus  点击下拉框，就会触发的事件</li><li>onclick 不会触发任何事件</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;select-in-jquery&quot;&gt;&lt;a href=&quot;#select-in-jquery&quot; class=&quot;headerlink&quot; title=&quot;select in jquery&quot;&gt;&lt;/a&gt;select in jquery&lt;/h1&gt;&lt;h2 id=&quot;增加删除selec
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
      <category term="jquery" scheme="https://moonclearner.cn/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>Jq ajax</title>
    <link href="https://moonclearner.cn/javascript/jquery/jq_ajax.html"/>
    <id>https://moonclearner.cn/javascript/jquery/jq_ajax.html</id>
    <published>2021-04-20T06:10:34.795Z</published>
    <updated>2020-02-14T01:29:17.771Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jquery-Ajax"><a href="#jquery-Ajax" class="headerlink" title="jquery Ajax"></a>jquery Ajax</h1><h2 id="ajax-请求"><a href="#ajax-请求" class="headerlink" title="ajax 请求"></a>ajax 请求</h2><h3 id="question-1"><a href="#question-1" class="headerlink" title="question 1"></a>question 1</h3><p>ajax请求成功后，success返回看不到data</p><p>A：可能是因为服务器返回的数据不是json格式数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jquery-Ajax&quot;&gt;&lt;a href=&quot;#jquery-Ajax&quot; class=&quot;headerlink&quot; title=&quot;jquery Ajax&quot;&gt;&lt;/a&gt;jquery Ajax&lt;/h1&gt;&lt;h2 id=&quot;ajax-请求&quot;&gt;&lt;a href=&quot;#ajax-请求&quot; c
      
    
    </summary>
    
      <category term="js" scheme="https://moonclearner.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://moonclearner.cn/tags/js/"/>
    
      <category term="jquery" scheme="https://moonclearner.cn/tags/jquery/"/>
    
  </entry>
  
</feed>
