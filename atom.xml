<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>moonclearner page</title>
  
  <subtitle>moonclearner blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://moonclearner.cn/"/>
  <updated>2021-08-02T07:52:40.075Z</updated>
  <id>https://moonclearner.cn/</id>
  
  <author>
    <name>moonclearner</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kvm common command</title>
    <link href="https://moonclearner.cn/linux/kvm.html"/>
    <id>https://moonclearner.cn/linux/kvm.html</id>
    <published>2021-08-02T07:52:40.127Z</published>
    <updated>2021-08-02T07:52:40.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kvm-command"><a href="#kvm-command" class="headerlink" title="kvm command"></a>kvm command</h1><ul><li>virsh list –all<ul><li>gets the list of virtual machine info</li></ul></li><li>virsh start “Name”<ul><li>start virtual machine</li></ul></li><li>virsh shutdown “Id”<ul><li>shutdown virtual machine</li></ul></li><li>virsh console “Id”<ul><li>gets virtual machine console</li></ul></li><li>virsh dumpxml “Id” | grep file<ul><li>gets the image file path</li></ul></li><li>cat /etc/libvirt/qemu/<ul><li>get all virtual machine</li></ul></li></ul><h2 id="kvm-日志开启"><a href="#kvm-日志开启" class="headerlink" title="kvm 日志开启"></a>kvm 日志开启</h2><p>vim /etc/libvirt/libvirtd.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#将日志级别设置为 1（调试）</span><br><span class="line">log_level = 1</span><br><span class="line"></span><br><span class="line">#指定日志输出文件名称</span><br><span class="line">log_outputs=&quot;1:file:/var/log/libvirt/libvirtd.log&quot;</span><br></pre></td></tr></table></figure><p>systemctl restart libvirtd.service</p><p>or </p><p>/etc/init.d/libvirtd restart</p><h3 id="qemu虚拟机信息"><a href="#qemu虚拟机信息" class="headerlink" title="qemu虚拟机信息"></a>qemu虚拟机信息</h3><p>/var/log/livirt/qemu/</p><h2 id="libvirt-driver-storage-so-does-not-exist"><a href="#libvirt-driver-storage-so-does-not-exist" class="headerlink" title="libvirt_driver_storage.so does not exist"></a>libvirt_driver_storage.so does not exist</h2><p>yum install libvirt-daemon-driver_storage</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kvm-command&quot;&gt;&lt;a href=&quot;#kvm-command&quot; class=&quot;headerlink&quot; title=&quot;kvm command&quot;&gt;&lt;/a&gt;kvm command&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;virsh list –all&lt;ul&gt;
&lt;li&gt;gets
      
    
    </summary>
    
      <category term="kvm" scheme="https://moonclearner.cn/categories/kvm/"/>
    
    
      <category term="kvm" scheme="https://moonclearner.cn/tags/kvm/"/>
    
  </entry>
  
  <entry>
    <title>扩大home</title>
    <link href="https://moonclearner.cn/linux/expand_home.html"/>
    <id>https://moonclearner.cn/linux/expand_home.html</id>
    <published>2021-07-19T02:53:07.528Z</published>
    <updated>2021-07-19T02:53:07.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="格式化硬盘"><a href="#格式化硬盘" class="headerlink" title="格式化硬盘"></a>格式化硬盘</h1><h2 id="获得一块未使用的硬盘"><a href="#获得一块未使用的硬盘" class="headerlink" title="获得一块未使用的硬盘"></a>获得一块未使用的硬盘</h2><ul><li>重新插一块硬盘</li><li>对原有的分区进行拆分</li></ul><h2 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h2><ul><li>sudo fdisk</li><li>F 查看空闲分区</li><li>n 进行分区</li><li>w 保存分区</li></ul><h2 id="格式化新分区"><a href="#格式化新分区" class="headerlink" title="格式化新分区"></a>格式化新分区</h2><p>mkfs -t ext4 /dev/sda9</p><h1 id="挂载分区进行同步"><a href="#挂载分区进行同步" class="headerlink" title="挂载分区进行同步"></a>挂载分区进行同步</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#### 1-创建目录</span><br><span class="line">sudo mkdir /mnt/home</span><br><span class="line"></span><br><span class="line">#### 2-把/dev/sdb1挂载到/mnt/home</span><br><span class="line">sudo mount /dev/sdb1 /media/home</span><br><span class="line"></span><br><span class="line">#### 3-同步/home到/media/home，同步时间根据数据量大小决定，建议在系统空闲时操作</span><br><span class="line">sudo rsync -aXS /home/. /media/home/.</span><br><span class="line"></span><br><span class="line">## 备注：rsync非常耗时，可以采用ｃｐ</span><br><span class="line">sudo cp -a /home /media/home/</span><br><span class="line"></span><br><span class="line">#### 4-同步完成后重命名/home</span><br><span class="line">sudo mv /home /home_old</span><br><span class="line"></span><br><span class="line">#### 5-新建/home</span><br><span class="line">sudo mkdir /home</span><br><span class="line"></span><br><span class="line">#### 6-.取消/dev/sdb1挂载</span><br><span class="line">sudo umount /dev/sdb1</span><br><span class="line"></span><br><span class="line">#### 7-重新挂载/dev/sdb1到home</span><br><span class="line">sudo mount /dev/sdb1 /home</span><br><span class="line"></span><br><span class="line">#### 8-查看/dev/sdb1的UUID</span><br><span class="line">blkid</span><br><span class="line"></span><br><span class="line">#### 9-把UUID复制下来，修改/etc/fstab文件，实现开机自动挂载</span><br><span class="line">sudo gedit /etc/fstab</span><br><span class="line">    # home 4T</span><br><span class="line">    UUID=8da46012-ab9c-434f-a855-2484112fd1a7 /home ext4 nodev,nosuid 0 2</span><br></pre></td></tr></table></figure><h2 id="nodev-和呢nosuid"><a href="#nodev-和呢nosuid" class="headerlink" title="nodev 和呢nosuid"></a>nodev 和呢nosuid</h2><h3 id="nodev"><a href="#nodev" class="headerlink" title="nodev"></a>nodev</h3><pre><code>挂载选项指定文件系统不能包含特殊设备：这是安全预防措施。您不希望像这样的用户可以在世界范围内访问的文件系统具有创建字符设备或访问随机设备硬件的潜力。</code></pre><h3 id="nosuid-mount"><a href="#nosuid-mount" class="headerlink" title="nosuid mount"></a>nosuid mount</h3><p>选项指定文件系统不能包含已设置的用户ID文件。防止在可全局写入的文件系统上执行setuid二进制文件是有道理的，因为那里存在根升级或其他麻烦的风险。</p><h1 id="other"><a href="#other" class="headerlink" title="other"></a>other</h1><h2 id="挂载windows的ntfs分区报错"><a href="#挂载windows的ntfs分区报错" class="headerlink" title="挂载windows的ntfs分区报错"></a>挂载windows的ntfs分区报错</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Failed to mount &apos;/dev/sdb1&apos;: Input/output error</span><br><span class="line">NTFS is either inconsistent, or there is a hardware fault, or it&apos;s a</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>sudo ntfsfix /dev/sdb1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;格式化硬盘&quot;&gt;&lt;a href=&quot;#格式化硬盘&quot; class=&quot;headerlink&quot; title=&quot;格式化硬盘&quot;&gt;&lt;/a&gt;格式化硬盘&lt;/h1&gt;&lt;h2 id=&quot;获得一块未使用的硬盘&quot;&gt;&lt;a href=&quot;#获得一块未使用的硬盘&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="linux" scheme="https://moonclearner.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://moonclearner.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>定位 BUG</title>
    <link href="https://moonclearner.cn/linux/bug.html"/>
    <id>https://moonclearner.cn/linux/bug.html</id>
    <published>2021-07-19T02:53:03.368Z</published>
    <updated>2021-07-19T02:53:03.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定位BUG的场景"><a href="#定位BUG的场景" class="headerlink" title="定位BUG的场景"></a>定位BUG的场景</h1><h2 id="发现web卡住"><a href="#发现web卡住" class="headerlink" title="发现web卡住"></a>发现web卡住</h2><ul><li>ps -ef| grep apache2 和 ps -ef|grep php  发现apache和php子进程很多</li><li>strace -p</li><li>gdb -p<ul><li>bt</li></ul></li><li>查看线程ps -eT<ul><li>strace -p 线程</li><li>gdb -p 线程</li></ul></li><li>lsof<ul><li>根据gdb和strace的信息，可能会出现是因为某个文件锁住了，因此用lsof命令找到有那些进程占据了这个文件</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定位BUG的场景&quot;&gt;&lt;a href=&quot;#定位BUG的场景&quot; class=&quot;headerlink&quot; title=&quot;定位BUG的场景&quot;&gt;&lt;/a&gt;定位BUG的场景&lt;/h1&gt;&lt;h2 id=&quot;发现web卡住&quot;&gt;&lt;a href=&quot;#发现web卡住&quot; class=&quot;header
      
    
    </summary>
    
      <category term="linux" scheme="https://moonclearner.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://moonclearner.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python secure</title>
    <link href="https://moonclearner.cn/python/python_secure.html"/>
    <id>https://moonclearner.cn/python/python_secure.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2019-09-16T02:00:25.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="防止命令注入使用subprocess"><a href="#防止命令注入使用subprocess" class="headerlink" title="防止命令注入使用subprocess"></a>防止命令注入使用subprocess</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd = [&apos;ls&apos;, &apos;-al&apos;]</span><br><span class="line">p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)</span><br><span class="line">data = &apos;&apos;.join(p.stdout.readlines())</span><br><span class="line">p.stdout.close()</span><br></pre></td></tr></table></figure><h3 id="替换shell的管道符"><a href="#替换shell的管道符" class="headerlink" title="替换shell的管道符"></a>替换shell的管道符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># output = `dmesg | grep hda`</span><br><span class="line"></span><br><span class="line">p1 = subprocess.Popen([&apos;dmesg&apos;], stdout=PIPE)</span><br><span class="line">p2 = subprocess.Popen([&apos;grep&apos;, &apos;hda&apos;], stdin=p1.stdout, stdout=PIPE)</span><br><span class="line"></span><br><span class="line">p1.stdout.close()</span><br><span class="line">output = p2.communicate()[0]</span><br></pre></td></tr></table></figure><h2 id="防止sql注入"><a href="#防止sql注入" class="headerlink" title="防止sql注入"></a>防止sql注入</h2><h3 id="test"><a href="#test" class="headerlink" title="test"></a>test</h3><ul><li>1’ or ‘1’ = ‘1</li><li>sqlmap</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sql_cmd = &quot;select * from ?&quot;</span><br><span class="line">cur.execute(sql_cmd, (table_name, ))</span><br></pre></td></tr></table></figure><h2 id="输入参数作为动态代码运行"><a href="#输入参数作为动态代码运行" class="headerlink" title="输入参数作为动态代码运行"></a>输入参数作为动态代码运行</h2><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><ul><li>eval</li><li>exec</li><li>pickle.loads</li><li>cPickle.loads</li><li>marshal.loads</li><li>yaml.load</li></ul><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><ul><li>eval</li><li>asset()</li><li>preg_replace + ‘e’</li><li>call_user_func, call_user_func_array, create_function</li><li>array_map</li></ul><h2 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h2><ul><li>过滤掉<code>. and ..</code></li><li><code>os.path.basename(filename)</code></li></ul><h2 id="安全上传文件"><a href="#安全上传文件" class="headerlink" title="安全上传文件"></a>安全上传文件</h2><ul><li>文件后缀过滤</li><li>文件大小过滤-最大最小</li><li>文件名随机化</li><li>上传目录随机化</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;防止命令注入使用subprocess&quot;&gt;&lt;a href=&quot;#防止命令注入使用subprocess&quot; class=&quot;headerlink&quot; title=&quot;防止命令注入使用subprocess&quot;&gt;&lt;/a&gt;防止命令注入使用subprocess&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
      <category term="python" scheme="https://moonclearner.cn/categories/python/"/>
    
    
      <category term="secure" scheme="https://moonclearner.cn/tags/secure/"/>
    
      <category term="python" scheme="https://moonclearner.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>license</title>
    <link href="https://moonclearner.cn/sublimeText/sublimeText_license.html"/>
    <id>https://moonclearner.cn/sublimeText/sublimeText_license.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2019-12-31T05:48:02.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sublime-text3-license"><a href="#sublime-text3-license" class="headerlink" title="sublime text3 license"></a>sublime text3 license</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;sublime-text3-license&quot;&gt;&lt;a href=&quot;#sublime-text3-license&quot; class=&quot;headerlink&quot; title=&quot;sublime text3 license&quot;&gt;&lt;/a&gt;sublime text3 license&lt;/
      
    
    </summary>
    
      <category term="sublimeText" scheme="https://moonclearner.cn/categories/sublimeText/"/>
    
    
      <category term="license" scheme="https://moonclearner.cn/tags/license/"/>
    
      <category term="sublimeText" scheme="https://moonclearner.cn/tags/sublimeText/"/>
    
  </entry>
  
  <entry>
    <title>vim configure</title>
    <link href="https://moonclearner.cn/vim/configure.html"/>
    <id>https://moonclearner.cn/vim/configure.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2021-05-25T09:59:29.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YouCompleteMe-unavailable-No-module-named-future"><a href="#YouCompleteMe-unavailable-No-module-named-future" class="headerlink" title="YouCompleteMe unavailable No module named future"></a>YouCompleteMe unavailable No module named future</h1><ul><li>cd bundle/YouCompleteMe</li><li><code>git submodule update --init --recursive</code><ul><li>if error, git config –global</li></ul></li></ul><h1 id="YouCompleteMe-cregex-does-not-appear-to-contain-CMakeLists-txt"><a href="#YouCompleteMe-cregex-does-not-appear-to-contain-CMakeLists-txt" class="headerlink" title="YouCompleteMe cregex does not appear to contain CMakeLists.txt"></a>YouCompleteMe cregex does not appear to contain CMakeLists.txt</h1><ul><li>由于cregex路径里面为空</li><li>git remote -v<ul><li>获取git 路径</li></ul></li><li>git clone  路径<ul><li>将其文件夹命名为cregex</li></ul></li></ul><h1 id="fzf"><a href="#fzf" class="headerlink" title="fzf"></a>fzf</h1><p>search file by filename </p><h1 id="rg-and-ack"><a href="#rg-and-ack" class="headerlink" title="rg and ack"></a>rg and ack</h1><p>search string in file</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;YouCompleteMe-unavailable-No-module-named-future&quot;&gt;&lt;a href=&quot;#YouCompleteMe-unavailable-No-module-named-future&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="vim" scheme="https://moonclearner.cn/categories/vim/"/>
    
    
      <category term="configure" scheme="https://moonclearner.cn/tags/configure/"/>
    
      <category term="vim" scheme="https://moonclearner.cn/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>vim jump</title>
    <link href="https://moonclearner.cn/vim/jump.html"/>
    <id>https://moonclearner.cn/vim/jump.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2021-06-29T10:49:13.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim-jump"><a href="#vim-jump" class="headerlink" title="vim jump"></a>vim jump</h1><h2 id="1-上下左右移动"><a href="#1-上下左右移动" class="headerlink" title="1. 上下左右移动"></a>1. 上下左右移动</h2><ul><li><code>h</code>:向左移动一个字符</li><li><code>l</code>:向右移动一个字符</li><li><code>j</code>:向下移动一行</li><li><code>k</code>:向上移动一行*   <code>gj</code>:向下移动一物理行（<code>\r\n结尾的可以理解成逻辑行</code>），一行字符太多显示时会做line wrap</li><li><code>gk</code>:向上移动一物理行 ，同<code>gj</code></li><li><code>hjkl</code>可以用<code>上下左右</code>键代替&gt; <code>gj</code>和<code>gk</code>在某些时候比较实用，比如在vs code vim模式下，你移动到折叠的代码中会导致折叠的代码展开（vim中就没有这个问题），但是<code>gj</code>和<code>gk</code>就是可以，因为它们是按照物理行移动的。</li></ul><h2 id="2-单词级移动"><a href="#2-单词级移动" class="headerlink" title="2. 单词级移动"></a>2. 单词级移动</h2><p>在讲单词移动前，先说一下，<code>word</code>和<code>WORD</code>概念。</p><p>vim中的<code>word</code>和<code>WORD</code>概念是用来表示一系列字符串是否是一个单词，两者都会以空白字符作为分隔符来划分单词，但是<code>word</code>会另外根据<code>iskeyword</code>配置来做分词，因此不同的<code>iskeyword</code>配置会导致<code>word</code>的意义有所不同。</p><p>例如，<code>iskeyword</code>设置如下，所以只要遇到一个非<code>a-z,A-Z</code>就标识是一个单词结束：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set iskeyword=a-z,A-Z</span><br></pre></td></tr></table></figure><p>例如，<code>non-blank</code>，这里有三个个<code>word</code>，一个是<code>non</code>，一个是<code>-</code>，另一个是<code>blank</code>。</p><ul><li><code>w</code>:移动到下一个<code>word</code>开头</li><li><code>W</code>:也是移动到下一个<code>WORD</code>开头*   <code>e</code>:移动到下一个<code>word</code>结尾，不在空行停留</li><li><code>E</code>:移动到下一个<code>WORD</code>结尾 ，不在空行停留</li><li><code>b</code>:移动到上一个<code>word</code>开头<em>   <code>B</code>:移动到上一个<code>WORD</code>开头</em>   <code>ge</code>:移动到上一个<code>word</code>结尾</li><li><code>gE</code>:移动到上一个<code>WORD</code>结尾</li></ul><h2 id="3-文本对象（text-object）级移动"><a href="#3-文本对象（text-object）级移动" class="headerlink" title="3. 文本对象（text object）级移动"></a>3. 文本对象（text object）级移动</h2><ul><li><code>(</code>，移动到上一个语句开头</li><li><code>)</code>，移动到下一个语句开头*   <code>{</code>，移动到上一个段落开头</li><li><code>}</code>，移动到下一个段落开头</li><li>以下四条命令因为使用不多，建议不要记忆</li><li><code>]]</code>，跳转到下一个第一列的<code>{</code>（貌似很少有个<code>{</code>在第一列）*   <code>][</code>，跳转到下一个第一列的<code>}</code>，和上面的对应</li><li><code>[[</code>，跳转到上一个第一列的<code>{</code></li><li><code>[]</code>，跳转到上一个第一列的<code>}</code></li><li><code>%</code>，可以用于<code>{}()[]/**/</code>等匹配，如光标置于<code>{</code>下，按<code>%</code>可以跳转到对应的<code>}</code>*   <code>[(</code>，上一个<code>(</code></li><li><code>])</code>，下一个<code>)</code></li><li><code>[{</code>，上一个<code>{</code></li><li><code>]}</code>，下一个<code>}</code><em>   <code>]m</code>，下一个<code>函数开头</code></em>   <code>]M</code>，下一个<code>函数结尾</code><em>   <code>[m</code>，上一个<code>函数开头</code></em>   <code>[M</code>，上一个<code>函数结尾</code>*   <code>]#</code>，上一个 <code>#if</code>或者<code>#else</code></li><li><code>[#</code>，下一个<code>#else</code>或者<code>#endif</code></li><li><code>[*</code>或者<code>[/</code>，上一个<code>/*</code><em>   `]</em><code>或者</code>]/<code>，下一个</code><em>/`</em>   <code>H</code>，窗口第一行</li><li><code>M</code>，窗口中间一行</li><li><code>L</code>， 窗口最后一行</li><li><code>gg</code>，跳转到文档开头*   <code>G</code>，跳转到文档结尾</li><li><code>nG</code>，跳转到文档第n行</li></ul><p>以上命令结合起来就可以飞起来！</p><h2 id="4-标记跳转"><a href="#4-标记跳转" class="headerlink" title="4. 标记跳转"></a>4. 标记跳转</h2><p>vim中可以给文档打mark，然后根据mark名称做快速跳转。mark名称只有一个字符：a-zA-Z。</p><ul><li><code>a-z</code>，只在当前文件内有效</li><li><code>A-Z</code>，跨文件有效，mark信息会保存在<code>.viminfo</code>文件中*   <code>0-9</code>，<code>.viminfo</code> 使用的mark，不能被用户设置，<code>&#39;0</code> ，是上次退出vim时光标所在位置，这个命令可以快速返会到上次退出时的地方</li><li><code>m{a-zA-Z}</code>，给文档打一个mark，如<code>ma</code>，后续使用<code>a` 或者`&#39;a`跳转回去*   `m</code> ，设置上一个mark，后续可以通过<code>&#39;&#39;</code> 跳转回去</li><li><code>m&#39;</code>，设置上一个mark，后续可以通过<code>&#39;&#39;</code>跳转回去<em>   <code>g&#39;a</code> 或者<code>g&#39;&#39;</code> 等，添加<code>g</code>，可以在不修改jumplist下跳转</em>   <code>:marks</code>，显示所有mark</li><li><code>:delm{arks} {marks}</code>，删除mark，可以批量</li><li><code>:delm{arks}!</code>，删除所有marks</li><li><code>&#39;[</code>，跳转到上次编辑的第一个字符</li><li><code>&#39;]</code>，跳转到上次编辑的最后一个字符</li></ul><h2 id="5-跳转"><a href="#5-跳转" class="headerlink" title="5. 跳转"></a>5. 跳转</h2><ul><li><code>ctrl+i</code>，向前</li><li><code>ctrl+o</code>，向后</li><li><code>:ju[mps]</code>，输出所有跳转</li><li><code>:cle[arjumps]</code>，清楚所有跳转*   <code>^</code>，跳转到开头，不包含空白字符</li><li><code>0</code>，跳转到一行第一个字符</li><li><code>$</code>，跳转到一行最后</li></ul><p>滚屏：</p><ul><li><code>ctrl+u</code>，向上滚半屏</li><li><code>ctrl+d</code>，向下滚半屏</li><li><code>ctrl+y</code>，向上滚一行</li><li><code>ctrl+e</code>，向下滚一行</li><li><code>ctrl+f</code>，向下滚整屏</li><li><code>ctrl+b</code>，向上滚整屏</li></ul><p>tips: 如果你觉得vim的滚屏不是很流畅，可以装个插件，滚屏会更平滑，以vundle安装为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plugin &apos;psliwka/vim-smoothie&apos;</span><br></pre></td></tr></table></figure><ul><li><code>+</code>或者<code>ctrl+m</code>，跳转到下一行中第一个非空白字符</li><li><code>-</code>，跳转到上一行中第一个非空白字符</li><li><code>23%</code>，跳转到文档的23%的地方</li></ul><h2 id="6-搜索跳转"><a href="#6-搜索跳转" class="headerlink" title="6. 搜索跳转"></a>6. 搜索跳转</h2><p>单字符搜索：</p><ul><li><code>f{char}</code>，向右搜索字符</li><li><code>F{char}</code>，想做搜索字符</li><li><code>t{char}</code>，向右搜索字符，光标在该字符左侧一个字符</li><li><code>T{char}</code>，向右搜索字符，光标在该字符右侧一个字符</li><li><code>;</code>，重复上一次的<code>fFtT</code>几个命令</li><li><code>,</code>，反方向重复上一次的<code>fFtT</code>几个命令</li></ul><p>字符串搜索：</p><ul><li><code>/xxxxx</code> ，全局搜索xxxxx字符串</li><li>按<code>n</code>，继续向后搜索；按 <code>N</code>向前搜索</li></ul><h2 id="7-easymotion插件跳转"><a href="#7-easymotion插件跳转" class="headerlink" title="7. easymotion插件跳转"></a>7. easymotion插件跳转</h2><p>有些时候，上面的跳转还是不能满足你的需要，可以考虑下easymotion，可以给文档中打标记，然后按照提示，输入相应高亮标签跳转到标记的地方。easymotion考虑到按键频次，一般这些标签在键盘上都容易按到。</p><p>快捷键：</p><ul><li><code>&lt;leader&gt;&lt;leader&gt;w</code>，向后跳转</li><li><code>&lt;leader&gt;&lt;leader&gt;b</code>，向前跳转<em>   设置快捷键<code>nmap &lt;Leader&gt;&lt;Leader&gt;s &lt;Plug&gt;(easymotion-s2)</code>，这样可以通过<code>&lt;Leader&gt;&lt;Leader&gt;s</code>，然后输入两个字符，这样会高亮所有匹配的字符，然后你可以输入标签跳转</em>   easymotion还提供了很多跳转方式，可以自己摸索</li></ul><p>基本上这几个快捷键基本够用，如果想学习更多快捷键，可以看下帮助文档<code>help easymotion</code>。</p><h2 id="8-shortkey"><a href="#8-shortkey" class="headerlink" title="8. shortkey"></a>8. shortkey</h2><ul><li><ul><li>定位至当前光光标所指单词的下一次出现的地方</li></ul></li><li><h1 id="定位至当前光光标所指单词的上一次出现的地方"><a href="#定位至当前光光标所指单词的上一次出现的地方" class="headerlink" title="定位至当前光光标所指单词的上一次出现的地方"></a>定位至当前光光标所指单词的上一次出现的地方</h1></li><li>n 定位至跳至已被标记出的单词下一次出现的地方</li><li>shift+n 定位至跳至已被标记出的单词上一次出现的地方</li></ul><h2 id="ctags"><a href="#ctags" class="headerlink" title="ctags"></a>ctags</h2><h3 id="generate-tags-file-in-project-root-path"><a href="#generate-tags-file-in-project-root-path" class="headerlink" title="generate tags file in project root path"></a>generate tags file in project root path</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ctags -R *</span><br><span class="line"></span><br><span class="line">ctags *.c *.h</span><br><span class="line"></span><br><span class="line">为了使得字段补全有效，在生成tags时需要一些额外的参数，推荐的c++参数主要是：</span><br><span class="line">ctags -R --c++-kinds=+px --fields=+iaS --extra=+q</span><br><span class="line">其中：</span><br><span class="line">选项c++-kinds 用于指定C++语言的 tags记录类型,  --c-kinds用于指定c语言的，  通用格式是  --&#123;language&#125;-kinds</span><br><span class="line">选项 fileds 用于指定每条标记的扩展字段域</span><br><span class="line">extra 选项用于增加额外的条目:   f表示为每个文件增加一个条目，  q为每个类增加一个条目</span><br></pre></td></tr></table></figure><h3 id="vim-config-tags-file"><a href="#vim-config-tags-file" class="headerlink" title="vim config tags file"></a>vim config tags file</h3><p>set tags=./tags;,tags</p><p>若要加入系统函数或全局变量的tag标签，则需执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctags -I __THROW –file-scope=yes –langmap=c:+.h –languages=c,c++ –links=yes –c-kinds=+p --fields=+S -R -f ~/.vim/systags /usr/include /usr/local/include</span><br></pre></td></tr></table></figure></p><p>并且在~/.vimrc中添加（亦可用上面描述的手动加入的方式）：</p><p>set tags+=~/.vim/systags</p><p>这样，便可以享受系统库函数名补全、原型预览等功能了。</p><p>如果经常在不同工程里查阅代码，那么可以在~/.vimrc中添加：</p><p>set tags=tags;<br>set autochdir</p><h3 id="keyword"><a href="#keyword" class="headerlink" title="keyword"></a>keyword</h3><ul><li>ctrl + ]</li><li>:ta name<ul><li>goto function definition</li></ul></li><li>Ctrl + o/t<ul><li>返回到跳转前的位置。</li></ul></li><li>vim -t functionname<ul><li>用vim打开文件时，添加参数-t funcName会自动打开定义该函数的文件并定位到定义首行，上面这句就是找到myAdd定义的文件打开并将光标置于定义的第一行处。</li></ul></li><li>:tags<ul><li>show search or jump process</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vim-jump&quot;&gt;&lt;a href=&quot;#vim-jump&quot; class=&quot;headerlink&quot; title=&quot;vim jump&quot;&gt;&lt;/a&gt;vim jump&lt;/h1&gt;&lt;h2 id=&quot;1-上下左右移动&quot;&gt;&lt;a href=&quot;#1-上下左右移动&quot; class=&quot;head
      
    
    </summary>
    
      <category term="vim" scheme="https://moonclearner.cn/categories/vim/"/>
    
    
      <category term="vim" scheme="https://moonclearner.cn/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>vim</title>
    <link href="https://moonclearner.cn/vim/vim.html"/>
    <id>https://moonclearner.cn/vim/vim.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2021-06-23T07:03:33.664Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><ul><li>不按 Esc 而是按 ^『或者 ^c，速度快很多</li><li>学会几个定位键的区别：0, $, {, }, g, G, w, e, b…</li><li>Shift+V 选定几行，然后用 一起移动</li><li>Ctrl+V 选定行首或行尾的字符，然后用 shift+i 做插入，或者 shift+x 做删除</li><li>学会用 y,d 和 p, P 做粘贴剪切</li><li>学会用 ^W 的窗口操作。打开文件用 sp 或者 vs</li><li>学会记录宏的命令。用 q 加任意键开始录制，再按 q 保存。然后可用 @加这个任意键回放，在 @前加数字可定义回放次数</li><li>“.”重复上一个命令，”u”取消上一个命令，”^r”反取消</li><li>^n, ^p 用 buf 里的关键词补全。</li><li>学会搜索替换”:%s/ 要搜的东西 / 要换成的东西 /g”</li><li>任何时候移到一个单词上按#的话可以高亮这个文档里所有一样的单词</li><li>用“/”做搜索，按 n 或 N 上一个 / 下一个</li><li>“:! 命令 &amp;”可直接运行这个命令，用”:! 命令 %&amp;”如果你想让这个命令对当前所编辑文件做操作。</li><li>任何时候可用”:cd %:p:h”来切换目录到当前编辑文件所在目录。</li><li>“.” 这个 mark 代表最后一次修改的地方，所以 “‘.” 可以跳到最后一次修改的地方，’. 可以跳到最后一次修改的那一行。</li><li>g; 和 g, 则可以在整个 changelist 里面来回跳转，敲 :help changelist 可以看说明。</li><li><win> + <pg up> or <pg down> or <pg left> //change windows size</pg></pg></pg></win></li><li><win> + left or right //rapidly change windows to watch two files diffience</win></li><li><ctrl + w> + &lt;+&gt; or <->  //change windows size</-></ctrl></li><li>vim -on file1 file2 … // n split windows numbers o horizontal split O vertical split</li><li>:sp filename //horizontal split windows</li></ul><h2 id="M-how-to-delete-M"><a href="#M-how-to-delete-M" class="headerlink" title="^M how to delete ^M"></a>^M how to delete ^M</h2><ul><li><code>:%s/^M//g</code></li><li>^M “<ctrl -v> +<ctrl -m>“</ctrl></ctrl></li></ul><h2 id="show-all-result-when-search"><a href="#show-all-result-when-search" class="headerlink" title="show all result when search"></a>show all result when search</h2><ul><li>/searchString<cr><leader>lv</leader></cr></li></ul><h2 id="move-windows-center-to-cursor"><a href="#move-windows-center-to-cursor" class="headerlink" title="move windows center to cursor"></a>move windows center to cursor</h2><ul><li>zz</li><li>z+</li><li>z-</li><li>H M L move cursor to windows</li><li>:set scrolloff=10  //let cursor on windows center alwaysly</li></ul><h2 id="move-on-buffers"><a href="#move-on-buffers" class="headerlink" title="move on buffers"></a>move on buffers</h2><ul><li>:ls, :buffers<br>  show all buffers</li><li>:bn[ext]<br>  next buffer</li><li>:bp[revious]<br>  last buffer</li><li>:b2<br>  move to number 2 buffer</li><li>:b exa<br>  move to match exa file  such as example.txt</li><li>:sb 3<br>  split windows open buffer number 3 file by horizontal spl</li><li>:vertical sb 3<br>  by vertical split</li></ul><h2 id="reg-pasteclipboard"><a href="#reg-pasteclipboard" class="headerlink" title="reg pasteclipboard"></a>reg pasteclipboard</h2><ul><li>:reg</li><li>show all reg</li><li>“+<ul><li>system clipboard on Linux</li></ul></li><li>“*<ul><li>system clipboard on Windows (or from “mouse highlight” clipboard on Linux)</li></ul></li><li>“np<ul><li>n is name of reg</li><li>paste reg content to current lin</li></ul></li><li>“nyy</li><li>“nyG<ul><li>copy till end of file</li></ul></li><li>“”<ul><li>default reg when using d/D/x/X/c/C/s/S</li></ul></li><li>“0<ul><li>default reg when using d/D/x/X/c/C/s/S</li><li>yank the text you want to copy with y[motion], and the text is saved in “ and 0 reg</li><li>delete the text you want to replace with d[motion], and the text is saved in “ reg</li><li>paste the yanked text with “0p</li></ul></li><li>@n<ul><li>n is name of reg</li><li>:echo @1<ul><li>print reg 1</li></ul></li><li>let @1 = ‘abc’<ul><li>set reg content</li></ul></li></ul></li></ul><h2 id="on-txt-file-move-to-title"><a href="#on-txt-file-move-to-title" class="headerlink" title="on txt file move to title"></a>on txt file move to title</h2><ul><li>ctrl + ]</li></ul><h2 id="delete-trick"><a href="#delete-trick" class="headerlink" title="delete trick"></a>delete trick</h2><ul><li>de</li><li>db</li><li>di</li><li>dtc delete between c all charcters</li></ul><h2 id="read-and-save"><a href="#read-and-save" class="headerlink" title="read and save"></a>read and save</h2><ul><li>:r filename  read filename to current cursor</li><li>1,20 w filename  create new filename to 1,20 line content</li><li>1,$ w filename whole content write new filename</li><li>1,20 w &gt;&gt; filename write 1,20 content to filename last line</li></ul><h2 id="autoindent"><a href="#autoindent" class="headerlink" title="autoindent"></a>autoindent</h2><ul><li>==</li></ul><h2 id="jump-to-last-cursor"><a href="#jump-to-last-cursor" class="headerlink" title="jump to last cursor"></a>jump to last cursor</h2><ul><li>ctrl + i</li><li>ctrl + o</li></ul><h2 id="setting-pwd"><a href="#setting-pwd" class="headerlink" title="setting pwd"></a>setting pwd</h2><ul><li><leader>.</leader></li></ul><h2 id="go-to-mark"><a href="#go-to-mark" class="headerlink" title="go to mark"></a>go to mark</h2><ul><li>mark place: m {a-zA-Z}</li><li>go to mark: ‘{a-zA-Z}</li><li>delete mark: :delmarks {a-zA-Z}</li><li>show all mark: :marks</li></ul><h2 id="line-choose-by-visual-mode"><a href="#line-choose-by-visual-mode" class="headerlink" title="line choose by visual mode"></a>line choose by visual mode</h2><ul><li>line visual mode: V</li><li>Vjj</li><li>块 visual mode: ctrl + v but on windows ctrl + q</li><li>gv  =&gt; choose last visual chosed text</li><li>o   =&gt; cursor move to selected text end</li><li>O   =&gt; cursor move to selected text start</li></ul><h2 id="run-python-code-on-your-vim"><a href="#run-python-code-on-your-vim" class="headerlink" title="run python code on your vim"></a>run python code on your vim</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'djj'</span></span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><ul><li><strong>Run code by select 2 line Vkk, then press: !python and hit enter</strong><br>output:djj</li><li>anothor example:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(x, y)</span>:</span></span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line"><span class="keyword">print</span> func(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>output:7</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'moonclearner'</span>:</span><br><span class="line"><span class="keyword">print</span> i</span><br></pre></td></tr></table></figure><p><strong>output:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">m</span><br><span class="line">o</span><br><span class="line">o</span><br><span class="line">n</span><br><span class="line">c</span><br><span class="line">l</span><br><span class="line">e</span><br><span class="line">a</span><br><span class="line">r</span><br><span class="line">n</span><br><span class="line">e</span><br><span class="line">r</span><br></pre></td></tr></table></figure></p><h2 id="vim-surround"><a href="#vim-surround" class="headerlink" title="vim-surround"></a>vim-surround</h2><p>“hello world”</p><ul><li>press cs”‘ inside “ switch to ‘<br>‘hello world’</li><li>press cs’<q> inside ‘ switch to <q></q><br><q>hello world</q></q></li><li>cst”<br>“hello world”</li><li>ds” delete “<br>hello world</li><li>cursor on hello ysiw]<br>[hello] world</li><li>cs]{<br>{ hello } world</li><li>yssb or yss) wrap entire line<br>({ hello } world)</li><li>ds{ds) revert to original text<br>hello world</li><li>ysiw<em> cursor on hello<br><em>hello</em> world</em></li><li>VS<p class="important"> wrap </p><p></p>  <p class="important"><br>  <em>hello</em> world<br>  </p></li></ul><h2 id="close-label-tag"><a href="#close-label-tag" class="headerlink" title="close label tag"></a>close label tag</h2><ul><li><p>&gt;<br>output: </p><p></p></li></ul><h2 id="block-visual"><a href="#block-visual" class="headerlink" title="block visual"></a>block visual</h2><ul><li><code>ctrl+v</code>  on unix</li><li><code>ctrl+q</code>  on windows</li><li>jjj or % muti line select</li><li>i,I,a,A to input</li></ul><h2 id="and-0"><a href="#and-0" class="headerlink" title="^ and 0"></a>^ and 0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this a sentence!</span><br></pre></td></tr></table></figure><ul><li>cursor on t</li><li>^ the cursor will jump to c</li><li>0 the cursor will jump to space, first column</li></ul><h2 id="and-g"><a href="#and-g" class="headerlink" title="$ and g_"></a>$ and g_</h2><ul><li>$ go to the end of line</li><li>g_ go to the last non-blank character of line</li></ul><h2 id="buffer"><a href="#buffer" class="headerlink" title="buffer"></a>buffer</h2><ul><li>:bn</li><li>:bp</li><li>:buffers -&gt; show all buffers</li></ul><h2 id="saveas"><a href="#saveas" class="headerlink" title="saveas"></a>saveas</h2><ul><li>:saveas   -&gt; save as</li></ul><h2 id="and"><a href="#and" class="headerlink" title="# and *"></a># and *</h2><ul><li># look previous same character</li><li>* jump next same character</li></ul><h2 id="yank-muti-times-character"><a href="#yank-muti-times-character" class="headerlink" title="yank muti times character"></a>yank muti times character</h2><ul><li>this my test and test</li><li><em>the cursor on i</em></li><li>y2/test -&gt;will copy <code>is my test and</code><br>  yank up to the second occurence of test</li><li>y/test   -&gt; will yank <code>is my</code><br>  yank up to the first test before</li><li>ye</li><li>y$</li></ul><h2 id="f-and-t"><a href="#f-and-t" class="headerlink" title="f and t"></a>f and t</h2><ul><li>fa -&gt; go to next occurence of the letter <code>a</code> on the line<br>  , and ; respresent next and previous, reverse use F</li><li>ta -&gt; go to just before the character <code>a</code>, reverse use T<h2 id="dt-and-yt"><a href="#dt-and-yt" class="headerlink" title="dt and yt"></a>dt and yt</h2></li><li>t represent to</li><li>delete everything util the character before</li><li>yank everything util the character before</li></ul><h2 id="Zone-select"><a href="#Zone-select" class="headerlink" title="Zone select"></a>Zone select</h2><ul><li>adb(map(+)(“foo”))nnn</li><li><strong>cursor on <code>o</code></strong></li><li>vi” -&gt; will select foo</li><li>va” -&gt; will select “foo”</li><li>vi) -&gt; will select “foo”</li><li>va) -&gt; will select (“foo”)</li><li>v2i) -&gt; willl select <code>map(+)(&quot;foo&quot;)</code></li><li>v2a) -&gt; will select <code>(map(+)(&quot;foo&quot;))</code></li></ul><h2 id="completion"><a href="#completion" class="headerlink" title="completion"></a>completion</h2><ul><li>ctrl+n next completion</li><li>ctrl+p previous completion</li></ul><h2 id="Macros"><a href="#Macros" class="headerlink" title="Macros"></a>Macros</h2><ul><li>qa record actions in the reg a</li><li>q  stop record actions</li><li>@a replay the macro saved into the reg a</li><li>@@ to replay the last executed macro</li><li>number@@</li></ul><h2 id="visual-using"><a href="#visual-using" class="headerlink" title="visual using"></a>visual using</h2><ul><li>J -&gt;join all the lines together</li><li>&lt; or &gt;  -&gt;indent to left or right</li><li>=  -&gt;auto indent</li></ul><h2 id="split"><a href="#split" class="headerlink" title="split"></a>split</h2><ul><li>:split</li><li>:vsplit<br>open nerdtree</li><li>:Vexplore</li><li>:Sexplore</li></ul><h2 id="common-command"><a href="#common-command" class="headerlink" title="common command"></a>common command</h2><ul><li>add ; three line at the line</li><li>ctrl+q -&gt;$ -&gt;jjj -&gt;A -&gt;; -&gt;Esc</li></ul><h2 id="vim-save-as-sudo"><a href="#vim-save-as-sudo" class="headerlink" title="vim save as sudo"></a>vim save as sudo</h2><ol><li>:w !sudo tee %</li><li>:%!sudo bash -c “cat &gt; ‘%’”</li></ol><h2 id="yapf-python-format"><a href="#yapf-python-format" class="headerlink" title="yapf python format"></a>yapf python format</h2><ul><li>requirement python and pip install yapf</li><li><leader>=</leader></li></ul><h2 id="run-only-read-file-by-user-conf"><a href="#run-only-read-file-by-user-conf" class="headerlink" title="run only read file by user conf"></a>run only read file by user conf</h2><p>sudo -E vim filename</p><h2 id="how-to-run-linux-command-on-vim"><a href="#how-to-run-linux-command-on-vim" class="headerlink" title="how to run linux command on vim"></a>how to run linux command on vim</h2><h3 id="run-external-command"><a href="#run-external-command" class="headerlink" title="run external command"></a>run external command</h3><p>:!command</p><h3 id="run-the-external-command-and-make-the-output-of-command-the-content-of-current-line"><a href="#run-the-external-command-and-make-the-output-of-command-the-content-of-current-line" class="headerlink" title="run the external command and make the output of command the content of current line"></a>run the external command and make the output of command the content of current line</h3><p>!!command<br>:r!command</p><h4 id="write-the-output-of-command-into-specified-line-n"><a href="#write-the-output-of-command-into-specified-line-n" class="headerlink" title="write the output of command into specified line n"></a>write the output of command into specified line n</h4><p>:nr!command</p><h3 id="the-text-is-used-as-input-to-a-command"><a href="#the-text-is-used-as-input-to-a-command" class="headerlink" title="the text is used as input to a command"></a>the text is used as input to a command</h3><p>:w!command</p><h4 id="the-output-of-the-command-is-inserted-into-the-currently-specified-location"><a href="#the-output-of-the-command-is-inserted-into-the-currently-specified-location" class="headerlink" title="the output of the command is inserted into the currently specified location"></a>the output of the command is inserted into the currently specified location</h4><p>:n,m!command</p><h4 id="the-output-of-the-command-is-not-inserted-into-the-file"><a href="#the-output-of-the-command-is-not-inserted-into-the-file" class="headerlink" title="the output of the command is not inserted into the file"></a>the output of the command is not inserted into the file</h4><p>:n,m w!command</p><h3 id="open-terminal"><a href="#open-terminal" class="headerlink" title="open terminal"></a>open terminal</h3><p>:shell<br>:terminal</p><h2 id="copy-to-system-clipboard-and-paste-from-system-clipboard"><a href="#copy-to-system-clipboard-and-paste-from-system-clipboard" class="headerlink" title="copy to system clipboard and paste from system clipboard"></a>copy to system clipboard and paste from system clipboard</h2><p>It needs clipborad support on vim, check :version has +clipboard</p><p>From the console, type:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim --version | grep clipboard</span><br></pre></td></tr></table></figure></p><p>on ubuntu or centos, install vim-gnome or vim-gtk vim gtk3 to obtain clipboard support</p><h2 id="folding"><a href="#folding" class="headerlink" title="folding"></a>folding</h2><p>:helo folding</p><ul><li>zi - 折叠开启和关闭</li><li>za - 开启关闭当前折叠</li><li>zj/k - 下/上个折叠</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;不按 Esc 而是按 ^『或者 ^c，速度快很多&lt;/li&gt;
&lt;li&gt;学会几个定位键的区别：0, $, {, }, g, 
      
    
    </summary>
    
      <category term="Vim" scheme="https://moonclearner.cn/categories/Vim/"/>
    
    
      <category term="vim" scheme="https://moonclearner.cn/tags/vim/"/>
    
      <category term="text" scheme="https://moonclearner.cn/tags/text/"/>
    
  </entry>
  
  <entry>
    <title>install pip</title>
    <link href="https://moonclearner.cn/python/install/Pip.html"/>
    <id>https://moonclearner.cn/python/install/Pip.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="install-pip2-and-pip3"><a href="#install-pip2-and-pip3" class="headerlink" title="install pip2 and pip3"></a>install pip2 and pip3</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo python2 get-pip.py</span><br><span class="line">sudo python get-pip.py</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;install-pip2-and-pip3&quot;&gt;&lt;a href=&quot;#install-pip2-and-pip3&quot; class=&quot;headerlink&quot; title=&quot;install pip2 and pip3&quot;&gt;&lt;/a&gt;install pip2 and pip3&lt;/
      
    
    </summary>
    
      <category term="python" scheme="https://moonclearner.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://moonclearner.cn/tags/python/"/>
    
      <category term="pip" scheme="https://moonclearner.cn/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>django basic commands</title>
    <link href="https://moonclearner.cn/python/django/basic_command.html"/>
    <id>https://moonclearner.cn/python/django/basic_command.html</id>
    <published>2021-07-18T11:28:32.485Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="django-basic-commands"><a href="#django-basic-commands" class="headerlink" title="django basic commands"></a>django basic commands</h1><h2 id="create-project"><a href="#create-project" class="headerlink" title="create project"></a>create project</h2><p>django-admin.py startproject project_name</p><h2 id="create-app"><a href="#create-app" class="headerlink" title="create app"></a>create app</h2><p>django-admin.py startapp appname</p><h2 id="synchro-database"><a href="#synchro-database" class="headerlink" title="synchro database"></a>synchro database</h2><ul><li>python manange.py makemigrations</li><li>python manange.py migrate</li></ul><h2 id="run-by-test-server"><a href="#run-by-test-server" class="headerlink" title="run by test server"></a>run by test server</h2><p>python manange.py runserver 127.0.0.1:8888</p><h2 id="clear-database"><a href="#clear-database" class="headerlink" title="clear database"></a>clear database</h2><p>python manange.py flush</p><h2 id="create-super-user"><a href="#create-super-user" class="headerlink" title="create super user"></a>create super user</h2><p>python manange.py createsuperuser</p><h2 id="change-user-password"><a href="#change-user-password" class="headerlink" title="change user password"></a>change user password</h2><p>python manange.py changepassword username</p><h2 id="dump-database"><a href="#dump-database" class="headerlink" title="dump database"></a>dump database</h2><p>python manange.py dumpdata appname &gt; appname.json</p><h2 id="load-database"><a href="#load-database" class="headerlink" title="load database"></a>load database</h2><p>python manange.py loaddata appname.json</p><h2 id="django-shell"><a href="#django-shell" class="headerlink" title="django shell"></a>django shell</h2><p>python manange.py shell</p><h2 id="database-sql-shell"><a href="#database-sql-shell" class="headerlink" title="database sql shell"></a>database sql shell</h2><p>python manange.py dbshell</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;django-basic-commands&quot;&gt;&lt;a href=&quot;#django-basic-commands&quot; class=&quot;headerlink&quot; title=&quot;django basic commands&quot;&gt;&lt;/a&gt;django basic commands&lt;/
      
    
    </summary>
    
      <category term="Python" scheme="https://moonclearner.cn/categories/Python/"/>
    
    
      <category term="python" scheme="https://moonclearner.cn/tags/python/"/>
    
      <category term="django" scheme="https://moonclearner.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>python library description</title>
    <link href="https://moonclearner.cn/python/libDescription.html"/>
    <id>https://moonclearner.cn/python/libDescription.html</id>
    <published>2021-07-18T11:28:32.481Z</published>
    <updated>2020-01-07T10:50:17.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、环境管理：管理-Python-版本和环境的工具。"><a href="#1、环境管理：管理-Python-版本和环境的工具。" class="headerlink" title="1、环境管理：管理 Python 版本和环境的工具。"></a>1、环境管理：管理 Python 版本和环境的工具。</h2><p>p – 非常简单的交互式 python 版本管理工具。<br>pyenv – 简单的 Python 版本管理工具。<br>Vex – 可以在虚拟环境中执行命令。<br>virtualenv – 创建独立 Python 环境的工具。<br>virtualenvwrapper– virtualenv 的一组扩展。</p><h2 id="2、包管理：管理包和依赖的工具。"><a href="#2、包管理：管理包和依赖的工具。" class="headerlink" title="2、包管理：管理包和依赖的工具。"></a>2、包管理：管理包和依赖的工具。</h2><p>pip – Python 包和依赖关系管理工具。<br>pip-tools – 保证 Python 包依赖关系更新的一组工具。<br>conda – 跨平台，Python 二进制包管理工具。<br>Curdling – 管理 Python 包的命令行工具。<br>wheel – Python 分发的新标准，意在取代 eggs。</p><h2 id="3、包仓库：本地-PyPI-仓库服务和代理。"><a href="#3、包仓库：本地-PyPI-仓库服务和代理。" class="headerlink" title="3、包仓库：本地 PyPI 仓库服务和代理。"></a>3、包仓库：本地 PyPI 仓库服务和代理。</h2><p>warehouse – 下一代 PyPI。<br>Warehouse bandersnatch – PyPA 提供的 PyPI 镜像工具。<br>devpi – PyPI 服务和打包/测试/分发工具。<br>localshop – 本地 PyPI 服务（自定义包并且自动对 PyPI 镜像）。</p><h2 id="4、分发：打包为可执行文件以便分发。"><a href="#4、分发：打包为可执行文件以便分发。" class="headerlink" title="4、分发：打包为可执行文件以便分发。"></a>4、分发：打包为可执行文件以便分发。</h2><p>PyInstaller – 将 Python 程序转换成独立的执行文件（跨平台）。<br>dh-virtualenv – 构建并将 virtualenv 虚拟环境作为一个 Debian 包来发布。<br>Nuitka – 将脚本、模块、包编译成可执行文件或扩展模块。<br>py2app – 将 Python 脚本变为独立软件包（Mac OS X）。<br>py2exe – 将 Python 脚本变为独立软件包（Windows）。<br>pynsist – 一个用来创建 Windows 安装程序的工具，可以在安装程序中打包 Python本身。</p><h2 id="5、构建工具：将源码编译成软件。"><a href="#5、构建工具：将源码编译成软件。" class="headerlink" title="5、构建工具：将源码编译成软件。"></a>5、构建工具：将源码编译成软件。</h2><p>buildout – 一个构建系统，从多个组件来创建，组装和部署应用。<br>BitBake – 针对嵌入式 Linux 的类似 make 的构建工具。<br>fabricate – 对任何语言自动找到依赖关系的构建工具。<br>PlatformIO – 多平台命令行构建工具。<br>PyBuilder – 纯 Python 实现的持续化构建工具。<br>SCons – 软件构建工具。</p><h2 id="6、交互式解析器：交互式-Python-解析器。"><a href="#6、交互式解析器：交互式-Python-解析器。" class="headerlink" title="6、交互式解析器：交互式 Python 解析器。"></a>6、交互式解析器：交互式 Python 解析器。</h2><p>IPython – 功能丰富的工具，非常有效的使用交互式 Python。<br>bpython– 界面丰富的 Python 解析器。<br>ptpython – 高级交互式Python解析器， 构建于python-prompt-toolkit 之上。</p><h2 id="7、文件：文件管理和-MIME（多用途的网际邮件扩充协议）类型检测。"><a href="#7、文件：文件管理和-MIME（多用途的网际邮件扩充协议）类型检测。" class="headerlink" title="7、文件：文件管理和 MIME（多用途的网际邮件扩充协议）类型检测。"></a>7、文件：文件管理和 MIME（多用途的网际邮件扩充协议）类型检测。</h2><p>imghdr – （Python 标准库）检测图片类型。<br>mimetypes – （Python 标准库）将文件名映射为 MIME 类型。<br>path.py – 对 os.path 进行封装的模块。<br>pathlib – （Python3.4+ 标准库）跨平台的、面向对象的路径操作库。<br>python-magic– 文件类型检测的第三方库 libmagic 的 Python 接口。<br>Unipath– 用面向对象的方式操作文件和目录<br>watchdog – 管理文件系统事件的 API 和 shell 工具</p><h2 id="8、日期和时间：操作日期和时间的类库。"><a href="#8、日期和时间：操作日期和时间的类库。" class="headerlink" title="8、日期和时间：操作日期和时间的类库。"></a>8、日期和时间：操作日期和时间的类库。</h2><p>arrow– 更好的 Python 日期时间操作类库。<br>Chronyk – Python 3 的类库，用于解析手写格式的时间和日期。<br>dateutil – Python datetime 模块的扩展。<br>delorean– 解决 Python 中有关日期处理的棘手问题的库。<br>moment – 一个用来处理时间和日期的Python库。灵感来自于Moment.js。<br>PyTime – 一个简单易用的Python模块，用于通过字符串来操作日期/时间。<br>pytz – 现代以及历史版本的世界时区定义。将时区数据库引入Python。<br>when.py – 提供用户友好的函数来帮助用户进行常用的日期和时间操作。</p><h2 id="9、文本处理：用于解析和操作文本的库。"><a href="#9、文本处理：用于解析和操作文本的库。" class="headerlink" title="9、文本处理：用于解析和操作文本的库。"></a>9、文本处理：用于解析和操作文本的库。</h2><h3 id="9-1通用"><a href="#9-1通用" class="headerlink" title="9.1通用"></a>9.1通用</h3><p>chardet – 字符编码检测器，兼容 Python2 和 Python3。<br>difflib – (Python 标准库)帮助我们进行差异化比较。<br>ftfy – 让Unicode文本更完整更连贯。<br>fuzzywuzzy – 模糊字符串匹配。<br>Levenshtein – 快速计算编辑距离以及字符串的相似度。<br>pangu.py – 在中日韩语字符和数字字母之间添加空格。<br>pyfiglet -figlet 的 Python实现。<br>shortuuid – 一个生成器库，用以生成简洁的，明白的，URL 安全的 UUID。<br>unidecode – Unicode 文本的 ASCII 转换形式 。<br>uniout – 打印可读的字符，而不是转义的字符串。<br>xpinyin – 一个用于把汉字转换为拼音的库。</p><h3 id="9-2-Slug化"><a href="#9-2-Slug化" class="headerlink" title="9.2 Slug化"></a>9.2 Slug化</h3><p>awesome-slugify – 一个 Python slug 化库，可以保持 Unicode。<br>python-slugify – Python slug 化库，可以把 unicode 转化为 ASCII。<br>unicode-slugify – 一个 slug 工具，可以生成 unicode slugs ,需要依赖 Django 。</p><h3 id="9-3-解析器"><a href="#9-3-解析器" class="headerlink" title="9.3 解析器"></a>9.3 解析器</h3><p>phonenumbers – 解析，格式化，储存，验证电话号码。<br>PLY – lex 和 yacc 解析工具的 Python 实现。<br>Pygments – 通用语法高亮工具。<br>pyparsing – 生成通用解析器的框架。<br>python-nameparser – 把一个人名分解为几个独立的部分。<br>python-user-agents – 浏览器 user agent 解析器。<br>sqlparse – 一个无验证的 SQL 解析器。</p><p>10、特殊文本格式处理：一些用来解析和操作特殊文本格式的库。<br>10.1 通用<br>tablib – 一个用来处理中表格数据的模块。<br>10.2 Office<br>Marmir – 把输入的Python 数据结构转换为电子表单。<br>openpyxl – 一个用来读写 Excel 2010 xlsx/xlsm/xltx/xltm 文件的库。<br>python-docx – 读取，查询以及修改 Microsoft Word 2007/2008 docx 文件。<br>unoconv – 在 LibreOffice/OpenOffice 支持的任意文件格式之间进行转换。<br>XlsxWriter – 一个用于创建 Excel .xlsx 文件的 Python 模块。<br>xlwings – 一个使得在 Excel 中方便调用 Python 的库（反之亦然），基于 BSD 协议。<br>xlwt / xlrd – 读写 Excel 文件的数据和格式信息。<br>relatorio – 模板化OpenDocument 文件。<br>10.3 PDF<br>PDFMiner – 一个用于从PDF文档中抽取信息的工具。<br>PyPDF2 – 一个可以分割，合并和转换 PDF 页面的库。<br>ReportLab – 快速创建富文本 PDF 文档。<br>10.4 Markdown<br>Mistune – 快速并且功能齐全的纯 Python 实现的 Markdown 解析器。<br>Python-Markdown – John Gruber’s Markdown 的 Python 版实现。<br>10.5 YAML<br>PyYAML – Python 版本的 YAML 解析器。<br>10.6 CSV<br>csvkit – 用于转换和操作 CSV 的工具。<br>10.7 Archive<br>unp – 一个用来方便解包归档文件的命令行工具。</p><p>11、自然语言处理：用来处理人类语言的库。<br>NLTK – 一个先进的平台，用以构建处理人类语言数据的 Python 程序。<br>jieba – 中文分词工具。<br>langid.py – 独立的语言识别系统。<br>Pattern – Python 网络信息挖掘模块。<br>SnowNLP – 一个用来处理中文文本的库。<br>TextBlob – 为进行普通自然语言处理任务提供一致的 API。<br>TextGrocery – 一简单高效的短文本分类工具，基于 LibLinear 和 Jieba。</p><p>12、文档：用以生成项目文档的库。<br>Sphinx – Python 文档生成器。<br>awesome-sphinxdoc<br>MkDocs – 对 Markdown 友好的文档生成器。<br>pdoc – 一个可以替换Epydoc 的库，可以自动生成 Python 库的 API 文档。<br>Pycco – 文学编程（literate-programming）风格的文档生成器。</p><p>13、配置：用来保存和解析配置的库。<br>config – logging 模块作者写的分级配置模块。<br>ConfigObj – INI 文件解析器，带验证功能。<br>ConfigParser – (Python 标准库) INI 文件解析器。<br>profig – 通过多种格式进行配置，具有数值转换功能。<br>python-decouple – 将设置和代码完全隔离。</p><p>14、命令行工具：用于创建命令行程序的库。<br>14.1 命令行程序开发<br>cement – Python 的命令行程序框架。<br>click – 一个通过组合的方式来创建精美命令行界面的包。<br>cliff – 一个用于创建命令行程序的框架，可以创建具有多层命令的命令行程序。<br>clint – Python 命令行程序工具。<br>colorama – 跨平台彩色终端文本。<br>docopt – Python 风格的命令行参数解析器。<br>Gooey – 一条命令，将命令行程序变成一个 GUI 程序。<br>python-prompt-toolkit – 一个用于构建强大的交互式命令行程序的库。<br>14.2 生产力工具<br>aws-cli – Amazon Web Services 的通用命令行界面。<br>bashplotlib – 在终端中进行基本绘图。<br>caniusepython3 – 判断是哪个项目妨碍你你移植到 Python 3。<br>cookiecutter – 从 cookiecutters（项目模板）创建项目的一个命令行工具。<br>doitlive – 一个用来在终端中进行现场演示的工具。<br>howdoi – 通过命令行获取即时的编程问题解答。<br>httpie – 一个命令行HTTP 客户端，cURL 的替代品，易用性更好。<br>PathPicker – 从bash输出中选出文件。<br>percol – 向UNIX shell 传统管道概念中加入交互式选择功能。<br>SAWS – 一个加强版的 AWS 命令行。<br>thefuck – 修正你之前的命令行指令。<br>mycli – 一个 MySQL 命令行客户端，具有自动补全和语法高亮功能。<br>pgcli – Postgres 命令行工具，具有自动补全和语法高亮功能。</p><p>15、下载器：用来进行下载的库。<br>s3cmd – 一个用来管理Amazon S3 和 CloudFront 的命令行工具。<br>s4cmd – 超级 S3 命令行工具，性能更加强劲。<br>you-get – 一个 YouTube/Youku/Niconico 视频下载器，使用 Python3 编写。<br>youtube-dl – 一个小巧的命令行程序，用来下载 YouTube 视频。</p><p>16、图像处理：用来操作图像的库。<br>pillow – Pillow 是一个更加易用版的 PIL。<br>hmap – 图像直方图映射。<br>imgSeek – 一个使用视觉相似性搜索一组图片集合的项目。<br>nude.py – 裸体检测。<br>pyBarcode – 不借助 PIL 库在 Python 程序中生成条形码。<br>pygram – 类似 Instagram 的图像滤镜。<br>python-qrcode – 一个纯 Python 实现的二维码生成器。<br>Quads – 基于四叉树的计算机艺术。<br>scikit-image – 一个用于（科学）图像处理的 Python 库。<br>thumbor – 一个小型图像服务，具有剪裁，尺寸重设和翻转功能。<br>wand – MagickWand的Python 绑定。MagickWand 是 ImageMagick的 C API 。</p><p>17、OCR：光学字符识别库。<br>pyocr – Tesseract 和 Cuneiform 的一个封装(wrapper)。<br>pytesseract – Google Tesseract OCR 的另一个封装(wrapper)。<br>python-tesseract – Google Tesseract OCR 的一个包装类。</p><p>18、音频：用来操作音频的库。<br>audiolazy -Python 的数字信号处理包。<br>audioread – 交叉库 (GStreamer + Core Audio + MAD + FFmpeg) 音频解码。<br>beets – 一个音乐库管理工具及 MusicBrainz 标签添加工具<br>dejavu – 音频指纹提取和识别<br>django-elastic-transcoder – Django + Amazon Elastic Transcoder。<br>eyeD3 – 一个用来操作音频文件的工具，具体来讲就是包含 ID3 元信息的 MP3 文件。<br>id3reader – 一个用来读取 MP3 元数据的 Python 模块。<br>m3u8 – 一个用来解析 m3u8 文件的模块。<br>mutagen – 一个用来处理音频元数据的 Python 模块。<br>pydub – 通过简单、简洁的高层接口来操作音频文件。<br>pyechonest – Echo Nest API 的 Python 客户端<br>talkbox – 一个用来处理演讲/信号的 Python 库<br>TimeSide – 开源 web 音频处理框架。<br>tinytag – 一个用来读取MP3, OGG, FLAC 以及 Wave 文件音乐元数据的库。<br>mingus – 一个高级音乐理论和曲谱包，支持 MIDI 文件和回放功能。</p><p>19、Video：用来操作视频和GIF的库。<br>moviepy – 一个用来进行基于脚本的视频编辑模块，适用于多种格式，包括动图 GIFs。<br>scikit-video – SciPy 视频处理常用程序。</p><p>20、地理位置：地理编码地址以及用来处理经纬度的库。<br>GeoDjango – 世界级地理图形 web 框架。<br>GeoIP – MaxMind GeoIP Legacy 数据库的 Python API。<br>geojson – GeoJSON 的 Python 绑定及工具。<br>geopy – Python 地址编码工具箱。<br>pygeoip – 纯 Python GeoIP API。<br>django-countries – 一个 Django 应用程序，提供用于表格的国家选择功能，国旗图标静态文件以及模型中的国家字段。</p><p>21、HTTP：使用HTTP的库。<br>requests – 人性化的HTTP请求库。<br>grequests – requests 库 + gevent ，用于异步 HTTP 请求.<br>httplib2 – 全面的 HTTP 客户端库。<br>treq – 类似 requests 的Python API 构建于 Twisted HTTP 客户端之上。<br>urllib3 – 一个具有线程安全连接池，支持文件 post，清晰友好的 HTTP 库。</p><p>22、数据库：Python实现的数据库。<br>pickleDB – 一个简单，轻量级键值储存数据库。<br>PipelineDB – 流式 SQL 数据库。<br>TinyDB – 一个微型的，面向文档型数据库。<br>ZODB – 一个 Python 原生对象数据库。一个键值和对象图数据库。</p><p>23、数据库驱动：用来连接和操作数据库的库。<br>MySQL – awesome-mysql系列<br>mysql-python – Python 的 MySQL 数据库连接器。<br>mysqlclient – mysql-python 分支，支持 Python 3。<br>oursql – 一个更好的 MySQL 连接器，支持原生预编译指令和 BLOBs.<br>PyMySQL – 纯 Python MySQL 驱动，兼容 mysql-python。</p><p>24、PostgreSQL<br>psycopg2 – Python 中最流行的 PostgreSQL 适配器。<br>queries – psycopg2 库的封装，用来和 PostgreSQL 进行交互。<br>txpostgres – 基于 Twisted 的异步 PostgreSQL 驱动。<br>其他关系型数据库<br>apsw – 另一个 Python SQLite封装。<br>dataset – 在数据库中存储Python字典 – 可以协同SQLite，MySQL，和 PostgreSQL工作。<br>pymssql– 一个简单的Microsoft SQL Server数据库接口。<br>NoSQL 数据库<br>cassandra-python-driver – Cassandra 的 Python 驱动。<br>HappyBase – 一个为 Apache HBase 设计的，对开发者友好的库。<br>Plyvel – 一个快速且功能丰富的 LevelDB 的 Python 接口。<br>py2neo – Neo4j restful 接口的Python 封装客户端。<br>pycassa – Cassandra 的 Python Thrift 驱动。<br>PyMongo – MongoDB 的官方 Python 客户端。<br>redis-py – Redis 的 Python 客户端。<br>telephus – 基于 Twisted 的 Cassandra 客户端。<br>txRedis – 基于 Twisted 的 Redis 客户端。<br>ORM：实现对象关系映射或数据映射技术的库。<br>关系型数据库<br>awesome-sqlalchemy系列<br>Django Models – Django 的一部分。<br>SQLAlchemy – Python SQL 工具以及对象关系映射工具。<br>Peewee – 一个小巧，富有表达力的 ORM。<br>PonyORM – 提供面向生成器的 SQL 接口的 ORM。<br>python-sql – 编写 Python 风格的 SQL 查询。<br>NoSQL 数据库<br>django-mongodb-engine – Django MongoDB 后端。<br>PynamoDB – Amazon DynamoDB 的一个 Python 风格接口。<br>flywheel – Amazon DynamoDB 的对象映射工具。<br>MongoEngine – 一个Python 对象文档映射工具，用于 MongoDB。<br>hot-redis – 为 Redis 提供 Python 丰富的数据类型。<br>redisco – 一个 Python 库，提供可以持续存在在 Redis 中的简单模型和容器。</p><p>25、其他<br>butterdb – Google Drive 电子表格的 Python ORM。</p><p>26、Web 框架<br>全栈 web 框架。<br>Django – Python 界最流行的 web 框架。<br>awesome-django系列<br>Flask – 一个 Python 微型框架。<br>awesome-flask系列<br>Pyramid – 一个小巧，快速，接地气的开源Python web 框架。<br>awesome-pyramid系列<br>Bottle – 一个快速小巧，轻量级的 WSGI 微型 web 框架。<br>CherryPy – 一个极简的 Python web 框架，服从 HTTP/1.1 协议且具有WSGI 线程池。<br>TurboGears – 一个可以扩展为全栈解决方案的微型框架。<br>web.py – 一个 Python 的 web 框架，既简单，又强大。<br>web2py – 一个全栈 web 框架和平台，专注于简单易用。<br>Tornado – 一个web 框架和异步网络库。</p><p>27、权限：允许或拒绝用户访问数据或功能的库。<br>Carteblanche – Module to align code with thoughts of users and designers. Also magically handles navigation and permissions.<br>django-guardian – Django 1.2+ 实现了单个对象权限。<br>django-rules – 一个小巧但是强大的应用，提供对象级别的权限管理，且不需要使用数据库。</p><p>28、CMS:内容管理系统<br>django-cms – 一个开源的，企业级 CMS，基于 Django。<br>djedi-cms – 一个轻量级但却非常强大的 Django CMS ，考虑到了插件，内联编辑以及性能。<br>FeinCMS – 基于 Django 构建的最先进的内容管理系统之一。<br>Kotti – 一个高级的，Python 范的 web 应用框架，基于 Pyramid 构建。<br>Mezzanine – 一个强大的，持续的，灵活的内容管理平台。<br>Opps – 一个为杂志，报纸网站以及大流量门户网站设计的 CMS 平台，基于 Django。<br>Plone – 一个构建于开源应用服务器 Zope 之上的 CMS。<br>Quokka – 灵活，可扩展的小型 CMS，基于 Flask 和 MongoDB。<br>Wagtail – 一个 Django 内容管理系统。<br>Widgy – 最新的 CMS 框架，基于 Django。</p><p>29、电子商务:用于电子商务以及支付的框架和库。<br>django-oscar – 一个用于 Django 的开源的电子商务框架。<br>django-shop – 一个基于 Django 的店铺系统。<br>Cartridge – 一个基于 Mezzanine 构建的购物车应用。<br>shoop – 一个基于 Django 的开源电子商务平台。<br>alipay – 非官方的 Python 支付宝 API。<br>merchant – 一个可以接收来自多种支付平台支付的 Django 应用。<br>money – 货币类库with optional CLDR-backed locale-aware formatting and an extensible currency exchange solution.<br>python-currencies – 显示货币格式以及它的数值。</p><p>30、RESTful API:用来开发RESTful APIs的库<br>30.1 Django<br>django-rest-framework – 一个强大灵活的工具，用来构建 web API。<br>django-tastypie – 为Django 应用开发API。<br>django-formapi – 为 Django 的表单验证，创建 JSON APIs 。<br>30.2 Flask<br>flask-api – 为 flask 开发的，可浏览 Web APIs 。<br>flask-restful – 为 flask 快速创建REST APIs 。<br>flask-restless – 为 SQLAlchemy 定义的数据库模型创建 RESTful APIs 。<br>flask-api-utils – 为 Flask 处理 API 表示和验证。<br>eve – REST API 框架，由 Flask, MongoDB 等驱动。<br>30.3 Pyramid<br>cornice – 一个Pyramid 的 REST 框架 。<br>30.4 与框架无关的<br>falcon – 一个用来建立云 API 和 web app 后端的噶性能框架。<br>sandman – 为现存的数据库驱动系统自动创建 REST APIs 。<br>restless – 框架无关的 REST 框架 ，基于从 Tastypie 学到的知识。<br>ripozo – 快速创建 REST/HATEOAS/Hypermedia APIs。</p><p>31、验证:实现验证方案的库。<br>31.1 OAuth<br>Authomatic – 简单但是强大的框架，身份验证/授权客户端。<br>django-allauth – Django 的验证应用。<br>django-oauth-toolkit – 为 Django 用户准备的 OAuth2。<br>django-oauth2-provider – 为 Django 应用提供 OAuth2 接入。<br>Flask-OAuthlib – OAuth 1.0/a, 2.0 客户端实现，供 Flask 使用。<br>OAuthLib – 一个 OAuth 请求-签名逻辑通用、 完整的实现。<br>python-oauth2 – 一个完全测试的抽象接口。用来创建 OAuth 客户端和服务端。<br>python-social-auth – 一个设置简单的社会化验证方式。<br>rauth – OAuth 1.0/a, 2.0, 和 Ofly 的 Python 库。<br>sanction – 一个超级简单的OAuth2 客户端实现。<br>31.2 其他<br>jose – JavaScript 对象签名和加密草案的实现。<br>PyJWT – JSON Web 令牌草案 01。<br>python-jws – JSON Web 签名草案 02 的实现。<br>python-jwt – 一个用来生成和验证 JSON Web 令牌的模块。</p><p>32、模板引擎：模板生成和词法解析的库和工具。<br>Jinja2 – 一个现代的，对设计师友好的模板引擎。<br>Chameleon – 一个 HTML/XML 模板引擎。 模仿了 ZPT（Zope Page Templates）, 进行了速度上的优化。<br>Genshi – Python 模板工具，用以生成 web 感知的结果。<br>Mako – Python 平台的超高速轻量级模板。</p><p>33、Queue：处理事件以及任务队列的库。<br>celery – 一个异步任务队列/作业队列，基于分布式消息传递。<br>huey – 小型多线程任务队列。<br>mrq – Mr. Queue -一个 Python 的分布式 worker 任务队列， 使用 Redis 和 gevent。<br>rq – 简单的 Python 作业队列。<br>simpleq – 一个简单的，可无限扩张的，基于亚马逊 SQS 的队列。</p><p>34、搜索：对数据进行索引和执行搜索查询的库和软件。<br>django-haystack – Django 模块化搜索。<br>elasticsearch-py – Elasticsearch 的官方底层 Python 客户端。<br>elasticsearch-dsl-py -Elasticsearch 的官方高级 Python 客户端。<br>solrpy – solr的 Python 客户端。<br>Whoosh – 一个快速的纯 Python 搜索引擎库。</p><p>35、动态消息：用来创建用户活动的库。<br>django-activity-stream – 从你的站点行为中生成通用活动信息流。<br>Stream-Framework – 使用 Cassandra 和 Redis 创建动态消息和通知系统。</p><p>36、资源管理：管理、压缩、缩小网站资源的工具。<br>django-compressor – 将链接和内联的 JavaScript 或 CSS 压缩到一个单独的缓存文件中。<br>django-storages – 一个针对 Django 的自定义存储后端的工具集合。<br>fanstatic – 打包、优化，并且把静态文件依赖作为 Python 的包来提供。<br>File Conveyor – 一个后台驻留的程序，用来发现和同步文件到 CDNs, S3 和 FTP。<br>Flask-Assets – 帮你将 web 资源整合到你的 Flask app 中。<br>jinja-assets-compressor – 一个 Jinja 扩展，用来编译和压缩你的资源。<br>webassets – 为你的静态资源打包、优化和管理生成独一无二的缓存 URL。</p><p>37、缓存：缓存数据的库。<br>Beaker – 一个缓存和会话库，可以用在 web 应用和独立 Python脚本和应用上。<br>django-cache-machine – Django 模型的自动缓存和失效。<br>django-cacheops– 具有自动颗粒化事件驱动失效功能的 ORM。<br>django-viewlet – 渲染模板，同时具有额外的缓存控制功能。<br>dogpile.cache – dogpile.cache 是 Beaker 的下一代替代品，由同一作者开发。<br>HermesCache – Python 缓存库，具有基于标签的失效和 dogpile effect 保护功能。<br>johnny-cache – django应用缓存框架。<br>pylibmc – libmemcached 接口的 Python 封装。</p><p>38、电子邮件：用来发送和解析电子邮件的库。<br>django-celery-ses – 带有 AWS SES 和 Celery 的 Django email 后端。<br>envelopes – 供人类使用的电子邮件库。<br>flanker – 一个 email 地址和 Mime 解析库。<br>imbox – Python IMAP 库<br>inbox.py – Python SMTP 服务器。<br>inbox – 一个开源电子邮件工具箱。<br>lamson – Python 风格的 SMTP 应用服务器。<br>mailjet – Mailjet API 实现，用来提供批量发送邮件，统计等功能。<br>marrow.mailer – 高性能可扩展邮件分发框架。<br>modoboa – 一个邮件托管和管理平台，具有现代的、简约的 Web UI。<br>pyzmail – 创建，发送和解析电子邮件。<br>Talon – Mailgun 库，用来抽取信息和签名。</p><p>39、国际化：用来进行国际化的库。<br>Babel – 一个Python 的国际化库。<br>Korean – 一个韩语词态库。</p><p>40、URL处理：解析URLs的库。<br>furl – 一个让处理 URL 更简单小型 Python 库。<br>purl – 一个简单的，不可变的URL类，具有简洁的 API 来进行询问和处理。<br>pyshorteners – 一个纯 Python URL 缩短库。<br>shorturl– 生成短小 URL 和类似 bit.ly 短链的Python 实现。<br>webargs – 一个解析 HTTP 请求参数的库，内置对流行 web 框架的支持，包括 Flask, Django, Bottle, Tornado和 Pyramid。</p><p>41、HTML处理：处理 HTML和XML的库。<br>BeautifulSoup – 以 Python 风格的方式来对 HTML 或 XML 进行迭代，搜索和修改。<br>bleach – 一个基于白名单的 HTML 清理和文本链接库。<br>cssutils – 一个 Python 的 CSS 库。<br>html5lib – 一个兼容标准的 HTML 文档和片段解析及序列化库。<br>lxml – 一个非常快速，简单易用，功能齐全的库，用来处理 HTML 和 XML。<br>MarkupSafe – 为Python 实现 XML/HTML/XHTML 标记安全字符串。<br>pyquery – 一个解析 HTML 的库，类似 jQuery。<br>untangle – 将XML文档转换为Python对象，使其可以方便的访问。<br>xhtml2pdf – HTML/CSS 转 PDF 工具。<br>xmltodict – 像处理 JSON 一样处理 XML。</p><p>42、网络站点爬取：爬取网络站点的库。<br>Scrapy – 一个快速高级的屏幕爬取及网页采集框架。<br>cola – 一个分布式爬虫框架。<br>Demiurge – 基于PyQuery 的爬虫微型框架。<br>feedparser – 通用 feed 解析器。<br>Grab – 站点爬取框架。<br>MechanicalSoup – 用于自动和网络站点交互的 Python 库。<br>portia – Scrapy 可视化爬取。<br>pyspider – 一个强大的爬虫系统。<br>RoboBrowser – 一个简单的，Python 风格的库，用来浏览网站，而不需要一个独立安装的浏览器。</p><p>43、网页内容提取：用于进行网页内容提取的库。<br>Haul – 一个可以扩展的图像爬取工具。<br>html2text – 将 HTML 转换为 Markdown 格式文本<br>lassie – 人性化的网页内容检索库。<br>micawber -一个小型网页内容提取库，用来从 URLs 提取富内容。<br>newspaper – 使用 Python 进行新闻提取，文章提取以及内容策展。<br>opengraph – 一个用来解析开放内容协议(Open Graph Protocol)的 Python模块。<br>python-goose – HTML内容/文章提取器。<br>python-readability– arc90 公司 readability 工具的 Python 高速端口<br>sanitize – 为杂乱的数据世界带来调理性。<br>sumy – 一个为文本文件和 HTML 页面进行自动摘要的模块。<br>textract – 从任何格式的文档中提取文本，Word，PowerPoint，PDFs 等等。</p><p>44、表单：进行表单操作的库。<br>Deform – Python HTML 表单生成库，受到了 formish 表单生成库的启发。<br>django-bootstrap3– 集成了 Bootstrap 3 的 Django。<br>django-crispy-forms – 一个 Django 应用，他可以让你以一种非常优雅且 DRY（Don’t repeat yourself） 的方式来创建美观的表单。<br>django-remote-forms– 一个平台独立的 Django 表单序列化工具。<br>WTForms – 一个灵活的表单验证和呈现库。<br>WTForms-JSON– 一个 WTForms 扩展，用来处理 JSON 数据。</p><p>45、数据验证：数据验证库，多用于表单验证。<br>Cerberus – A mappings-validator with a variety of rules, normalization-features and simple customization that uses a pythonic schema-definition.<br>colander – 一个用于对从 XML, JSON，HTML 表单获取的数据或其他同样简单的序列化数据进行验证和反序列化的系统。<br>kmatch – 一种用于匹配/验证/筛选 Python 字典的语言。<br>schema -一个用于对 Python 数据结构进行验证的库。<br>Schematics – 数据结构验证。<br>valideer – 轻量级可扩展的数据验证和适配库。<br>voluptuous – 一个 Python 数据验证库。主要是为了验证传入 Python的 JSON，YAML 等数据。</p><p>46、反垃圾技术：帮助你和电子垃圾进行战斗的库。<br>django-simple-captcha – 一个简单、高度可定制的Django 应用，可以为任何Django表单添加验证码。<br>django-simple-spam-blocker– 一个用于Django的简单的电子垃圾屏蔽工具。</p><p>47、标记：用来进行标记的库。<br>django-taggit – 简单的 Django 标记工具。</p><p>48、管理面板：管理界面库。<br>Ajenti – 一个你的服务器值得拥有的管理面板。<br>django-suit – Django 管理界面的一个替代品 (仅对于非商业用途是免费的)。<br>django-xadmin – Django admin 的一个替代品，具有很多不错的功能。<br>flask-admin – 一个用于 Flask 的简单可扩展的管理界面框架。<br>flower – 一个对 Celery 集群进行实时监控和提供 web 管理界面的工具。<br>Grappelli – Django 管理界面的一个漂亮的皮肤。<br>Wooey – 一个 Django 应用，可以为 Python 脚本创建 web 用户界面。</p><p>49、静态站点生成器：静态站点生成器是一个软件，它把文本和模板作为输入，然后输出HTML文件。<br>Pelican – 使用 Markdown 或 ReST 来处理内容， Jinja 2 来制作主题。支持 DVCS, Disqus.。AGPL 许可。<br>Cactus – 为设计师设计的静态站点生成器。<br>Hyde – 基于 Jinja2 的静态站点生成器。<br>Nikola – 一个静态网站和博客生成器。<br>Tinkerer – Tinkerer 是一个博客引擎/静态站点生成器，由Sphinx驱动。<br>Lektor – 一个简单易用的静态 CMS 和博客引擎。</p><p>50、进程：操作系统进程启动及通信库。<br>envoy – 比 Python subprocess 模块更人性化。<br>sarge – 另一 种 subprocess 模块的封装。<br>sh – 一个完备的 subprocess 替代库。</p><p>51、并发和并行：用以进行并发和并行操作的库。<br>multiprocessing – (Python 标准库) 基于进程的“线程”接口。<br>threading – (Python 标准库)更高层的线程接口。<br>eventlet – 支持 WSGI 的异步框架。<br>gevent – 一个基于协程的 Python 网络库，使用greenlet。<br>Tomorrow -用于产生异步代码的神奇的装饰器语法实现。</p><p>52、网络：用于网络编程的库。<br>asyncio – (Python 标准库) 异步 I/O, 事件循环, 协程以及任务。<br>Twisted – 一个事件驱动的网络引擎。<br>pulsar – 事件驱动的并发框架。<br>diesel – 基于Greenlet 的事件 I/O 框架。<br>pyzmq – 一个 ZeroMQ 消息库的 Python 封装。<br>txZMQ – 基于 Twisted 的 ZeroMQ 消息库的 Python 封装。</p><p>53、WebSocket：帮助使用WebSocket的库。<br>AutobahnPython – 给 Python 、使用的 WebSocket &amp; WAMP 基于 Twisted 和 asyncio。<br>Crossbar – 开源统一应用路由(Websocket &amp; WAMP for Python on Autobahn).<br>django-socketio – 给 Django 用的 WebSockets。<br>WebSocket-for-Python – 为Python2/3 以及 PyPy 编写的 WebSocket 客户端和服务器库。</p><p>54、WSGI 服务器：兼容 WSGI 的 web 服务器<br>gunicorn – Pre-forked, 部分是由 C 语言编写的。<br>uwsgi – uwsgi 项目的目的是开发一组全栈工具，用来建立托管服务， 由 C 语言编写。<br>bjoern – 异步，非常快速，由 C 语言编写。<br>fapws3 – 异步 (仅对于网络端)，由 C 语言编写。<br>meinheld – 异步，部分是由 C 语言编写的。<br>netius – 异步，非常快速。<br>paste – 多线程，稳定，久经考验。<br>rocket – 多线程。<br>waitress – 多线程, 是它驱动着 Pyramid 框架。<br>Werkzeug – 一个 WSGI 工具库，驱动着 Flask ，而且可以很方便大嵌入到你的项目中去。</p><p>55、RPC 服务器：兼容 RPC 的服务器。<br>SimpleJSONRPCServer – 这个库是 JSON-RPC 规范的一个实现。<br>SimpleXMLRPCServer – (Python 标准库) 简单的 XML-RPC 服务器实现，单线程。<br>zeroRPC – zerorpc 是一个灵活的 RPC 实现，基于 ZeroMQ 和 MessagePack。</p><p>56、密码学：<br>cryptography – 这个软件包意在提供密码学基本内容和方法提供给 Python 开发者。<br>hashids – 在 Python 中实现 hashids 。<br>Paramiko – SSHv2 协议的 Python (2.6+, 3.3+) ，提供客户端和服务端的功能。<br>Passlib – 安全密码存储／哈希库，<br>PyCrypto – Python 密码学工具箱。<br>PyNacl – 网络和密码学(NaCl) 库的 Python 绑定。</p><p>57、图形用户界面：用来创建图形用户界面程序的库。<br>curses – 内建的 ncurses 封装，用来创建终端图形用户界面。<br>enaml – 使用类似 QML 的Declaratic语法来创建美观的用户界面。<br>kivy – 一个用来创建自然用户交互（NUI）应用程序的库，可以运行在 Windows, Linux, Mac OS X, Android 以及 iOS平台上。<br>pyglet – 一个Python 的跨平台窗口及多媒体库。<br>PyQt – 跨平台用户界面框架 Qt 的 Python 绑定 ，支持Qt v4 和 Qt v5。<br>PySide – P跨平台用户界面框架 Qt 的 Python 绑定 ，支持Qt v4。<br>Tkinter – Tkinter 是 Python GUI 的一个事实标准库。<br>Toga – 一个 Python 原生的, 操作系统原生的 GUI 工具包。<br>urwid – 一个用来创建终端 GUI 应用的库，支持组件，事件和丰富的色彩等。<br>PyGObject – GLib/GObject/GIO/GTK+ (GTK+3) 的 Python 绑定<br>Flexx – Flexx 是一个纯 Python 语言编写的用来创建 GUI 程序的工具集，它使用 web 技术进行界面的展示。</p><p>58、游戏开发：超赞的游戏开发库。<br>Cocos2d – cocos2d 是一个用来开发 2D 游戏， 示例和其他图形/交互应用的框架。基于 pyglet。<br>Panda3D – 由迪士尼开发的 3D 游戏引擎，并由卡内基梅陇娱乐技术中心负责维护。使用C++编写, 针对 Python 进行了完全的封装。<br>Pygame – Pygame 是一组 Python 模块，用来编写游戏。<br>PyOgre – Ogre 3D 渲染引擎的 Python 绑定，可以用来开发游戏和仿真程序等任何 3D 应用。<br>PyOpenGL – OpenGL 的 Python 绑定及其相关 APIs。<br>PySDL2 – SDL2 库的封装，基于 ctypes。<br>RenPy – 一个视觉小说（visual novel）引擎。</p><p>59、日志：用来生成和操作日志的库。<br>logging – (Python 标准库) 为 Python 提供日志功能。<br>logbook – Logging 库的替代品。<br>Eliot – 为复杂的和分布式系统创建日志。<br>Raven – Sentry的 Python 客户端。<br>Sentry – 实时记录和收集日志的服务器。</p><p>60、Testing：进行代码库测试和生成测试数据的库。<br>60.1测试框架<br>unittest – (Python 标准库) 单元测试框架。<br>nose – nose 扩展了 unittest 的功能。<br>contexts – 一个 Python 3.3+ 的 BDD 框架。受到C# –Machine.Specifications的启发。<br>hypothesis – Hypothesis 是一个基于先进的 Quickcheck 风格特性的测试库。<br>mamba – Python 的终极测试工具， 拥护BDD。<br>PyAutoGUI – PyAutoGUI 是一个人性化的跨平台 GUI 自动测试模块。<br>pyshould– Should 风格的断言，基于 PyHamcrest。<br>pytest– 一个成熟的全功能 Python 测试工具。<br>green– 干净，多彩的测试工具。<br>pyvows– BDD 风格的测试工具，受Vows.js的启发。<br>Robot Framework – 一个通用的自动化测试框架。<br>60.2 Web 测试<br>Selenium – Selenium WebDriver 的 Python 绑定。<br>locust – 使用 Python 编写的，可扩展的用户加载测试工具。<br>sixpack – 一个和语言无关的 A/B 测试框架。<br>splinter – 开源的 web 应用测试工具。<br>60.3 Mock测试<br>mock – (Python 标准库) 一个用于伪造测试的库。<br>doublex – Python 的一个功能强大的 doubles 测试框架。<br>freezegun – 通过伪造日期模块来生成不同的时间。<br>httmock – 针对 Python 2.6+ 和 3.2+ 生成 伪造请求的库。<br>httpretty – Python 的 HTTP 请求 mock 工具。<br>responses – 伪造 Python 中的 requests 库的一个通用库。<br>VCR.py – 在你的测试中记录和重放 HTTP 交互。<br>60.4 对象工厂<br>factoryboy – 一个 Python 用的测试固件 (test fixtures) 替代库。<br>mixer – 另外一个测试固件 (test fixtures) 替代库，支持 Django, Flask, SQLAlchemy, Peewee 等。<br>modelmommy – 为 Django 测试创建随机固件</p><p>61、代码覆盖率<br>coverage – 代码覆盖率测量。</p><p>62、伪数据<br>faker – 一个 Python 库，用来生成伪数据。<br>fake2db – 伪数据库生成器。<br>radar – 生成随机的日期/时间。</p><p>63、错误处理<br>FuckIt.py – FuckIt.py 使用最先进的技术来保证你的 Python 代码无论对错都能继续运行。</p><p>64、代码分析和Lint工具：进行代码分析，解析和操作代码库的库和工具。<br>64.1 代码分析<br>code2flow – 把你的 Python 和 JavaScript 代码转换为流程图。<br>pycallgraph -这个库可以把你的Python 应用的流程(调用图)进行可视化。<br>pysonar2 – Python 类型推断和检索工具。<br>64.2 Lint工具<br>Flake8 – 模块化源码检查工具: pep8, pyflakes 以及 co。<br>Pylint – 一个完全可定制的源码分析器。<br>pylama – Python 和 JavaScript 的代码审查工具。</p><p>65、Debugging Tools：用来进行代码调试的库。<br>65.1 调试器<br>ipdb – IPython 启用的 pdb。<br>pudb – 全屏，基于控制台的 Python 调试器。<br>pyringe – 可以在 Python 进程中附加和注入代码的调试器。<br>wdb – 一个奇异的 web 调试器，通过 WebSockets 工作。<br>winpdb – 一个具有图形用户界面的 Python 调试器，可以进行远程调试，基于 rpdb2。<br>django-debug-toolbar – 为 Django 显示各种调试信息。<br>django-devserver – 一个 Django 运行服务器的替代品。<br>flask-debugtoolbar – django-debug-toolbar 的 flask 版。<br>65.2 性能分析器<br>lineprofiler – 逐行性能分析。<br>memoryprofiler – 监控 Python 代码的内存使用。<br>profiling – 一个交互式 Python 性能分析工具。<br>65.3 其他<br>pyelftools – 解析和分析 ELF 文件以及 DWARF 调试信息。<br>python-statsd – statsd 服务器的 Python 客户端。</p><p>66、Science and Data Analysis：用来进行科学计算和数据分析的库。<br>astropy – 一个天文学 Python 库。<br>bcbio-nextgen – 这个工具箱为全自动高通量测序分析提供符合最佳实践的处理流程。<br>bccb – 生物分析相关代码集合<br>Biopython – Biopython 是一组可以免费使用的用来进行生物计算的工具。<br>blaze – NumPy 和 Pandas 的大数据接口。<br>cclib – 一个用来解析和解释计算化学软件包输出结果的库。<br>NetworkX – 一个为复杂网络设计的高性能软件。<br>Neupy – 执行和测试各种不同的人工神经网络算法。<br>Numba – Python JIT (just in time) 编译器，针对科学用的 Python ，由Cython 和 NumPy 的开发者开发。<br>NumPy – 使用 Python 进行科学计算的基础包。<br>Open Babel – 一个化学工具箱，用来描述多种化学数据。<br>Open Mining – 使用 Python 挖掘商业情报 (BI) (Pandas web 接口)。<br>orange – 通过可视化编程或 Python 脚本进行数据挖掘，数据可视化，分析和机器学习。<br>Pandas – 提供高性能，易用的数据结构和数据分析工具。<br>PyDy – PyDy 是 Python Dynamics 的缩写，用来为动力学运动建模工作流程提供帮助， 基于 NumPy, SciPy, IPython 和 matplotlib。<br>PyMC – 马尔科夫链蒙特卡洛采样工具。<br>RDKit – 化学信息学和机器学习软件。<br>SciPy – 由一些基于 Python ，用于数学，科学和工程的开源软件构成的生态系统。<br>statsmodels – 统计建模和计量经济学。<br>SymPy – 一个用于符号数学的 Python 库。<br>zipline – 一个 Python 算法交易库。</p><p>67、数据可视化：进行数据可视化的库。 参见: awesome-javascript。<br>matplotlib – 一个 Python 2D 绘图库。<br>bokeh – 用 Python 进行交互式 web 绘图。<br>ggplot – ggplot2 给 R 提供的 API 的 Python 版本。<br>plotly – 协同 Python 和 matplotlib 工作的 web 绘图库。<br>pygal – 一个 Python SVG 图表创建工具。<br>pygraphviz – Graphviz 的 Python 接口。<br>PyQtGraph – 交互式实时2D/3D/图像绘制及科学/工程学组件。<br>SnakeViz – 一个基于浏览器的 Python’s cProfile 模块输出结果查看工具。<br>vincent – 把 Python 转换为 Vega 语法的转换工具。<br>VisPy – 基于 OpenGL 的高性能科学可视化工具。</p><p>68、计算机视觉：计算机视觉库。<br>OpenCV – 开源计算机视觉库。<br>SimpleCV – 一个用来创建计算机视觉应用的开源框架。</p><p>69、机器学习：机器学习库。 参见: awesome-machine-learning.<br>Crab – 灵活、快速的推荐引擎。<br>gensim – 人性化的话题建模库。<br>hebel – GPU 加速的深度学习库。<br>NuPIC – 智能计算 Numenta 平台。<br>pattern – Python 网络挖掘模块。<br>PyBrain – 另一个 Python 机器学习库。<br>Pylearn2 – 一个基于 Theano 的机器学习库。<br>python-recsys – 一个用来实现推荐系统的 Python 库。<br>scikit-learn – 基于 SciPy 构建的机器学习 Python 模块。<br>pydeep – Python 深度学习库。<br>vowpalporpoise – 轻量级 Vowpal Wabbit 的 Python 封装。<br>skflow – 一个 TensorFlow 的简化接口(模仿 scikit-learn)。</p><p>70、MapReduce：MapReduce 框架和库。<br>dpark – Spark 的 Python 克隆版，一个类似 MapReduce 的框架。<br>dumbo – 这个 Python 模块可以让人轻松的编写和运行 Hadoop 程序。<br>luigi – 这个模块帮你构建批处理作业的复杂流水线。<br>mrjob – 在 Hadoop 或 Amazon Web Services 上运行 MapReduce 任务。<br>PySpark – Spark 的 Python API 。<br>streamparse – 运行针对事实数据流的 Python 代码。集成了Apache Storm。</p><p>71、函数式编程：使用 Python 进行函数式编程。<br>CyToolz – Toolz 的 Cython 实现 : 高性能函数式工具。<br>fn.py – 在 Python 中进行函数式编程 : 实现了一些享受函数式编程缺失的功能。<br>funcy – 炫酷又实用的函数式工具。<br>Toolz – 一组用于迭代器，函数和字典的函数式编程工具。</p><p>72、第三方 API：用来访问第三方 API的库。 参见： List of Python API Wrappers and Libraries。<br>apache-libcloud – 一个为各种云设计的 Python 库。<br>boto – Amazon Web Services 的 Python 接口。<br>django-wordpress – WordPress models and views for Django.<br>facebook-sdk – Facebook 平台的 Python SDK.<br>facepy – Facepy 让和 Facebook’s Graph API 的交互变得更容易。<br>gmail – Gmail 的 Python 接口。<br>google-api-python-client – Python 用的 Google APIs 客户端库。<br>gspread – Google 电子表格的 Python API.<br>twython – Twitter API 的封装。</p><p>73、DevOps 工具：用于 DevOps 的软件和库。<br>Ansible – 一个非常简单的 IT 自动化平台。<br>SaltStack – 基础设施自动化和管理系统。<br>OpenStack – 用于构建私有和公有云的开源软件。<br>Docker Compose – 快速，分离的开发环境，使用 Docker。<br>Fabric – 一个简单的，Python 风格的工具，用来进行远程执行和部署。<br>cuisine – 为 Fabric 提供一系列高级函数。<br>Fabtools – 一个用来编写超赞的 Fabric 文件的工具。<br>gitapi – Git 的纯 Python API。<br>hgapi – Mercurial 的纯 Python API。<br>honcho – Foreman的 Python 克隆版，用来管理基于Procfile的应用。<br>pexpect – Controlling interactive programs in a pseudo-terminal like 在一个伪终端中控制交互程序，就像 GNU expect 一样。<br>psutil – 一个跨平台进程和系统工具模块。<br>supervisor – UNIX 的进程控制系统。</p><p>74、任务调度：任务调度库。<br>APScheduler – 轻巧但强大的进程内任务调度，使你可以调度函数。<br>django-schedule – 一个 Django 排程应用。<br>doit – 一个任务执行和构建工具。<br>gunnery – 分布式系统使用的多用途任务执行工具 ，具有 web 交互界面。<br>Joblib – 一组为 Python 提供轻量级作业流水线的工具。<br>Plan – 如有神助地编写 crontab 文件。<br>schedule – 人性化的 Python 任务调度库。<br>Spiff – 使用纯 Python 实现的强大的工作流引擎。<br>TaskFlow – 一个可以让你方便执行任务的 Python 库，一致并且可靠。</p><p>75、外来函数接口：使用外来函数接口的库。<br>cffi – 用来调用 C 代码的外来函数接口。<br>ctypes – (Python 标准库) 用来调用 C 代码的外来函数接口。<br>PyCUDA – Nvidia CUDA API 的封装。<br>SWIG – 简化的封装和接口生成器。</p><p>76、高性能：让 Python 更快的库。<br>Cython – 优化的 Python 静态编译器。使用类型混合使 Python 编译成 C 或 C++ 模块来获得性能的极大提升。<br>PeachPy – 嵌入 Python 的 x86-64 汇编器。可以被用作 Python 内联的汇编器或者是独立的汇编器，用于 Windows, Linux, OS X, Native Client 或者 Go 。<br>PyPy – 使用 Python 实现的 Python。解释器使用黑魔法加快 Python 运行速度且不需要加入额外的类型信息。<br>Pyston – 使用 LLVM 和现代 JIT 技术构建的 Python 实现，目标是为了获得很好的性能。<br>Stackless Python – 一个强化版的 Python。</p><p>77、微软的 Windows平台：在 Windows 平台上进行 Python 编程。<br>Anaconda(强烈推荐)：使用科学软件包免费发布Python。支持Linux，Windows和Mac。<br>Enthought Canopy：免费和商业版本包括核心科学包。支持Linux，Windows和Mac。<br>Python（x，y）：一个免费的发行版，包括基于 Qt 和Spyder IDE的科学包 。支持Windows和Ubuntu；仅限Py2。<br>WinPython：另一个免费发行版，包括科学软件包和Spyder IDE。仅限Windows，但更积极地维护并支持最新的Python 3版本。<br>Pyzo：基于Anaconda和IEP交互式开发环境的免费发行版。支持Linux，Windows和Mac。<br>Pythonlibs：非官方的 Windows 平台 Python 扩展二进制包。<br>PythonNet： Python 与 .NET 公共语言运行库 (CLR)的集成。<br>PyWin32：针对 Windows 的Python 扩展。</p><p>78、网络可视化和SDN：用来进行网络可视化和SDN(软件定义网络)的工具和库。<br>Mininet – 一款流行的网络模拟器以及用 Python 编写的 API。<br>POX – 一个针对基于 Python 的软件定义网络应用（例如 OpenFlow SDN 控制器）的开源开发平台。<br>Pyretic – 火热的 SDN 编程语言中的一员，为网络交换机和模拟器提供强大的抽象能力。<br>SDX Platform – 基于 SDN 的 IXP 实现，影响了 Mininet, POX 和 Pyretic。</p><p>79、硬件：用来对硬件进行编程的库。<br>ino -操作Arduino的命令行工具。<br>Pyro – Python 机器人编程库。<br>PyUserInput – 跨平台的，控制鼠标和键盘的模块。<br>scapy – 一个非常棒的操作数据包的库。<br>wifi – 一个 Python 库和命令行工具用来在 Linux 平台上操作WiFi。<br>Pingo – Pingo 为类似Raspberry Pi，pcDuino， Intel Galileo等设备提供统一的API用以编程。</p><p>80、兼容性：帮助从 Python 2 向 Python 3迁移的库。<br>Python-Future – 这就是 Python 2 和 Python 3 之间丢失的那个兼容性层。<br>Python-Modernize – 使 Python 代码更加现代化以便最终迁移到 Python 3。<br>Six – Python 2 和 3 的兼容性工具。</p><p>81、杂项：不属于上面任何一个类别，但是非常有用的库。<br>blinker – 一个快速的 Python 进程内信号/事件分发系统。<br>itsdangerous – 一系列辅助工具用来将可信的数据传入不可信的环境。<br>pluginbase – 一个简单但是非常灵活的 Python 插件系统。<br>Pychievements – 一个用来创建和追踪成就的 Python 框架。<br>Tryton – 一个通用商务框架。</p><p>82、算法和设计模式：Python 实现的算法和设计模式。<br>algorithms -一个 Python 算法模块<br>python-patterns – Python 设计模式的集合。<br>sortedcontainers – 快速，纯 Python 实现的SortedList，SortedDict 和 SortedSet 类型。</p><p>83、编辑器插件：编辑器和 IDE 的插件。<br>83.1 Emacs：<br>Elpy – Emacs Python 开发环境。<br>83.2 Sublime Text：<br>SublimeJEDI – 一个 Sublime Text 插件，用来使用超赞的自动补全库 Jedi。<br>Anaconda – Anaconda 把你的 Sublime Text 3 变成一个功能齐全的 Python IDE。<br>83.3 Vim：<br>YouCompleteMe – 引入基于 Jedi 的 Python 自动补全引擎。<br>Jedi-vim – 绑定 Vim 和 Jedi 自动补全库对 Python 进行自动补全。<br>Python-mode – 将 Vim 变成 Python IDE 的一款多合一插件。<br>83.4 Visual Studio：<br>PTVS – Visual Studio 的 Python 工具</p><p>84、集成开发环境：流行的 Python 集成开发环境。<br>PyCharm – 商业化的 Python IDE ，由 JetBrains 开发。也有免费的社区版提供。<br>LiClipse – 基于 Eclipse 的免费多语言 IDE 。使用 PyDev 来支持 Python 。<br>Spyder – 开源 Python IDE。</p><p>85、服务：在线工具和简化开发的 API 。<br>85.1 持续集成：参见: awesome-CIandCD.<br>Travis CI – 一个流行的工具，为你的开源和私人项目提供持续集成服务。(仅支持 GitHub)<br>CircleCI – 一个持续集成工具，可以非常快速的进行并行测试。 (仅支持 GitHub)<br>Vexor CI – 一个为私人 app 提供持续集成的工具，支持按分钟付费。<br>Wercker – 基于 Docker 平台，用来构建和部署微服务。<br>85.2 代码质量：<br>Codacy – 自动化代码审查，更加快速的发布高质量代码。对于开源项目是免费的。<br>QuantifiedCode – 一个数据驱动、自动、持续的代码审查工具。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、环境管理：管理-Python-版本和环境的工具。&quot;&gt;&lt;a href=&quot;#1、环境管理：管理-Python-版本和环境的工具。&quot; class=&quot;headerlink&quot; title=&quot;1、环境管理：管理 Python 版本和环境的工具。&quot;&gt;&lt;/a&gt;1、环境管理：管
      
    
    </summary>
    
      <category term="python" scheme="https://moonclearner.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://moonclearner.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PHP XML</title>
    <link href="https://moonclearner.cn/php/php_xml.html"/>
    <id>https://moonclearner.cn/php/php_xml.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2020-01-10T02:33:29.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php-XML"><a href="#php-XML" class="headerlink" title="php XML"></a>php XML</h1><h2 id="DOMDocument"><a href="#DOMDocument" class="headerlink" title="DOMDocument"></a>DOMDocument</h2><h3 id="遍历删除节点"><a href="#遍历删除节点" class="headerlink" title="遍历删除节点"></a>遍历删除节点</h3><p>遍历删除节点的时候，会出现删除节点删除不干净，<br>当你使用foreach来遍历的时候<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foreach($nodes as $node)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>是因为即当删除了第2个节点之后第3个节点会变成第2个节点，遍历的下个节点变成了第4个节点，跳过了对第3个节点的检查</p><p>当你使用foreach来遍历的时候<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for($i=0; $i &lt; $nodes-&gt;length; $i++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>是因为即当删除了第2个节点之后第3个节点会变成第2个节点，遍历的下个节点变成了第4个节点，跳过了对第3个节点的检查并且节点的nodes-&gt;length会实时变化，导致最后的几个节点检查不到</p><h4 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h4><p>方法1 额外使用一个指示器，来记录指向节点的位置，当删除节点的是指示器值不加1，这样就指向了下个节点<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;load(<span class="keyword">$this</span>-&gt;xmlfile);</span><br><span class="line">$nodes = $dom-&gt;getElementsByTagName(<span class="string">'nodes'</span>);</span><br><span class="line">$index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>($index &lt; $nodes-&gt;length) &#123;</span><br><span class="line">    <span class="keyword">if</span> (in_array($nodes-&gt;item($index)-&gt;getAttribute(<span class="string">"id"</span>), $ids)) &#123;</span><br><span class="line">        $objectNode = $nodes-&gt;item($index);</span><br><span class="line">        $objectNode-&gt;parentNode-&gt;removeChild($objectNode);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $index ++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法2<br>先将所有节点遍历一遍，将要删除的节点存在一个数组里面，然后统一删除<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($nodes <span class="keyword">as</span> $node)&#123;</span><br><span class="line">  <span class="keyword">if</span> (in_array($node-&gt;getAttribute(<span class="string">"id"</span>), $ids)) &#123;</span><br><span class="line">    $delete[] = $node;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($delete <span class="keyword">as</span> $val)&#123;</span><br><span class="line">  $val-&gt;parentNode-&gt;removeChild($val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="simplexml-load-file"><a href="#simplexml-load-file" class="headerlink" title="simplexml_load_file"></a>simplexml_load_file</h2><h3 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($dom)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($dom-&gt;asXML(<span class="string">"/test.xml"</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改标签的值"><a href="#修改标签的值" class="headerlink" title="修改标签的值"></a>修改标签的值</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$xml = @simplexml_load_file(<span class="string">"/test.xml"</span>);</span><br><span class="line"><span class="comment">//用xpath快速查找值</span></span><br><span class="line">$node = $xml-&gt;xpath(<span class="string">"/node/config[@name='enable_tmp_files']"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;node&gt;&lt;config name="test"&gt;&lt;/config&gt;&lt;/node&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//读取标签间的值</span></span><br><span class="line">(string)$node-&gt;config;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取标签的属性</span></span><br><span class="line">(string)$node-&gt;config[<span class="string">"name"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改标签间的值</span></span><br><span class="line">dom_import_simplexml($node)-&gt;nodeValue = <span class="string">"true"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;node&gt;</span></span><br><span class="line"><span class="comment">   &lt;config enable="true"/&gt;</span></span><br><span class="line"><span class="comment">   &lt;config enable="true"/&gt;</span></span><br><span class="line"><span class="comment">   &lt;config enable="true"/&gt;</span></span><br><span class="line"><span class="comment">&lt;/node&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">foreach</span>($node-&gt;config <span class="keyword">as</span> $config)&#123;</span><br><span class="line">    <span class="comment">//修改标签的属性</span></span><br><span class="line">    $config[<span class="string">"enable"</span>] = <span class="string">"true"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除某个节点内所有节点内容"><a href="#删除某个节点内所有节点内容" class="headerlink" title="删除某个节点内所有节点内容"></a>删除某个节点内所有节点内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dom_import_simplexml($node)-&gt;nodeValue = &quot;&quot;;</span><br></pre></td></tr></table></figure><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><p>solution 1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$newnode = $node-&gt;addChild(&quot;newnode&quot;);</span><br><span class="line">$newnode = $node-&gt;addChild(&quot;newnode2&quot;, &quot;nodeValue&quot;);</span><br><span class="line">$newnode-&gt;addAttribute(&quot;newAttr&quot;, &quot;attrValue&quot;);</span><br></pre></td></tr></table></figure></p><p>solution 2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$newnode = simplexml_load_string(&quot;&lt;newnode newAttr=&quot;attrValue&quot;&gt;nodeValue&lt;/newnode&gt;&quot;);</span><br><span class="line">dom_import_simplexml($node)-&gt;nodeValue = $newAttr;</span><br></pre></td></tr></table></figure></p><h2 id="XMLReader"><a href="#XMLReader" class="headerlink" title="XMLReader"></a>XMLReader</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>此扩展需要 libxml PHP 扩展。这表示需要使用 –enable-libxml ，尽管这将隐式完成因为 libxml 是缺省开启的。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>XMLReader是以Stream的形式读取数据，即纵然面对超大的xml文件用于读取大型xml，可以逐个节点进行读取操作，节约内存</p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//读取bignode节点下的node节点,bignode后面的是smallnode节点不读取</span><br><span class="line">$z = new XMLReader();</span><br><span class="line">$z-&gt;open(&quot;/big.xml&quot;);</span><br><span class="line">$doc = new DOMDocument;</span><br><span class="line">// move to the first &lt;product /&gt; node</span><br><span class="line">while ($z-&gt;read() &amp;&amp; $z-&gt;name !== &apos;product&apos;);</span><br><span class="line"></span><br><span class="line">// now that we&apos;re at the right depth, hop to the next &lt;product/&gt; until the end of the tree</span><br><span class="line">while ($z-&gt;nodeType == XMLReader::ELEMENT &amp;&amp; $z-&gt;name === &apos;product&apos;)</span><br><span class="line">&#123;</span><br><span class="line">    // either one should work</span><br><span class="line">    //$node = new SimpleXMLElement($z-&gt;readOuterXML());</span><br><span class="line">    $node = simplexml_import_dom($doc-&gt;importNode($z-&gt;expand(), true));</span><br><span class="line"></span><br><span class="line">    // now you can use $node without going insane about parsing</span><br><span class="line">    var_dump($node-&gt;element_1);</span><br><span class="line"></span><br><span class="line">    // go to next &lt;product /&gt;</span><br><span class="line">    $z-&gt;next(&apos;product&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="读取单节点的方法使用simplexml的方法"><a href="#读取单节点的方法使用simplexml的方法" class="headerlink" title="读取单节点的方法使用simplexml的方法"></a>读取单节点的方法使用simplexml的方法</h4><p>solution 1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$xml = $z-&gt;readOuterXML();</span><br><span class="line">$xml = simplexml_load_string($xml);</span><br></pre></td></tr></table></figure></p><p>solution 2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$node = new SimpleXMLElement($z-&gt;readOuterXML());</span><br></pre></td></tr></table></figure></p><p>solution 3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$doc = new DOMDocument;</span><br><span class="line">$node = simplexml_import_dom($doc-&gt;importNode($z-&gt;expand(), true));</span><br></pre></td></tr></table></figure></p><h3 id="读取节点间的内容"><a href="#读取节点间的内容" class="headerlink" title="读取节点间的内容"></a>读取节点间的内容</h3><p>xml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;rss xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; version=&quot;2.0&quot;&gt;</span><br><span class="line">    &lt;channel&gt;</span><br><span class="line">        &lt;title&gt;拍拍看科技&lt;/title&gt;</span><br><span class="line">        &lt;link&gt;http://blog.limiwu.com/&lt;/link&gt;</span><br><span class="line">        &lt;description&gt;关注科技产品和个人博客发展,注重用户体验和界面优化&lt;/description&gt;</span><br><span class="line">        &lt;item&gt;</span><br><span class="line">            &lt;title&gt;新购买了一个域名：losehub.com&lt;/title&gt;</span><br><span class="line">            &lt;link&gt;http://blog.limiwu.com/537.html&lt;/link&gt;</span><br><span class="line">            &lt;description&gt;最近新购买了一个域名losehub.com。准备来做一个PHP项目，</span><br><span class="line">            具体的还在谋划中。不知道什么时候能开始制作呢。&lt;/description&gt;</span><br><span class="line">            &lt;pubDate&gt;Tue, 27 Dec 2016 14:47:25 +0800&lt;/pubDate&gt;</span><br><span class="line">        &lt;/item&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/channel&gt;</span><br><span class="line">&lt;/rss&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">while ($reader-&gt;read())&#123;  </span><br><span class="line">        if($reader-&gt;nodeType == XMLReader::ELEMENT)&#123;  </span><br><span class="line">            $nodeName = $reader-&gt;name;  </span><br><span class="line">        &#125;  </span><br><span class="line">        //注意XMLReader::TEXT 是识别不了CDATA，如果需要读取CDATA 可以改成$reader-&gt;nodeType == XMLReader::CDATA</span><br><span class="line">        if($reader-&gt;nodeType == XMLReader::TEXT &amp;&amp; !empty($nodeName))&#123;  </span><br><span class="line">            switch($nodeName)&#123;  </span><br><span class="line">                case &apos;title&apos;:</span><br><span class="line">                if ($reader -&gt; depth == &apos;4&apos;)&#123;</span><br><span class="line">                    $title = $reader-&gt;value;</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;   </span><br><span class="line">                case &apos;link&apos;:</span><br><span class="line">                if ($reader -&gt; depth == &apos;4&apos;)&#123;</span><br><span class="line">                    $link = $reader-&gt;value;</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;  </span><br><span class="line">                case &apos;description&apos;:  </span><br><span class="line">                    $description = $reader-&gt;value;  </span><br><span class="line">                    break;  </span><br><span class="line">                case &apos;pubDate&apos;:  </span><br><span class="line">                    $pubDate = $reader-&gt;value;  </span><br><span class="line">                    break;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line"> &#125;  </span><br><span class="line">$reader-&gt;close();</span><br></pre></td></tr></table></figure><h3 id="XMLReader-常量"><a href="#XMLReader-常量" class="headerlink" title="XMLReader 常量"></a>XMLReader 常量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">XMLReader::NONE = 0 ;</span><br><span class="line">XMLReader::ELEMENT = 1 ;</span><br><span class="line">XMLReader::ATTRIBUTE = 2 ;</span><br><span class="line">XMLReader::TEXT = 3 ;</span><br><span class="line">XMLReader::CDATA = 4 ;</span><br><span class="line">XMLReader::ENTITY_REF = 5 ;</span><br><span class="line">XMLReader::ENTITY = 6 ;</span><br><span class="line">XMLReader::PI = 7 ;</span><br><span class="line">XMLReader::COMMENT = 8 ;</span><br><span class="line">XMLReader::DOC = 9 ;</span><br><span class="line">XMLReader::DOC_TYPE = 10 ;</span><br><span class="line">XMLReader::DOC_FRAGMENT = 11 ;</span><br><span class="line">XMLReader::NOTATION = 12 ;</span><br><span class="line">XMLReader::WHITESPACE = 13 ;</span><br><span class="line">XMLReader::SIGNIFICANT_WHITESPACE = 14 ;</span><br><span class="line">XMLReader::END_ELEMENT = 15 ;</span><br><span class="line">XMLReader::END_ENTITY = 16 ;</span><br><span class="line">XMLReader::XML_DECLARATION = 17 ;</span><br><span class="line">XMLReader::LOADDTD = 1 ;</span><br><span class="line">XMLReader::DEFAULTATTRS = 2 ;</span><br><span class="line">XMLReader::VALIDATE = 3 ;</span><br><span class="line">XMLReader::SUBST_ENTITIES = 4 ;</span><br></pre></td></tr></table></figure><h3 id="XMLReader-方法"><a href="#XMLReader-方法" class="headerlink" title="XMLReader 方法"></a>XMLReader 方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">a、XMLReader::XML</span><br><span class="line">作用：载入 xml 字符串</span><br><span class="line">用法：XMLReader::xml(string source [, string encoding [, int options]] )</span><br><span class="line">参数：source，xml string；encoding，document encoding or NULL</span><br><span class="line">返回：如果成功则返回 TRUE，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">b、XMLReader::open</span><br><span class="line">作用：载入xml文件</span><br><span class="line">用法：XMLReader::open(string url [, string encoding [, int options]] )</span><br><span class="line">参数：url，连接到xml的链接；encoding，document encoding or NULL</span><br><span class="line">返回：如果成功则返回 TRUE，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">c、XMLReader::read</span><br><span class="line">作用：读取 xml，使解析器前进到下一个标记</span><br><span class="line">用法：XMLReader::read()，在 while 循环中遍历整个文档</span><br><span class="line">参数：NULL</span><br><span class="line">返回：如果成功则返回 TRUE，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">d、XMLReader::getAttribute</span><br><span class="line">作用：获取属性</span><br><span class="line">用法：XMLReader::getAttribute(string name)</span><br><span class="line">参数：name，属性名称</span><br><span class="line">返回：如果成功则返回 属性值，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">e、XMLReader::isValid</span><br><span class="line">作用：检验xml是否合法</span><br><span class="line">用法：XMLReader::isValid()</span><br><span class="line">参数：无</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">f、XMLReader::moveToAttribute</span><br><span class="line">作用：移动焦点到所指的属性上</span><br><span class="line">用法：XMLReader::moveToAttribute(string name)</span><br><span class="line">参数：name，属性名称</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">g、XMLReader::moveToFirstAttribute</span><br><span class="line">作用：移动焦点到第一个属性上</span><br><span class="line">用法：XMLReader::moveToFirstAttribute()</span><br><span class="line">参数：无</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">h、XMLReader::moveToNextAttribute</span><br><span class="line">作用：移动焦点到下一个属性上</span><br><span class="line">用法：XMLReader::moveToNextAttribute()</span><br><span class="line">参数：无</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">i、XMLReader::moveToElement</span><br><span class="line">作用：移动焦点到父节点当前属性上</span><br><span class="line">用法：XMLReader::moveToElement()</span><br><span class="line">参数：无</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br><span class="line"></span><br><span class="line">j、XMLReader::close</span><br><span class="line">作用：关闭xml输入</span><br><span class="line">用法：XMLReader::close()</span><br><span class="line">参数：无</span><br><span class="line">返回：如果成功则返回 true，失败则返回 FALSE。</span><br></pre></td></tr></table></figure><h3 id="XMLReader属性"><a href="#XMLReader属性" class="headerlink" title="XMLReader属性"></a>XMLReader属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">a、XMLReader-&gt;attributeCount ;</span><br><span class="line">作用：属性数量</span><br><span class="line"></span><br><span class="line">b、XMLReader-&gt;baseURI ;</span><br><span class="line">作用：节点的url</span><br><span class="line"></span><br><span class="line">c、XMLReader-&gt;depth ;</span><br><span class="line">作用：节点树的层数</span><br><span class="line"></span><br><span class="line">d、XMLReader-&gt;hasAttributes ;</span><br><span class="line">作用：检测是否有属性</span><br><span class="line"></span><br><span class="line">e、XMLReader-&gt;hasValue ;</span><br><span class="line">作用：是否有值</span><br><span class="line"></span><br><span class="line">f、XMLReader-&gt;isEmptyElement ;</span><br><span class="line">作用：是否是空标签</span><br><span class="line"></span><br><span class="line">g、XMLReader-&gt;localName ;</span><br><span class="line">作用：标签内部明</span><br><span class="line"></span><br><span class="line">h、XMLReader-&gt;name ;</span><br><span class="line">作用：标签名</span><br><span class="line"></span><br><span class="line">i、XMLReader-&gt;nodeType ;</span><br><span class="line">作用：节点类型</span><br><span class="line"></span><br><span class="line">j、XMLReader-&gt;value ;</span><br><span class="line">作用：节点文本内容</span><br></pre></td></tr></table></figure><p>————————————————<br>版权声明：本文为CSDN博主「安南子.com」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_45578749/article/details/100131799" target="_blank" rel="noopener">https://blog.csdn.net/weixin_45578749/article/details/100131799</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php-XML&quot;&gt;&lt;a href=&quot;#php-XML&quot; class=&quot;headerlink&quot; title=&quot;php XML&quot;&gt;&lt;/a&gt;php XML&lt;/h1&gt;&lt;h2 id=&quot;DOMDocument&quot;&gt;&lt;a href=&quot;#DOMDocument&quot; class=&quot;he
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP database transaction</title>
    <link href="https://moonclearner.cn/php/cookbook/php_database_transaction.html"/>
    <id>https://moonclearner.cn/php/cookbook/php_database_transaction.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-database-transaction"><a href="#PHP-database-transaction" class="headerlink" title="PHP database transaction"></a>PHP database transaction</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Message</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $db;</span><br><span class="line">    <span class="comment">// $form_errors save post validate error for showing error in pages</span></span><br><span class="line">    <span class="keyword">protected</span> $form_errors = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        set_exception_handler(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="string">'logAndDie'</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> PDO(<span class="string">"sqlite:/tmp/tmp.db"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;beginTransaction();</span><br><span class="line">        pass</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;commit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">valid</span><span class="params">()</span></span>&#123;</span><br><span class="line">        pass</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logAndDie</span><span class="params">(Exception $e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'ERROR: '</span>. htmlentities($e-&gt;getMessage());</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;db-&gt;inTransaction())&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db-&gt;rollback();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-database-transaction&quot;&gt;&lt;a href=&quot;#PHP-database-transaction&quot; class=&quot;headerlink&quot; title=&quot;PHP database transaction&quot;&gt;&lt;/a&gt;PHP database t
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="database" scheme="https://moonclearner.cn/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>PHP dynamically create object</title>
    <link href="https://moonclearner.cn/php/cookbook/php_dynamic_create_object.html"/>
    <id>https://moonclearner.cn/php/cookbook/php_dynamic_create_object.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-dynamically-create-object"><a href="#PHP-dynamically-create-object" class="headerlink" title="PHP dynamically create object"></a>PHP dynamically create object</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$object = <span class="keyword">new</span> ReflectionClass(<span class="string">'PDO'</span>);</span><br><span class="line">$object-&gt;newInstanceArgs(<span class="keyword">array</span>(<span class="string">'arg1'</span>=&gt;$arg1, <span class="string">'arg2'</span>=&gt;$arg2));</span><br></pre></td></tr></table></figure><h1 id="PHP-dynamically-calling-func"><a href="#PHP-dynamically-calling-func" class="headerlink" title="PHP dynamically calling func"></a>PHP dynamically calling func</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$classname = <span class="string">"TestClassName"</span>;</span><br><span class="line">$object = <span class="keyword">new</span> <span class="comment">#classname();</span></span><br><span class="line"></span><br><span class="line">$methodname = <span class="string">"getData"</span>;</span><br><span class="line"></span><br><span class="line">$object-&gt;$methodname(<span class="string">"arg1"</span>, <span class="string">"arg2"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-dynamically-create-object&quot;&gt;&lt;a href=&quot;#PHP-dynamically-create-object&quot; class=&quot;headerlink&quot; title=&quot;PHP dynamically create object&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>build php extension fail phpizse</title>
    <link href="https://moonclearner.cn/php/configure/php_extension_compile_fail.html"/>
    <id>https://moonclearner.cn/php/configure/php_extension_compile_fail.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2020-04-30T07:29:54.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CDPATH-command-not-found"><a href="#CDPATH-command-not-found" class="headerlink" title="CDPATH command not found"></a>CDPATH command not found</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">$</span> make </span><br><span class="line">/home/user/libtool: line 482: CDPATH: command not found</span><br><span class="line">libtool: Version mismatch error.  This is libtool 2.4.2, but the</span><br><span class="line">libtool: definition of this LT_INIT comes from an older release.</span><br><span class="line">libtool: You should recreate aclocal.m4 with macros from libtool 2.4.2</span><br><span class="line">libtool: and run autoconf again.</span><br><span class="line">make: *** [xdebug.lo] Error 63</span><br></pre></td></tr></table></figure><h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><ul><li>aclocal</li><li>libtoolize –force</li><li>autoheader</li><li>autoconf</li></ul><h2 id="solution2"><a href="#solution2" class="headerlink" title="solution2"></a>solution2</h2><ul><li>rm –rf aclocal.m4</li><li>autoreconf</li></ul><h2 id="solution3"><a href="#solution3" class="headerlink" title="solution3"></a>solution3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">If you have error with libtool version after make - way to install:</span><br><span class="line">phpize --clean &amp;&amp; phpize</span><br><span class="line">rm aclocal.m4</span><br><span class="line">aclocal</span><br><span class="line">autoconf</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h1 id="undefined-reference-to-symbol-‘ber-strdup’"><a href="#undefined-reference-to-symbol-‘ber-strdup’" class="headerlink" title="undefined reference to symbol ‘ber_strdup’"></a>undefined reference to symbol ‘ber_strdup’</h1><p>./configure 」沒抓好一些环境变数值</p><h2 id="solution-1"><a href="#solution-1" class="headerlink" title="solution"></a>solution</h2><p>在PHP源码目录下 vi Makefile 找到 EXTRA_LIBS 行，在行末添加 ‘ -llber ‘ 保存退出再次make即可。</p>]]></content>
    
    <summary type="html">
    
      CDPATH command not found
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="configure" scheme="https://moonclearner.cn/tags/configure/"/>
    
  </entry>
  
  <entry>
    <title>PHP PDO error info</title>
    <link href="https://moonclearner.cn/php/cookbook/php_pdo_error_info.html"/>
    <id>https://moonclearner.cn/php/cookbook/php_pdo_error_info.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-PDO-catch-error-info"><a href="#PHP-PDO-catch-error-info" class="headerlink" title="PHP PDO catch error info"></a>PHP PDO catch error info</h1><p><code>`</code>php</p><p>try{<br>    $db = new PDO(‘sqlite:/tmp/tmp.db’);<br>    $db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);<br>    $st = $db-&gt;prepare(‘SELECT * FROM tmp’);<br>    $st-&gt;execute():<br>    while($row = $st-&gt;fetch(PDO:FETCH_NUM)){<br>        print implode(‘,’, $row).”<br>\n”;<br>    }<br>}catch(Exception $e){<br>    print “problem: “ . $e-&gt;getMessage();<br>}</p><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><p>php cookbook 10.10</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-PDO-catch-error-info&quot;&gt;&lt;a href=&quot;#PHP-PDO-catch-error-info&quot; class=&quot;headerlink&quot; title=&quot;PHP PDO catch error info&quot;&gt;&lt;/a&gt;PHP PDO catch 
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="pdo" scheme="https://moonclearner.cn/tags/pdo/"/>
    
  </entry>
  
  <entry>
    <title>PHP session</title>
    <link href="https://moonclearner.cn/php/cookbook/php_session.html"/>
    <id>https://moonclearner.cn/php/cookbook/php_session.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-Session"><a href="#PHP-Session" class="headerlink" title="PHP Session"></a>PHP Session</h1><h2 id="PHP-redirect-url-need-add-phpsessionid"><a href="#PHP-redirect-url-need-add-phpsessionid" class="headerlink" title="PHP redirect url need add phpsessionid"></a>PHP redirect url need add phpsessionid</h2><p>SID is constant value replace phpsessionid<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$redirect_url = <span class="string">'http://www.example.com'</span>;</span><br><span class="line"><span class="keyword">if</span>(defined(<span class="string">'SID'</span>) &amp;&amp; (! <span class="keyword">isset</span>($_COOKIE[session_name()])))&#123;</span><br><span class="line">    $redirect_url .= <span class="string">'?'</span> . SID</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="output-add-rewrite-var-string-name-string-value-bool"><a href="#output-add-rewrite-var-string-name-string-value-bool" class="headerlink" title="output_add_rewrite_var ( string $name , string $value ) : bool"></a>output_add_rewrite_var ( string $name , string $value ) : bool</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">output_add_rewrite_var(<span class="string">'token'</span>, $token);</span><br></pre></td></tr></table></figure><p>此函数给URL重写机制添加名/值对。 这种名值对将被添加到URL（以GET参数的形式）和表单（以input隐藏域的形式），当透明URL重写用 session.use_trans_sid 开启时同样可以添加到session ID。 要注意，绝对URL(<a href="http://example.com/..)不能被重写。" target="_blank" rel="noopener">http://example.com/..)不能被重写。</a></p><h2 id="force-use-cookie-url-not-contain-phpsessionid"><a href="#force-use-cookie-url-not-contain-phpsessionid" class="headerlink" title="force use cookie, url not contain phpsessionid"></a>force use cookie, url not contain phpsessionid</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'session.use_only_cookies'</span>, <span class="keyword">true</span>)</span><br><span class="line"></span><br><span class="line">session_regenerate_id();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-Session&quot;&gt;&lt;a href=&quot;#PHP-Session&quot; class=&quot;headerlink&quot; title=&quot;PHP Session&quot;&gt;&lt;/a&gt;PHP Session&lt;/h1&gt;&lt;h2 id=&quot;PHP-redirect-url-need-add-php
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="session" scheme="https://moonclearner.cn/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>open redirect</title>
    <link href="https://moonclearner.cn/php/secure/Open_Redirect.html"/>
    <id>https://moonclearner.cn/php/secure/Open_Redirect.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-11-20T05:58:39.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="open-redirect"><a href="#open-redirect" class="headerlink" title="open redirect"></a>open redirect</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">"Location: $url"</span>);</span><br></pre></td></tr></table></figure><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">"Location: "</span>.filter_var($url, FILTER_SANITIZE_URL));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;open-redirect&quot;&gt;&lt;a href=&quot;#open-redirect&quot; class=&quot;headerlink&quot; title=&quot;open redirect&quot;&gt;&lt;/a&gt;open redirect&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="web attack" scheme="https://moonclearner.cn/tags/web-attack/"/>
    
  </entry>
  
  <entry>
    <title>PHP protected from crsf attack</title>
    <link href="https://moonclearner.cn/php/secure/php_CRSF_TOKEN.html"/>
    <id>https://moonclearner.cn/php/secure/php_CRSF_TOKEN.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php-protected-from-crsf-attack"><a href="#php-protected-from-crsf-attack" class="headerlink" title="php protected from crsf attack"></a>php protected from crsf attack</h1><h2 id="generate-token"><a href="#generate-token" class="headerlink" title="generate token"></a>generate token</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_SESSION[<span class="string">'token'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (function_exists(<span class="string">'mcrypt_create_iv'</span>)) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'token'</span>] = bin2hex(mcrypt_create_iv(<span class="number">32</span>, MCRYPT_DEV_URANDOM));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $_SESSION[<span class="string">'token'</span>] = bin2hex(openssl_random_pseudo_bytes(<span class="number">32</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$token = $_SESSION[<span class="string">'token'</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="form-use-token"><a href="#form-use-token" class="headerlink" title="form use token"></a>form use token</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSRF<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"token"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $_SESSION['token']; ?&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="request-handler"><a href="#request-handler" class="headerlink" title="request handler"></a>request handler</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST[<span class="string">'token'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (hash_equals($_SESSION[<span class="string">'token'</span>], $_POST[<span class="string">'token'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php-protected-from-crsf-attack&quot;&gt;&lt;a href=&quot;#php-protected-from-crsf-attack&quot; class=&quot;headerlink&quot; title=&quot;php protected from crsf attack&quot;&gt;
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="web attack" scheme="https://moonclearner.cn/tags/web-attack/"/>
    
      <category term="crsf" scheme="https://moonclearner.cn/tags/crsf/"/>
    
  </entry>
  
  <entry>
    <title>PHP protected from sql inject</title>
    <link href="https://moonclearner.cn/php/secure/php_SQL_inject.html"/>
    <id>https://moonclearner.cn/php/secure/php_SQL_inject.html</id>
    <published>2021-07-18T11:28:32.325Z</published>
    <updated>2019-02-27T05:33:54.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-protected-from-sql-inject"><a href="#PHP-protected-from-sql-inject" class="headerlink" title="PHP protected from sql inject"></a>PHP protected from sql inject</h1><h2 id="PDO"><a href="#PDO" class="headerlink" title="PDO"></a>PDO</h2><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db    = <span class="keyword">new</span> PDO(<span class="string">"sqlite:/tmp.db"</span>);</span><br><span class="line">$sql   = <span class="string">"insert into auth (time, user) values(?, ?)"</span>;</span><br><span class="line">$query = $db-&gt;prepare($sql);</span><br><span class="line"><span class="keyword">if</span>($query-&gt;execute(<span class="keyword">array</span>($time, $user)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"insert success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db           = <span class="keyword">new</span> PDO(<span class="string">"sqlite:/tmp.db"</span>);</span><br><span class="line">$sql          = <span class="string">"select * from tmp where ip=? or user=?"</span>;</span><br><span class="line">$query        = $db-&gt;prepare($sql);</span><br><span class="line">$query-&gt;execute(<span class="keyword">array</span>($ip, $user));</span><br><span class="line">$rows = $query-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line">var_dump($rows);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-protected-from-sql-inject&quot;&gt;&lt;a href=&quot;#PHP-protected-from-sql-inject&quot; class=&quot;headerlink&quot; title=&quot;PHP protected from sql inject&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="php" scheme="https://moonclearner.cn/categories/php/"/>
    
    
      <category term="php" scheme="https://moonclearner.cn/tags/php/"/>
    
      <category term="web attack" scheme="https://moonclearner.cn/tags/web-attack/"/>
    
      <category term="sql inject" scheme="https://moonclearner.cn/tags/sql-inject/"/>
    
  </entry>
  
</feed>
